<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fusee.Engine.Core</name>
    </assembly>
    <members>
        <member name="T:Fusee.Engine.Core.Audio">
             <summary>
             The Audio class provides all audio functionality. It is accessible from everywhere.                          
             </summary>
             <remarks>
             Supported file formats are: mp3, ogg, wav, flac, aiff, au, raw, paf, svx, nist, voc,
             ircam, w64, mat4, mat5 pvf, htk, sds, avr, sd2, caf, wve, mpc2k, rf64
             
             Audio can be either buffered completely or be played as a stream.
             
             E.g. : IAudioStreamImp myAudio1;
            
                    myAudio1 = Audio.Instance.LoadFile("AssetStorage/Music.ogg"). 
             
                    myAudio1.play();  
             </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.Audio.LoadFile(System.String,System.Boolean)">
            <summary>
            Loads an audio file.
            </summary>
            <param name="fileName">Path to the file.</param>
            <param name="streaming"><c>true</c> if the audio file shall be streamed; otherwise, <c>false</c>.</param>
            <returns>The audio file as an <see cref="T:Fusee.Engine.Common.IAudioStreamImp"/></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Audio.Stop">
            <summary>
            Stops all <see cref="T:Fusee.Engine.Common.IAudioStreamImp"/>s.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Audio.SetVolume(System.Single)">
            <summary>
            Sets the main volume (0 to 100)
            </summary>
            <param name="val">The value</param>
        </member>
        <member name="M:Fusee.Engine.Core.Audio.GetVolume">
            <summary>
            Gets the main volume.
            </summary>
            <returns>The main value (0 to 100)</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Audio.SetPanning(System.Single)">
            <summary>
            Sets the panning of all <see cref="T:Fusee.Engine.Common.IAudioStreamImp"/>s (-100 to +100)
            </summary>
            <param name="val">The value</param>
        </member>
        <member name="P:Fusee.Engine.Core.Audio.Instance">
            <summary>
            Provides the Instance of the Audio Class.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="T:Fusee.Engine.Core.DummyAudioImp">
            <summary>
            Dummy implementation with no functionality
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.DummyAudioImp.OpenDevice">
            <summary>
            Opens the device.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.DummyAudioImp.CloseDevice">
            <summary>
            Closes the device.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.DummyAudioImp.LoadFile(System.String,System.Boolean)">
            <summary>
            Loads the file.
            </summary>
            <param name="fileName">Name of the file.</param>
            <param name="streaming">if set to <c>true</c> [streaming].</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.DummyAudioImp.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.DummyAudioImp.SetVolume(System.Single)">
            <summary>
            Sets the volume.
            </summary>
            <param name="volume">The volume.</param>
        </member>
        <member name="M:Fusee.Engine.Core.DummyAudioImp.GetVolume">
            <summary>
            Gets the volume.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.DummyAudioImp.SetPanning(System.Single)">
            <summary>
            Sets the panning.
            </summary>
            <param name="val">The value.</param>
        </member>
        <member name="T:Fusee.Engine.Core.DummyAudioStreamImp">
            <summary>
            Dummy audio stream implementation with no functionality.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.DummyAudioStreamImp.Volume">
            <summary>
            Gets and sets the volume.
            </summary>
            <value>
            The volume.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.DummyAudioStreamImp.Loop">
            <summary>
            Gets and sets a value indicating whether this <see cref="T:Fusee.Engine.Core.DummyAudioStreamImp"/> is loop.
            </summary>
            <value>
              <c>true</c> if loop; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.DummyAudioStreamImp.Panning">
            <summary>
            Gets and sets the panning.
            </summary>
            <value>
            The panning.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.DummyAudioStreamImp.Play">
            <summary>
            Plays this stream.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.DummyAudioStreamImp.Play(System.Boolean)">
            <summary>
            Plays this stream as a loop.
            </summary>
            <param name="loop">if set to <c>true</c> [loop].</param>
        </member>
        <member name="M:Fusee.Engine.Core.DummyAudioStreamImp.Pause">
            <summary>
            Pauses this instance.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.DummyAudioStreamImp.Stop">
            <summary>
            Stops this instance.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.AudioStream._asImp">
            <summary>
            For internal purposes. Do not use in application code.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.AudioStream.Volume">
            <summary>
                Gets and sets the volume of this <see cref="T:Fusee.Engine.Common.IAudioStreamImp" /> (0 - 100).
            </summary>
            <value>
                The volume of this <see cref="T:Fusee.Engine.Common.IAudioStreamImp" /> (0 - 100).
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.AudioStream.Loop">
            <summary>
                Gets and sets a value indicating whether this <see cref="T:Fusee.Engine.Common.IAudioStreamImp" /> shall be looped.
            </summary>
            <value>
                <c>true</c> if this <see cref="T:Fusee.Engine.Common.IAudioStreamImp" /> shall be looped; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.AudioStream.Panning">
            <summary>
                Gets and sets the panning of this <see cref="T:Fusee.Engine.Common.IAudioStreamImp" /> (-100 to +100).
            </summary>
            <value>
                The panning of this <see cref="T:Fusee.Engine.Common.IAudioStreamImp" /> (-100 to +100).
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.AudioStream.Play">
            <summary>
                Plays this <see cref="T:Fusee.Engine.Common.IAudioStreamImp" />.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.AudioStream.Play(System.Boolean)">
            <summary>
                Plays this <see cref="T:Fusee.Engine.Common.IAudioStreamImp" />.
            </summary>
            <param name="loop"><c>true</c> if this <see cref="T:Fusee.Engine.Common.IAudioStreamImp" /> shall be looped; otherwise, <c>false</c>.</param>
        </member>
        <member name="M:Fusee.Engine.Core.AudioStream.Pause">
            <summary>
                Pauses this <see cref="T:Fusee.Engine.Common.IAudioStreamImp" />.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.AudioStream.Stop">
            <summary>
                Stops this <see cref="T:Fusee.Engine.Common.IAudioStreamImp" />.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.OBBCalculator">
            <summary>
            Object-Oriented Bounding Box Calculator. Use instances of this class to calculate axis-aligned bounding boxes
            on scenes, list of scene nodes or individual scene nodes. Calculations always include any child nodes.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.OBBCalculator.OBBState">
            <summary>
            Contains the model view state while traversing the scene to generate the OBB.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.OBBCalculator.OBBState.ModelView">
            <summary>
            The model view matrix.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.OBBCalculator.OBBState.#ctor">
            <summary>
            Creates a new instance of type OBBState.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.OBBCalculator.#ctor(Fusee.Engine.Core.Scene.SceneContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.AABBCalculator"/> class.
            </summary>
            <param name="sc">The scene container to calculate an axis-aligned bounding box for.</param>
        </member>
        <member name="M:Fusee.Engine.Core.OBBCalculator.#ctor(System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Scene.SceneNode})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.OBBCalculator"/> class.
            </summary>
            <param name="sncList">The list of scene nodes to calculate an axis-aligned bounding box for.</param>
        </member>
        <member name="M:Fusee.Engine.Core.OBBCalculator.#ctor(Fusee.Engine.Core.Scene.SceneNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.OBBCalculator"/> class.
            </summary>
            <param name="snc">A single scene node to calculate an axis-aligned bounding box for.</param>
        </member>
        <member name="M:Fusee.Engine.Core.OBBCalculator.GetBox">
            <summary>
            Performs the calculation and returns the resulting box on the object(s) passed in the constructor. Any calculation
            always includes a full traversal over all child nodes.
            </summary>
            <returns>The resulting axis-aligned bounding box.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.OBBCalculator.OnTransform(Fusee.Engine.Core.Scene.Transform)">
            <summary>
            Do not call. Used for internal traversal purposes only
            </summary>
            <param name="transform">The transform component.</param>
        </member>
        <member name="M:Fusee.Engine.Core.OBBCalculator.OnMesh(Fusee.Engine.Core.Scene.Mesh)">
            <summary>
            Do not call. Used for internal traversal purposes only
            </summary>
            <param name="mesh">The mesh component.</param>
        </member>
        <member name="M:Fusee.Engine.Core.OBBCalculator.InitState">
            <summary>
            Method is called when traversal starts to initialize the traversal state.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.OBBCalculator.PushState">
            <summary>
            Method is called when going down one hierarchy level while traversing.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.OBBCalculator.PopState">
            <summary>
            Method is called when going up one hierarchy level while traversing.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.AABBCalculator">
            <summary>
            Axis-Aligned Bounding Box Calculator. Use instances of this class to calculate axis-aligned bounding boxes
            on scenes, list of scene nodes or individual scene nodes. Calculations always include any child nodes.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.AABBCalculator.AABBState">
            <summary>
            Contains the model view state while traversing the scene to generate the ABB.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.AABBCalculator.AABBState.ModelView">
            <summary>
            The model view matrix.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.AABBCalculator.AABBState.#ctor">
            <summary>
            Creates a new instance of type AABBState.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.AABBCalculator.#ctor(Fusee.Engine.Core.Scene.SceneContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.AABBCalculator"/> class.
            </summary>
            <param name="sc">The scene container to calculate an axis-aligned bounding box for.</param>
        </member>
        <member name="M:Fusee.Engine.Core.AABBCalculator.#ctor(System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Scene.SceneNode})">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.AABBCalculator"/> class.
            </summary>
            <param name="sncList">The list of scene nodes to calculate an axis-aligned bounding box for.</param>
        </member>
        <member name="M:Fusee.Engine.Core.AABBCalculator.#ctor(Fusee.Engine.Core.Scene.SceneNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.AABBCalculator"/> class.
            </summary>
            <param name="snc">A single scene node to calculate an axis-aligned bounding box for.</param>
        </member>
        <member name="M:Fusee.Engine.Core.AABBCalculator.GetBox">
            <summary>
            Performs the calculation and returns the resulting box on the object(s) passed in the constructor. Any calculation
            always includes a full traversal over all child nodes.
            </summary>
            <returns>The resulting axis-aligned bounding box.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.AABBCalculator.OnTransform(Fusee.Engine.Core.Scene.Transform)">
            <summary>
            Do not call. Used for internal traversal purposes only
            </summary>
            <param name="transform">The transform component.</param>
        </member>
        <member name="M:Fusee.Engine.Core.AABBCalculator.OnMesh(Fusee.Engine.Core.Scene.Mesh)">
            <summary>
            Do not call. Used for internal traversal purposes only
            </summary>
            <param name="mesh">The mesh component.</param>
        </member>
        <member name="M:Fusee.Engine.Core.AABBCalculator.InitState">
            <summary>
            Method is called when traversal starts to initialize the traversal state.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.AABBCalculator.PushState">
            <summary>
            Method is called when going down one hierarchy level while traversing.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.AABBCalculator.PopState">
            <summary>
            Method is called when going up one hierarchy level while traversing.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.BoxShape">
            <summary>
            A box shaped collision object.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.BoxShape._boxShapeImp">
            <summary>
            The implementation object.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.BoxShape.LocalScaling">
            <summary>
            Retrieves or sets the local scaling.
            </summary>
            <value>
            The local scaling.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.BoxShape.HalfExtents">
            <summary>
            Gets a vector containing half of the values of width, height and depth of the box.
            </summary>
            <value>
            The half extents.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.BoxShape.Margin">
            <summary>
            Retrieves or sets the margin.
            </summary>
            <value>
            The size of the collision shape's margin.
            </value>
        </member>
        <member name="T:Fusee.Engine.Core.Bucket`1">
            <summary>
            Node for use in an Grid-like structure.
            </summary>
            <typeparam name="T">Defines the type of the payload.</typeparam>
        </member>
        <member name="P:Fusee.Engine.Core.Bucket`1.Center">
            <summary>
            Center of this Bucket in world space coordinates.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Bucket`1.Size">
            <summary>
            Length, width and height of this Octant.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Bucket`1.#ctor">
            <summary>
            Creates a new instance of type Bucket.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Bucket`1.#ctor(Fusee.Math.Core.double3,System.Double)">
            <summary>
            Creates a new instance of type Bucket.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.CapsuleShape">
            <summary>
            A capsule shaped collision object.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.CapsuleShape.Margin">
            <summary>
            Retrieves or sets the margin.
            </summary>
            <value>
            The size of the collision shape's margin.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.CapsuleShape.LocalScaling">
            <summary>
            Retrieves or sets the local scaling.
            </summary>
            <value>
            The local scaling.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.CapsuleShape.HalfHeight">
            <summary>
            Gets the half of this capsule's height.
            </summary>
            <value>
            Half of the height.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.CapsuleShape.Radius">
            <summary>
            Gets this capsules radius.
            </summary>
            <value>
            The radius.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.CapsuleShape.UpAxis">
            <summary>
            Gets the up axis of the capsule.
            </summary>
            <value>
            The up axis.
            </value>
        </member>
        <member name="T:Fusee.Engine.Core.CollisionShape">
            <summary>
            Base class for various collision shape types.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.CollisionShape._collisionShapeImp">
            <summary>
            The implementation object.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.CollisionShape.Margin">
            <summary>
            Retrieves or sets the margin.
            </summary>
            <value>
            The size of the collision shape's margin.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.CollisionShape.LocalScaling">
            <summary>
            Retrieves or sets the local scaling.
            </summary>
            <value>
            The local scaling.
            </value>
        </member>
        <member name="T:Fusee.Engine.Core.CompiledShaderEffect">
            <summary>
            All compiled information of one <see cref="T:Fusee.Engine.Core.Scene.ShaderEffect"/>.
            A <see cref="T:Fusee.Engine.Core.CompiledShaderEffect"/> can have more than one Pass where each pass contains another shader program.
            Those are saved as a <see cref="T:Fusee.Engine.Core.ShaderProgram"/>s.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.CompiledShaderEffect.ShaderPrograms">
            <summary>
            The compiled shader programs for every pass.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.CompiledShaderEffect.ParamsPerPass">
            <summary>
            All parameters (as references), saved per pass. See <see cref="T:Fusee.Engine.Core.EffectParam"/> on the parameter infos that are saved.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.CompiledShaderEffect.Parameters">
            <summary>
            The shader parameters of all passes. See <see cref="T:Fusee.Engine.Core.EffectParam"/> on the parameter infos that are saved.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.CompoundShape">
            <summary>
            A collision shape made up of other shapes of various types.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.CompoundShape.AddChildShape(Fusee.Math.Core.float4x4,Fusee.Engine.Core.BoxShape)">
            <summary>
            Adds a box as a child shape.
            </summary>
            <param name="localTransform">The local transformation of the child shape.</param>
            <param name="childShape">The child shape.</param>
        </member>
        <member name="M:Fusee.Engine.Core.CompoundShape.AddChildShape(Fusee.Math.Core.float4x4,Fusee.Engine.Core.SphereShape)">
            <summary>
            Adds a sphere as a child shape.
            </summary>
            <param name="localTransform">The local transformation of the child shape.</param>
            <param name="childShape">The child shape.</param>
        </member>
        <member name="M:Fusee.Engine.Core.CompoundShape.AddChildShape(Fusee.Math.Core.float4x4,Fusee.Engine.Core.CapsuleShape)">
            <summary>
            Adds a capsule as a child shape.
            </summary>
            <param name="localTransform">The local transformation of the child shape.</param>
            <param name="childShape">The child shape.</param>
        </member>
        <member name="M:Fusee.Engine.Core.CompoundShape.AddChildShape(Fusee.Math.Core.float4x4,Fusee.Engine.Core.ConeShape)">
            <summary>
            Adds a cone as a child shape.
            </summary>
            <param name="localTransform">The local transformation of the child shape.</param>
            <param name="childShape">The child shape.</param>
        </member>
        <member name="M:Fusee.Engine.Core.CompoundShape.AddChildShape(Fusee.Math.Core.float4x4,Fusee.Engine.Core.CylinderShape)">
            <summary>
            Adds a cylinder as a child shape.
            </summary>
            <param name="localTransform">The local transformation of the child shape.</param>
            <param name="childShape">The child shape.</param>
        </member>
        <member name="M:Fusee.Engine.Core.CompoundShape.AddChildShape(Fusee.Math.Core.float4x4,Fusee.Engine.Core.MultiSphereShape)">
            <summary>
            Adds a multi-sphere as a child shape.
            </summary>
            <param name="localTransform">The local transformation of the child shape.</param>
            <param name="childShape">The child shape.</param>
        </member>
        <member name="M:Fusee.Engine.Core.CompoundShape.AddChildShape(Fusee.Math.Core.float4x4,Fusee.Engine.Core.EmptyShape)">
            <summary>
            Adds an empty shape as a child shape.
            </summary>
            <param name="localTransform">The local transformation of the child shape.</param>
            <param name="childShape">The child shape.</param>
        </member>
        <member name="M:Fusee.Engine.Core.CompoundShape.CalculatePrincipalAxisTransform(System.Single[],Fusee.Math.Core.float4x4,Fusee.Math.Core.float3)">
            <summary>
            Calculates the principal transformation axis.
            </summary>
            <param name="masses">The masses.</param>
            <param name="principal">The principal axis.</param>
            <param name="inertia">The inertia.</param>
        </member>
        <member name="P:Fusee.Engine.Core.CompoundShape.Margin">
            <summary>
            Retrieves or sets the margin.
            </summary>
            <value>
            The size of the collision shape's margin.
            </value>
        </member>
        <member name="T:Fusee.Engine.Core.ConeShape">
            <summary>
             Defines a cone-shaped collision object
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ConeShape.Margin">
            <summary>
            Retrieves or sets the margin.
            </summary>
            <value>
            The size of the collision shape's margin.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.ConeShape.LocalScaling">
            <summary>
            Retrieves or sets the local scaling.
            </summary>
            <value>
            The local scaling.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.ConeShape.ConeUpIndex">
            <summary>
            Gets and sets the index of the cone's up axis
            </summary>
            <value>
            The index of cone's up axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.ConeShape.Height">
            <summary>
            Gets the cone's height along the up axis.
            </summary>
            <value>
            The height.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.ConeShape.Radius">
            <summary>
            Gets the cone's radius.
            </summary>
            <value>
            The radius.
            </value>
        </member>
        <member name="T:Fusee.Engine.Core.ConeTwistConstraint">
            <summary>
            A cone twist constraint
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ConeTwistConstraint.AFrame">
            <summary>
            Gets the reference frame of object a.
            </summary>
            <value>
            a's reference frame.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.ConeTwistConstraint.BFrame">
            <summary>
            Gets the reference frame of object b.
            </summary>
            <value>
            b's reference frame.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.ConeTwistConstraint.CalcAngleInfo">
            <summary>
            Calculates the angle information.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ConeTwistConstraint.CalcAngleInfo2(Fusee.Math.Core.float4x4,Fusee.Math.Core.float4x4,Fusee.Math.Core.float4x4,Fusee.Math.Core.float4x4)">
            <summary>
            Calculates the angle info 2.
            </summary>
            <param name="transA">The trans a.</param>
            <param name="transB">The trans b.</param>
            <param name="invInertiaWorldA">The inv inertia world a.</param>
            <param name="invInertiaWorldB">The inv inertia world b.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ConeTwistConstraint.EnableMotor(System.Boolean)">
            <summary>
            Enables the motor functionality.
            </summary>
            <param name="b">if set to <c>true</c> enables motor behavior.</param>
        </member>
        <member name="P:Fusee.Engine.Core.ConeTwistConstraint.FixThresh">
            <summary>
            Gets and sets the fix threshold.
            </summary>
            <value>
            The fix thresh.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.ConeTwistConstraint.FrameOffsetA">
            <summary>
            Gets the frame offset of object a.
            </summary>
            <value>
            The frame offset of a.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.ConeTwistConstraint.FrameOffsetB">
            <summary>
            Gets the frame offset of object b.
            </summary>
            <value>
            The frame offset of b.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.ConeTwistConstraint.GetPointForAngle(System.Single,System.Single)">
            <summary>
            Gets the point for angle.
            </summary>
            <param name="fAngleInRadius">The f angle in radius.</param>
            <param name="fLength">Length of the f.</param>
            <returns></returns>
        </member>
        <member name="P:Fusee.Engine.Core.ConeTwistConstraint.IsPastSwingLimit">
            <summary>
            Gets a value indicating whether this instance is past swing limit.
            </summary>
            <value>
            <c>true</c> if this instance is past swing limit; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.ConeTwistConstraint.SetAngularOnly(System.Boolean)">
            <summary>
            Sets the angular only.
            </summary>
            <param name="angularOnly">if set to <c>true</c> [angular only].</param>
        </member>
        <member name="M:Fusee.Engine.Core.ConeTwistConstraint.SetDamping(System.Single)">
            <summary>
            Sets the damping.
            </summary>
            <param name="damping">The damping.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ConeTwistConstraint.SetLimit(System.Int32,System.Single)">
            <summary>
            Sets the limit.
            </summary>
            <param name="limitIndex">Index of the limit.</param>
            <param name="limitValue">The limit value.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ConeTwistConstraint.SetLimit(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Sets the limit.
            </summary>
            <param name="swingSpan1">The swing span1.</param>
            <param name="swingSpan2">The swing span2.</param>
            <param name="twistSpan">The twist span.</param>
            <param name="softness">The softness.</param>
            <param name="biasFactor">The bias factor.</param>
            <param name="relaxationFactor">The relaxation factor.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ConeTwistConstraint.SetMaxMotorImpulse(System.Single)">
            <summary>
            Sets the maximum motor impulse.
            </summary>
            <param name="maxMotorImpulse">The maximum motor impulse.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ConeTwistConstraint.SetMaxMotorImpulseNormalized(System.Single)">
            <summary>
            Sets the normalized maximum motor impulse.
            </summary>
            <param name="maxMotorImpulse">The maximum motor impulse.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ConeTwistConstraint.SetMotorTarget(Fusee.Math.Core.Quaternion)">
            <summary>
            Sets the motor target.
            </summary>
            <param name="q">The q.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ConeTwistConstraint.SetMotorTargetInConstraintSpace(Fusee.Math.Core.Quaternion)">
            <summary>
            Sets the motor target in constraint space.
            </summary>
            <param name="q">The q.</param>
        </member>
        <member name="P:Fusee.Engine.Core.ConeTwistConstraint.SolveSwingLimit">
            <summary>
            Gets the solve swing limit.
            </summary>
            <value>
            The solve swing limit.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.ConeTwistConstraint.SolveTwistLimit">
            <summary>
            Gets the solve twist limit.
            </summary>
            <value>
            The solve twist limit.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.ConeTwistConstraint.SwingSpan1">
            <summary>
            Gets the swing span1.
            </summary>
            <value>
            The swing span1.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.ConeTwistConstraint.SwingSpan2">
            <summary>
            Gets the swing span2.
            </summary>
            <value>
            The swing span2.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.ConeTwistConstraint.TwistAngle">
            <summary>
            Gets the twist angle.
            </summary>
            <value>
            The twist angle.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.ConeTwistConstraint.TwistLimitSign">
            <summary>
            Gets the twist limit sign.
            </summary>
            <value>
            The twist limit sign.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.ConeTwistConstraint.TwistSpan">
            <summary>
            Gets the twist span.
            </summary>
            <value>
            The twist span.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.ConeTwistConstraint.UpdateRhs(System.Single)">
            <summary>
            Updates the RHS.
            </summary>
            <param name="timeStep">The time step.</param>
        </member>
        <member name="P:Fusee.Engine.Core.ConeTwistConstraint.RigidBodyA">
            <summary>
            Gets the rigid body a.
            </summary>
            <value>
            The rigid body a.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.ConeTwistConstraint.RigidBodyB">
            <summary>
            Gets the rigid body b.
            </summary>
            <value>
            The rigid body b.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.ConeTwistConstraint.GetUid">
            <summary>
            Gets the uid.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.ConvexHullShape">
            <summary>
            This is the fastest kind of arbitrary shape. 
            It is defined by a cloud of vertices but the shape formed is the smallest convex shape that encloses the vertices. 
            For making a convex dynamic shape like a TV, this is ideal. 
            Make sure to reduce the number of vertices below say 100.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ConvexHullShape.AddPoint(Fusee.Math.Core.float3)">
            <summary>
            Add a vertex to the cloud of vertices.
            There can't be added any vertices to the Shape once it has been added to a rigidbody
            </summary>
            <param name="point">The vertex to add.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ConvexHullShape.GetScaledPoint(System.Int32)">
            <summary>
            Gets the scaled point by index from the cloud of vertices.
            </summary>
            <param name="index">The index of the point.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ConvexHullShape.GetUnscaledPoints">
            <summary>
            Gets the unscaled points of the cloud of vertices.
            </summary>
            <returns>An array of unscaled vertices.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.ConvexHullShape.GetNumPoints">
            <summary>
            Gets the number of points of the cloud of vertices.
            </summary>
            <returns>The number of points.</returns>
        </member>
        <member name="T:Fusee.Engine.Core.CylinderShape">
            <summary>
            Implements a cylinder shape.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.CylinderShape.Margin">
            <summary>
            Retrieves or sets the margin.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.CylinderShape.LocalScaling">
            <summary>
            Gets and sets the local scaling of the cylinder shape.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.CylinderShape.HalfExtents">
            <summary>
            Gets the half extents of the cylinder shape.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.CylinderShape.Radius">
            <summary>
            Returns the radius of the cylinder shape.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.CylinderShape.UpAxis">
            <summary>
            Returns the up axis of the cylinder shape.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.DynamicWorld.Gravity">
            <summary>
            Returns the gravity value.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.DynamicWorld.StepSimulation(System.Single,System.Int32,System.Single)">
            <summary>
            Returns the step simulation.
            </summary>
            <param name="timeSteps"></param>
            <param name="maxSubSteps"></param>
            <param name="fixedTimeSteps"></param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.DynamicWorld.GetRigidBody(System.Int32)">
            <summary>
            Returns the rigidbody.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.DynamicWorld.NumberRigidBodies">
            <summary>
            Returns the number of rigid body´s.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.DynamicWorld.NumberConstraints">
            <summary>
            Returns the number of constraints.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.DynamicWorld.Dispose">
            <summary>
            Disposes the rigid body.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.EmptyShape">
            <summary>
            Implements an empty shape as collision shape.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.EmptyShape.Margin">
            <summary>
            Gets and sets the margin for the empty shape.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.GlyphOnMap">
            <summary>
            Used in conjunction with a <see cref="T:Fusee.Engine.Core.FontMap"/> containing information about
            a rendered character (glyph) on a font map texture.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.GlyphOnMap.BitmapW">
            <summary>
                The width of this char on the font map texture.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.GlyphOnMap.BitmapH">
            <summary>
                The height of this char on the font map texture.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.GlyphOnMap.BitmapL">
            <summary>
                The left border of this char on the font map texture.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.GlyphOnMap.BitmapT">
            <summary>
                The top border of this char on the font map texture.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.GlyphOnMap.TexOffX">
            <summary>
                The x-offset of this char on the font map texture.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.GlyphOnMap.TexOffY">
            <summary>
                The y-offset of this char on the font map texture.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.FontMap">
            <summary>
            A FontMap creates an <see cref="P:Fusee.Engine.Core.FontMap.Image"/> containing a subset of rendered glyphs of a given Font.
            In addition a FontMap provides information about each glyph on the image such as its pixel position
            on the image. Such an image can be used together with the provided information to create geometry
            consisting of individual quads with each quad displaying a single character of a text string.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.FontMap.Uptodate">
            <summary>
            Gets a value indicating whether this <see cref="T:Fusee.Engine.Core.FontMap"/> is up-to-date.
            </summary>
            <value>
              <c>true</c> if up-to-date; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.FontMap.#ctor(Fusee.Base.Core.Font,System.UInt32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.FontMap"/> class.
            </summary>
            <param name="font">The font to be used. See <see cref="P:Fusee.Engine.Core.FontMap.Font"/>.</param>
            <param name="pixelHeight">Height in pixels of a character. See <see cref="P:Fusee.Engine.Core.FontMap.PixelHeight"/>.</param>
            <param name="alphabet">The alphabet. See <see cref="P:Fusee.Engine.Core.FontMap.Alphabet"/>.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:Fusee.Engine.Core.FontMap.Image">
            <summary>
            Gets the image containing all characters specified in the <see cref="P:Fusee.Engine.Core.FontMap.Alphabet"/>. Use this image
            as a texture used by individual rectangles each displaying a single character. Use the information
            retrieved from <see cref="M:Fusee.Engine.Core.FontMap.GetGlyphOnMap(System.UInt32)"/> to position the character rectangles and to align 
            their texture coordinates.
            </summary>
            <value>
            The font image.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.FontMap.FixTextKerning(Fusee.Math.Core.float3[],System.String,System.Single)">
            <summary>
            Fixes the kerning of a text (if possible). ToDo: Instead of fixing existing geometry provide methods to create kerned geometry.
            </summary>
            <param name="vertices">The vertices.</param>
            <param name="text">The text.</param>
            <param name="scaleX">The scale x (OpenGL scaling factor).</param>
            <returns>The fixed vertices as an array of <see cref="T:Fusee.Math.Core.float3"/>.</returns>
        </member>
        <member name="P:Fusee.Engine.Core.FontMap.Font">
            <summary>
            Gets and sets the font displayed on this font map.
            </summary>
            <value>
            The font.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.FontMap.PixelHeight">
            <summary>
            Gets and sets the pixel height of each character on this font. This setting will affect the 
            size of the font <see cref="P:Fusee.Engine.Core.FontMap.Image"/> , so be careful with this setting.
            </summary>
            <value>
            The height in pixels of an individual character.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.FontMap.Alphabet">
            <summary>
            Gets and sets the list of characters that should be present on the font <see cref="P:Fusee.Engine.Core.FontMap.Image"/>.
            </summary>
            <value>
            The alphabet.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.FontMap.GetGlyphOnMap(System.UInt32)">
            <summary>
            Gets the glyph on map information for the given character/glyph. This information can be used to create geometry textured with on single 
            character from the font <see cref="P:Fusee.Engine.Core.FontMap.Image"/>.
            </summary>
            <param name="c">The character to obtain information for.</param>
            <returns>The <see cref="T:Fusee.Engine.Core.GlyphOnMap"/> record for the given character containing information where on the texture the glyph resides.</returns>
        </member>
        <member name="T:Fusee.Engine.Core.FusSceneConverter">
            <summary>
            Use <see cref="M:Fusee.Engine.Core.FusSceneConverter.ConvertFrom(Fusee.Serialization.FusFile)"/> and <see cref="M:Fusee.Engine.Core.FusSceneConverter.ConvertTo(Fusee.Engine.Core.Scene.SceneContainer)"/>, to create new high/low level graph from a low/high level graph (made out of scene nodes and components)
            in order to have each visited element converted and/or split into its high/low level, render-ready/serialization-ready components.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.FusSceneConverter.ConvertFrom(Fusee.Serialization.FusFile)">
            <summary>
            Traverses the given SceneContainer and creates new high level graph <see cref="N:Fusee.Engine.Core.Scene"/> by converting and/or splitting its components into the high level equivalents.
            </summary>
            <param name="fus">The FusFile to convert.</param>
        </member>
        <member name="M:Fusee.Engine.Core.FusSceneConverter.ConvertTo(Fusee.Engine.Core.Scene.SceneContainer)">
            <summary>
            Traverses the given SceneContainer and creates new high low level graph <see cref="T:Fusee.Serialization.FusFile"/> by converting and/or splitting its components into the low level equivalents.
            </summary>
            <param name="sc">The Scene to convert.</param>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.PopState">
            <summary>
            Method is called when going up one hierarchy level while traversing. Override this method to perform pop on any self-defined state.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.ConvFusNode(Fusee.Serialization.V1.FusNode)">
            <summary>
            Converts the FusNode container.
            </summary>
            <param name="snc"></param>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.ConvAnimation(Fusee.Serialization.V1.FusAnimation)">
            <summary>
             Converts the animation component.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.ConvXForm(Fusee.Serialization.V1.FusXForm)">
            <summary>
             Converts the XForm component.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.ConvXFormText(Fusee.Serialization.V1.FusXFormText)">
            <summary>
             Converts the XFormText component.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.ConvCanvasTransform(Fusee.Serialization.V1.FusCanvasTransform)">
            <summary>
             Converts the CanvasTransform component.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.ConvRectTransform(Fusee.Serialization.V1.FusRectTransform)">
            <summary>
             Converts the RectTransform component.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.ConvTransform(Fusee.Serialization.V1.FusTransform)">
            <summary>
            Converts the transform component.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.ConvMaterial(Fusee.Serialization.V1.FusMaterial)">
            <summary>
            Converts the material.
            </summary>
            <param name="matComp"></param>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.ConvMaterial(Fusee.Serialization.V1.FusMaterialPBR)">
            <summary>
            Converts the physically based rendering component
            </summary>
            <param name="matComp"></param>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.ConvCamComp(Fusee.Serialization.V1.FusCamera)">
            <summary>
            Converts the shader.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.ConvMesh(Fusee.Serialization.V1.FusMesh)">
            <summary>
            Converts the mesh.
            </summary>
            <param name="m">The mesh to convert.</param>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.ConvLight(Fusee.Serialization.V1.FusLight)">
            <summary>
            Adds the light component.
            </summary>
            <param name="l"></param>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.ConvBone(Fusee.Serialization.V1.FusBone)">
            <summary>
            Adds the bone component.
            </summary>
            <param name="bone"></param>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.ConVWeight(Fusee.Serialization.V1.FusWeight)">
            <summary>
            Converts the weight component.
            </summary>
            <param name="w"></param>
        </member>
        <member name="M:Fusee.Engine.Core.FusFileToSceneConvertV1.ConvOctant(Fusee.Serialization.V1.FusOctant)">
            <summary>
            Converts the octant.
            </summary>
            <param name="cc"></param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.PopState">
            <summary>
            Method is called when going up one hierarchy level while traversing. Override this method to perform pop on any self-defined state.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.ConvSceneNode(Fusee.Engine.Core.Scene.SceneNode)">
            <summary>
            Converts the SceneNode container.
            </summary>
            <param name="snc"></param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.ConvAnimation(Fusee.Engine.Core.Scene.Animation)">
            <summary>
             Converts the animation component.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.ConvXForm(Fusee.Engine.Core.Scene.XForm)">
            <summary>
             Converts the XForm component.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.ConvXFormText(Fusee.Engine.Core.Scene.XFormText)">
            <summary>
             Converts the XFormText component.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.ConvCanvasTransform(Fusee.Engine.Core.Scene.CanvasTransform)">
            <summary>
             Converts the CanvasTransform component.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.ConvRectTransform(Fusee.Engine.Core.Scene.RectTransform)">
            <summary>
             Converts the RectTransform component.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.ConvTransform(Fusee.Engine.Core.Scene.Transform)">
            <summary>
            Converts the transform component.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.ConvShaderEffect(Fusee.Engine.Core.Scene.ShaderEffect)">
            <summary>
            Converts the shader effect.
            </summary>
            <param name="fx"></param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.ConvCamComp(Fusee.Engine.Core.Scene.Camera)">
            <summary>
            Converts the shader.
            </summary>
            <param name="cc">The camera to convert.</param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.ConvMesh(Fusee.Engine.Core.Scene.Mesh)">
            <summary>
            Converts the mesh.
            </summary>
            <param name="m">The mesh to convert.</param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.ConvLight(Fusee.Engine.Core.Scene.Light)">
            <summary>
            Adds the light component.
            </summary>
            <param name="l"></param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.ConvCamera(Fusee.Engine.Core.Scene.Camera)">
            <summary>
            Converts the camera.
            </summary>
            <param name="cam"></param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.ConvOctant(Fusee.Engine.Core.Scene.Octant)">
            <summary>
            Converts the octant.
            </summary>
            <param name="oct"></param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.ConvBone(Fusee.Engine.Core.Scene.Bone)">
            <summary>
            Adds the bone component.
            </summary>
            <param name="bone"></param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneToFusFileConvertV1.ConVWeight(Fusee.Engine.Core.Scene.Weight)">
            <summary>
            Converts the weight component.
            </summary>
            <param name="w"></param>
        </member>
        <member name="T:Fusee.Engine.Core.GamePadDevice">
            <summary>
            Special case of an <see cref="T:Fusee.Engine.Core.InputDevice"/> identifying itself as a <see cref="F:Fusee.Engine.Common.DeviceCategory.GameController"/>.
            Defines convenience methods to access the typical gamepad axes and buttons. Registers
            the gamepad dpad axes.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.GamePadDevice.#ctor(Fusee.Engine.Common.IInputDeviceImp)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.GamePadDevice"/> class.
            </summary>
            <param name="inpDeviceImp">The platform dependent connector to the underlying physical device.</param>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.LSX">
            <summary>
            Gets the left stick´s x value.
            </summary>
            <value>
            Movement from the zeroing point of the left analog stick in x direction.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.LSY">
            <summary>
            Gets the left stick´s y value.
            </summary>
            <value>
            Movement from the zeroing point of the left analog stick in y direction.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.RSX">
            <summary>
            Gets the right stick´s x value.
            </summary>
            <value>
            Movement from the zeroing point of the right analog stick in x direction.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.RSY">
            <summary>
            Gets the right stick´s y value.
            </summary>
            <value>
            Movement from the zeroing point of the right analog stick in y direction.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.LT">
            <summary>
            Gets the left trigger´s y value
            </summary>
            <value>
            Movement from the upmost point of the left trigger.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.RT">
            <summary>
            Gets the right trigger´s y value
            </summary>
            <value>
            Movement from the upmost point of the right trigger.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.XDPad">
            <summary>
            Retrieves the current dpad movement in x direction. 
            </summary>
            <value>
            The x movement.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.YDPad">
            <summary>
            Retrieves the current dpad movement y direction. 
            </summary>
            <value>
            The y movement.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.LXDesc">
            <summary>
            Retrieves information about the Lx axis.
            </summary>
            <value>
            The description for the Lx axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.LYDesc">
            <summary>
            Retrieves information about the Ly axis.
            </summary>
            <value>
            The description for the Ly axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.RXDesc">
            <summary>
            Retrieves information about the Rx axis.
            </summary>
            <value>
            The description for the Rx axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.RYDesc">
            <summary>
            Retrieves information about the Ry axis.
            </summary>
            <value>
            The description for the Ry axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.LTDesc">
            <summary>
            Retrieves information about the LT axis.
            </summary>
            <value>
            The description for the LT axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.RTDesc">
            <summary>
            Retrieves information about the RT axis.
            </summary>
            <value>
            The description for the RT axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.XDPadDesc">
            <summary>
            Retrieves information about the x dpad axis.
            </summary>
            <value>
            The description for the x dpad axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.YDPadDesc">
            <summary>
            Retrieves information about the y dpad axis.
            </summary>
            <value>
            The description for the y dpad  axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.AButton">
            <summary>
            Retrieves the current state of the a button.
            </summary>
            <value>
            <c>true</c> if the a button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.XButton">
            <summary>
            Retrieves the current state of the x button.
            </summary>
            <value>
            <c>true</c> if the x button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.YButton">
            <summary>
            Retrieves the current state of the y button.
            </summary>
            <value>
            <c>true</c> if the y button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.BButton">
            <summary>
            Retrieves the current state of the b button.
            </summary>
            <value>
            <c>true</c> if the b button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.StartButton">
            <summary>
            Retrieves the current state of the start button.
            </summary>
            <value>
            <c>true</c> if the start button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.BackButton">
            <summary>
            Retrieves the current state of the back button.
            </summary>
            <value>
            <c>true</c> if the back button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.LeftButton">
            <summary>
            Retrieves the current state of the left button.
            </summary>
            <value>
            <c>true</c> if the left button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.RightButton">
            <summary>
            Retrieves the current state of the right button.
            </summary>
            <value>
            <c>true</c> if the right button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.L3Button">
            <summary>
            Retrieves the current state of the L3 button.
            </summary>
            <value>
            <c>true</c> if the L3 button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.R3Button">
            <summary>
            Retrieves the current state of the R3 button.
            </summary>
            <value>
            <c>true</c> if the R3 button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.DPadUpButton">
            <summary>
            Retrieves the current state of the dpadup button.
            </summary>
            <value>
            <c>true</c> if the dpadup button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.DPadDownButton">
            <summary>
            Retrieves the current state of the dpaddown button.
            </summary>
            <value>
            <c>true</c> if the dpaddown button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.DPadLeftButton">
            <summary>
            Retrieves the current state of the dpadleft button.
            </summary>
            <value>
            <c>true</c> if the dpadleft button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.DPadRightButton">
            <summary>
            Retrieves the current state of the dpadright button.
            </summary>
            <value>
            <c>true</c> if the dpadright button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.AButtonDesc">
            <summary>
            Retrieves information about the a button.
            </summary>
            <value>
            The description for the a button.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.XDesc">
            <summary>
            Retrieves information about the x button.
            </summary>
            <value>
            The description for the x button.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.YButtonDesc">
            <summary>
            Retrieves information about the y button.
            </summary>
            <value>
            The description for the y button.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.BButtonDesc">
            <summary>
            Retrieves information about the b button.
            </summary>
            <value>
            The description for the b button.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.StartDesc">
            <summary>
            Retrieves information about the start button.
            </summary>
            <value>
            The description for the start button.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.BackButtonDesc">
            <summary>
            Retrieves information about the back button.
            </summary>
            <value>
            The description for the back button.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.LeftButtonDesc">
            <summary>
            Retrieves information about the left button.
            </summary>
            <value>
            The description for the left button.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.RightDesc">
            <summary>
            Retrieves information about the right button.
            </summary>
            <value>
            The description for the right button.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.L3ButtonDesc">
            <summary>
            Retrieves information about the L3 button.
            </summary>
            <value>
            The description for the L3 button.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.R3ButtonDesc">
            <summary>
            Retrieves information about the R3 button.
            </summary>
            <value>
            The description for the R3 button.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.DPadUpDesc">
            <summary>
            Retrieves information about the dpadup button.
            </summary>
            <value>
            The description for the dpadup button.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.DPadDButtonDesc">
            <summary>
            Retrieves information about the dpaddown button.
            </summary>
            <value>
            The description for the dpaddown button.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.DPadLeftDesc">
            <summary>
            Retrieves information about the dpadleft button.
            </summary>
            <value>
            The description for the dpadleft button.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.GamePadDevice.DPadRightButtonDesc">
            <summary>
            Retrieves information about the dpadright button.
            </summary>
            <value>
            The description for the dpadright button.
            </value>
        </member>
        <member name="T:Fusee.Engine.Core.Generic6DofConstraint">
            <summary>
            Constraints for a generic six degrees of freedom device.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Generic6DofConstraint.AngularLowerLimit">
            <summary>
            Returns the lower limit for an angle.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Generic6DofConstraint.AngularUpperLimit">
            <summary>
            Returns the upper limit for an angle.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Generic6DofConstraint.CalcAnchorPos">
            <summary>
            returns the anchor position.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Generic6DofConstraint.CalculateTransforms">
            <summary>
            TBD
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Generic6DofConstraint.CalculateTransforms(Fusee.Math.Core.float4x4,Fusee.Math.Core.float4x4)">
            <summary>
            TBD
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Generic6DofConstraint.CalculatedTransformA">
            <summary>
            TBD
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Generic6DofConstraint.CalculatedTransformB">
            <summary>
            TBD
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Generic6DofConstraint.FrameOffsetA">
            <summary>
            TBD
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Generic6DofConstraint.FrameOffsetB">
            <summary>
            TBD
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Generic6DofConstraint.GetAngle(System.Int32)">
            <summary>
            Returns the value for a 6Dof axis.
            </summary>
            <param name="axisIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Generic6DofConstraint.GetAxis(System.Int32)">
            <summary>
            Returns the axis of a 6Dof device.
            </summary>
            <param name="axisIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Generic6DofConstraint.GetRelativePivotPosition(System.Int32)">
            <summary>
            TBD
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Generic6DofConstraint.IsLimited(System.Int32)">
            <summary>
            Returns if the limit index is limited.
            </summary>
            <param name="limitIndex"></param>
            <returns></returns>
        </member>
        <member name="P:Fusee.Engine.Core.Generic6DofConstraint.LinearLowerLimit">
            <summary>
            TBD
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Generic6DofConstraint.LinearUpperLimit">
            <summary>
            TBD
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Generic6DofConstraint.SetAxis(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            TBD
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Generic6DofConstraint.SetFrames(Fusee.Math.Core.float4x4,Fusee.Math.Core.float4x4)">
            <summary>
            TBD
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Generic6DofConstraint.SetLimit(System.Int32,System.Single,System.Single)">
            <summary>
            Sets the limits for an axis.
            </summary>
            <param name="axis"></param>
            <param name="lo"></param>
            <param name="hi"></param>
        </member>
        <member name="M:Fusee.Engine.Core.Generic6DofConstraint.TestAngularLimitMotor(System.Int32)">
            <summary>
            TBD
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Generic6DofConstraint.UseFrameOffset">
            <summary>
            TBD
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Generic6DofConstraint.UpdateRhs(System.Single)">
            <summary>
            TBD
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Generic6DofConstraint.RigidBodyA">
            <summary>
            Returns the rigid body a.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Generic6DofConstraint.RigidBodyB">
            <summary>
            Returns the rigid body b.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Generic6DofConstraint.GetUid">
            <summary>
            Returns the Uid.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.Face">
            <summary>
            A container that stores indices for vertices, normals and texture coordinates.
            The values are used for conversion to different geometry face formats, e.g. Triangles.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Face.InxVert">
            <summary>
            The inx vert
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Face.InxNormal">
            <summary>
            The inx normal
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Face.InxTexCoord">
            <summary>
            The inx tex coord
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Geometry">
            <summary>
            Stores three dimensional, polygonal geometry and provides methods for manipulation.
            To actually render the geometry in the engine, convert Geometry to <see cref="T:Fusee.Engine.Core.Scene.Mesh"/> objects.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Geometry.Vertices">
            <summary>
            The list of vertices (3D positions).
            </summary>
            <value>
            The vertices.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Geometry.Normals">
            <summary>
            Gets and sets the normals.
            </summary>
            <value>
            The normals.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Geometry.TexCoords">
            <summary>
            Gets and sets the texture coordinates.
            </summary>
            <value>
            The texture coordinates.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Geometry.Faces">
            <summary>
            Gets and sets the faces.
            </summary>
            <value>
            The faces.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.Geometry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.Geometry"/> class.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Geometry.AddVertex(Fusee.Math.Core.double3)">
            <summary>
            Adds a vertex.
            </summary>
            <param name="v">A 3D vector.</param>
            <returns>The current vertex count.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Geometry.AddTexCoord(Fusee.Math.Core.double2)">
            <summary>
            Adds the texture coordinates.
            </summary>
            <param name="uv">Texture coordinate</param>
            <returns>The count of <see cref="P:Fusee.Engine.Core.Geometry.TexCoords"/>.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Geometry.AddNormal(Fusee.Math.Core.double3)">
            <summary>
            Adds the normal.
            </summary>
            <param name="normal">The normal.</param>
            <returns>The count of <see cref="P:Fusee.Engine.Core.Geometry.Normals"/>.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Geometry.AddFace(System.Int32[],System.Int32[],System.Int32[])">
            <summary>
            Adds the face.
            </summary>
            <param name="vertInx">The vert inx.</param>
            <param name="texCoordInx">The tex coord inx.</param>
            <param name="normalInx">The normal inx.</param>
            <returns>The face count as integer value.</returns>
            <exception cref="T:System.ArgumentNullException">vertInx</exception>
            <exception cref="T:System.ArgumentException">
            "Vertex index out of range: vertInx[i]"
            or
            "Number of texture coordinate indices must match number of vertex indices"
            or
            "Texture coordinate index out of range: texCoordInx[i]"
            or
            "Number of normal indices must match number of vertex indices"
            or
            "Normal index out of range: normalInx[i]"
            </exception>
        </member>
        <member name="P:Fusee.Engine.Core.Geometry.HasNormals">
            <summary>
            Gets a value indicating whether this instance has normals.
            </summary>
            <value>
            <c>true</c> if this instance has normals; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Geometry.HasTexCoords">
            <summary>
            Gets a value indicating whether this instance has texture coordinates.
            </summary>
            <value>
            <c>true</c> if this instance has texture coordinates; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.Geometry.GetAllFacesContainingVertex(System.Int32,System.Collections.Generic.IList{System.Int32}@)">
            <summary>
            Gets all faces containing a certain vertex.
            </summary>
            <param name="iV">The index of the vertex.</param>
            <param name="vertInFace">Out parameter: A list of indices of the vertex in each respective face.</param>
            <returns>A list of indices containing the vertex.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Geometry.CalcFaceNormal(Fusee.Engine.Core.Face)">
            <summary>
            Calculates the normal vector for a given face.
            </summary>
            <param name="f">The face to calculate the normal for.</param>
            <returns>The normal vector for the face.</returns>
            <exception cref="T:System.Exception">The face doesn't consist of 3 or more vertices.</exception>
        </member>
        <member name="M:Fusee.Engine.Core.Geometry.CreateNormals(System.Double)">
            <summary>
            Creates normals for the entire geometry based on a given smoothing angle.
            </summary>
            <param name="smoothingAngle">The smoothing angle.</param>
        </member>
        <member name="F:Fusee.Engine.Core.Geometry.TripleInx.iV">
            <summary>
            The i V
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Geometry.TripleInx.iT">
            <summary>
            The i V
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Geometry.TripleInx.iN">
            <summary>
            The i V
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Geometry.TripleInx.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Fusee.Engine.Core.Geometry.ToMesh">
            <summary>
            Converts the whole geometry to a <see cref="T:Fusee.Engine.Core.Scene.Mesh"/>.
            </summary>
            <returns>An equivalent instance of <see cref="T:Fusee.Engine.Core.Scene.Mesh"/>.</returns>
        </member>
        <member name="T:Fusee.Engine.Core.GImpactMeshShape">
            <summary>
            TBD
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.GImpactMeshShape.Margin">
            <summary>
            TBD
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.DeviceConnectionArgs">
            <summary>
            Parameters sent when an InputDevice is connected or disconnected.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.DeviceConnectionArgs.InputDevice">
            <summary>
            The input device (such as a game pad) that was just connected or disconnected.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.MatchFunc">
            <summary>
            Checks if there is a matching device available.
            </summary>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.CreatorFunc">
            <summary>
            Creates the input device.
            </summary>
            <param name="device"></param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.Input">
            <summary>
            Handles and manages all input devices. Input is a staticton (a singleton with an additional
            static interface). 
            </summary>
            <remarks>
            Use the input instance in cases where you actually need an 
            object to pass around (although there is no such use case in FUSEE code at all).
            Use the static access in all other cases to reduce typing Input.Instance
            over and over again. Use <code>using static Fusee.Engine.Core.Input</code> to
            directly access <see cref="P:Fusee.Engine.Core.Input.Keyboard"/>, <see cref="P:Fusee.Engine.Core.Input.Mouse"/>, <see cref="P:Fusee.Engine.Core.Input.Touch"/>, 
            without even typing a namespace or class name.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.Input.InputDrivers">
            <summary>
            Retrieves the input driver implementations currently registered.
            </summary>
            <value>
            The input driver implementations.
            </value>
            <remarks>
            This is an instance method. Use <see cref="P:Fusee.Engine.Core.Input.Drivers"/> for a static-over-singleton access
            to the same functionality.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.Input.Drivers">
            <summary>
            Retrieves the input driver implementations currently registered.
            </summary>
            <value>
            The input driver implementations.
            </value>
            <remarks>
            This is a static method. Use <see cref="P:Fusee.Engine.Core.Input.InputDrivers"/> for an instance method 
            to the same functionality.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.Input.InputDevices">
            <summary>
            Returns the values of an input device.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Input.Devices">
            <summary>
            Returns the input device values.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Input.SpaceMouseInput">
            <summary>
            The input of the space mouse.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Input.GetInputDevices``1">
            <summary>
            Gets the input devices of a certain type. Shortcut for
            <code>InputDevices.OfType&lt;TDevice&gt;()</code>
            </summary>
            <typeparam name="TDevice">The type of the devices to find.</typeparam>
            <returns>The input devices of the specified type</returns>
            <remarks>
            This is an instance method. Use <see cref="M:Fusee.Engine.Core.Input.GetDevices``1"/> for a static-over-singleton access
            to the same functionality.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.Input.GetDevices``1">
            <summary>
            Gets the input devices of a certain type. Shortcut for
            <code>InputDevices.OfType&lt;TDevice&gt;()</code>
            </summary>
            <typeparam name="TDevice">The type of the devices to find.</typeparam>
            <returns>The input devices of the specified type</returns>
            <remarks>
            This is a static method. Use <see cref="M:Fusee.Engine.Core.Input.GetInputDevices``1"/> for an instance method 
            to the same functionality.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.Input.GetInputDevice``1(System.Int32)">
            <summary>
            Gets the first input device of a certain type. Shortcut for
            <code>InputDevices.OfType&lt;TDevice&gt;().FirstOrDefault()</code>
            </summary>
            <typeparam name="TDevice">The type of the device to find.</typeparam>
            <returns>The first device matching the given type, or null if no such device is currently present.</returns>
            <remarks>
            This is an instance method. Use <see cref="M:Fusee.Engine.Core.Input.GetDevice``1(System.Int32)"/> for a static-over-singleton access
            to the same functionality.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.Input.GetDevice``1(System.Int32)">
            <summary>
            Gets the first input device of a certain type. Shortcut for
            <code>InputDevices.OfType&lt;TDevice&gt;().FirstOrDefault()</code>
            </summary>
            <typeparam name="TDevice">The type of the device to find.</typeparam>
            <returns>The first device matching the given type, or null if no such device is currently present.</returns>
            <remarks>
            This is a static method. Use <see cref="M:Fusee.Engine.Core.Input.GetInputDevice``1(System.Int32)"/> for an instance method 
            to the same functionality.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.Input.MouseInput">
            <summary>
            Retrieves the first mouse device (if present).
            </summary>
            <value>
            The mouse (or null).
            </value>
            <remarks>
            This is an instance property. Use <see cref="P:Fusee.Engine.Core.Input.Mouse"/> for a static-over-singleton access
            to the same functionality.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.Input.Mouse">
            <summary>
            Retrieves the first mouse device (if present).
            </summary>
            <value>
            The mouse (or null).
            </value>
            <remarks>
            This is a static property. Use <see cref="P:Fusee.Engine.Core.Input.MouseInput"/> for an instance property 
            to the same functionality.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.Input.KeyboardInput">
            <summary>
            Retrieves the first keyboard device (if present).
            </summary>
            <value>
            The keyboard (or null).
            </value>
            <remarks>
            This is an instance property. Use <see cref="P:Fusee.Engine.Core.Input.Keyboard"/> for a static-over-singleton access
            to the same functionality.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.Input.Keyboard">
            <summary>
            Retrieves the first keyboard device (if present).
            </summary>
            <value>
            The keyboard (or null).
            </value>
            <remarks>
            This is a static property. Use <see cref="P:Fusee.Engine.Core.Input.KeyboardInput"/> for an instance property 
            to the same functionality.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.Input.TouchInput">
            <summary>
            Retrieves the first touch device (if present).
            </summary>
            <value>
            The touch device (or null).
            </value>
            <remarks>
            This is an instance property. Use <see cref="P:Fusee.Engine.Core.Input.Touch"/> for a static-over-singleton access
            to the same functionality.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.Input.Touch">
            <summary>
            Retrieves the first touch device (if present).
            </summary>
            <value>
            The touch device (or null).
            </value>
            <remarks>
            This is a static property. Use <see cref="P:Fusee.Engine.Core.Input.TouchInput"/> for an instance property 
            to the same functionality.
            </remarks>
        </member>
        <member name="E:Fusee.Engine.Core.Input.InputDeviceConnected">
            <summary>
            Occurs when a device such as a gamepad is connected.
            </summary>
            <remarks>
            This is an instance event. Use <see cref="E:Fusee.Engine.Core.Input.DeviceConnected"/> for a static-over-singleton access
            to the same functionality.
            </remarks>
        </member>
        <member name="E:Fusee.Engine.Core.Input.DeviceConnected">
            <summary>
            Occurs when a device such as a gamepad is connected.
            </summary>
            <remarks>
            This is a static event. Use <see cref="E:Fusee.Engine.Core.Input.DeviceConnected"/> for an instance property 
            to the same functionality.
            </remarks>
        </member>
        <member name="E:Fusee.Engine.Core.Input.InputDeviceDisconnected">
            <summary>
            Occurs when a device such as a gamepad is disconnected.
            </summary>
            <remarks>
            This is an instance event. Use <see cref="E:Fusee.Engine.Core.Input.DeviceConnected"/> for a static-over-singleton access
            to the same functionality.
            </remarks>
        </member>
        <member name="E:Fusee.Engine.Core.Input.DeviceDisconnected">
            <summary>
            Occurs when a device such as a gamepad is disconnected.
            </summary>
            <remarks>
            This is a static event. Use <see cref="E:Fusee.Engine.Core.Input.DeviceConnected"/> for an instance property 
            to the same functionality.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.Input.Instance">
            <summary>
                Provides the singleton Instance of the Input Class.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Input.RegisterInputDeviceType(Fusee.Engine.Core.MatchFunc,Fusee.Engine.Core.CreatorFunc)">
            <summary>
            Registers the type of input device available.
            </summary>
            <param name="match"></param>
            <param name="creator"></param>
        </member>
        <member name="M:Fusee.Engine.Core.Input.AddInputDriverImp(Fusee.Engine.Common.IInputDriverImp)">
            <summary>
            Adds an input driver implementation to the internal list. The input driver is queried about connected
            devices. All new devices will then show up in the <see cref="P:Fusee.Engine.Core.Input.Devices"/> (or <see cref="P:Fusee.Engine.Core.Input.InputDevices"/>).
            list (in addition to the already listed devices.
            </summary>
            <param name="inputDriver">The new input driver to add.</param>
            <remarks>
            This is an instance method. Use <see cref="M:Fusee.Engine.Core.Input.AddDriverImp(Fusee.Engine.Common.IInputDriverImp)"/> for a static-over-singleton access
            to the same functionality.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.Input.AddDriverImp(Fusee.Engine.Common.IInputDriverImp)">
            <summary>
            Adds an input driver implementation to the internal list. The input driver is queried about connected
            devices. All new devices will then show up in the <see cref="P:Fusee.Engine.Core.Input.Devices"/> (or <see cref="P:Fusee.Engine.Core.Input.InputDevices"/>).
            list (in addition to the already listed devices.
            </summary>
            <param name="inputDriver">The new input driver to add.</param>
            <remarks>
            This is a static method. Use <see cref="M:Fusee.Engine.Core.Input.AddInputDriverImp(Fusee.Engine.Common.IInputDriverImp)"/> for an instance property 
            to the same functionality.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.Input.PreRender">
            <summary>
            Should be called from the main (rendering-) loop. Typically not to be called by user code unless
            users implement their own rendering/application loop.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Input.PostRender">
            <summary>
            Should be called from the main (rendering-) loop. Typically not to be called by user code unless
            users implement their own rendering/application loop.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Input.Dispose">
            <summary>
            Should be called from the application framework before the application stops. Typically not to be called by user code unless
            users implement their own application framework.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.InputDevice">
            <summary>
            Input device instances expose access to underlying physical input devices such as mouse, keyboard, game pads etc.
            Users can either poll axis values or button state from an Input device or add event listeners reacting
            on value or state changes, no matter how the underlying physical device provides axis or button data.
            Additionally users can define their own axes by specifying calculation rules how to generate values from 
            existing axes or buttons.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.InputDevice.NewAxisID">
            <summary>
            Gets the new next possible new axis identifier. Use this when calling <see cref="M:Fusee.Engine.Core.InputDevice.RegisterCalculatedAxis(Fusee.Engine.Common.AxisDescription,Fusee.Engine.Core.InputDevice.AxisValueCalculator,System.Single)"/>.
            </summary>
            <value>
            The new axis identifier.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.InputDevice.IsConnected">
            <summary>
            Gets and sets a value indicating whether this device is connected.
            </summary>
            <value>
              <c>true</c> if this device is connected; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.InputDevice.Id">
            <summary>
            Gets an identifier. Implementors take care that this
            id is unique across all devices managed by a driver.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.InputDevice.Desc">
            <summary>
            Gets the human readable description of this device. This
            parameter can be used in user dialogs to identify devices.
            </summary>
            <value>
            The device description.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.InputDevice.Category">
            <summary>
            Gets the category of this device. Device categories define a minimal common
            set of buttons and axes which are identical across all devices sharing the same
            category.
            </summary>
            <value>
            The device category.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.InputDevice.AxesCount">
            <summary>
            Gets number of axes supported by this device.
            </summary>
            <value>
            The axes count.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.InputDevice.AxisDesc">
            <summary>
            Gets a description of the axis. This value can be used in user setup-dialogs or 
            to match axes of devices of different categories.
            </summary>
            <value>
            The description of the axis.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.InputDevice.GetAxisDescription(System.Int32)">
            <summary>
            Retrieves a description for the given axis
            </summary>
            <param name="axisId">The axis identifier.</param>
            <returns>A description of the axis.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.InputDevice.GetAxis(System.Int32)">
            <summary>
                Gets the value currently present at the given axis. In respect to the axis deadzone.
            </summary>
            <param name="axisId">The axis' Id as specified in <see cref="P:Fusee.Engine.Core.InputDevice.AxisDesc"/>.</param>
            <returns>The value currently set on the axis.</returns>
            <remarks>
                See <see cref="T:Fusee.Engine.Common.AxisDescription"/> to get information about how to interpret the
                values returned by a given axis.
             </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.InputDevice.GetAxisRaw(System.Int32)">
            <summary>
                Gets the value currently present at the given axis. Without considering the deadzone.
            </summary>
            <param name="axisId">The axis' Id as specified in <see cref="P:Fusee.Engine.Core.InputDevice.AxisDesc"/>.</param>
            <returns>The value currently set on the axis.</returns>
            <remarks>
                See <see cref="T:Fusee.Engine.Common.AxisDescription"/> to get information about how to interpret the
                values returned by a given axis.
             </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.InputDevice.SetAxisDeadzone(System.Int32,System.Single)">
            <summary>
            Sets the deadzone for the given axis.
            </summary>
            <param name="axisId">The axis' Id as specified in <see cref="P:Fusee.Engine.Core.InputDevice.AxisDesc"/>.</param>
            <param name="value"></param>
        </member>
        <member name="M:Fusee.Engine.Core.InputDevice.GetAxisDeadzone(System.Int32)">
            <summary>
            Gets the value currently set for the axis deadzone.
            </summary>
            <param name="axisId">The axis' Id as specified in <see cref="P:Fusee.Engine.Core.InputDevice.AxisDesc"/>.</param>
            <returns></returns>
        </member>
        <member name="E:Fusee.Engine.Core.InputDevice.AxisValueChanged">
            <summary>
            Occurs when the value of a given axis has changed.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.InputDevice.ButtonCount">
            <summary>
            Gets the number of buttons supported by this device.
            </summary>
            <value>
            The button count.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.InputDevice.ButtonDesc">
            <summary>
            Gets the name of the button. This value can be used in user setup-dialogs or 
            to match buttons of devices of different categories.
            </summary>
            <value>
            The name of the button.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.InputDevice.GetButtonDescription(System.Int32)">
            <summary>
            Retrieves a description for the given button.
            </summary>
            <param name="buttonId">The axis identifier.</param>
            <returns>A description of the axis.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.InputDevice.GetButton(System.Int32)">
            <summary>
            Gets the current state of the given button.
            </summary>
            <param name="buttonId">The buttonId of the button as specified in <see cref="P:Fusee.Engine.Core.InputDevice.ButtonDesc"/>.</param>
            <returns>true if the button is currently pressed. false, if the button is currently released.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.InputDevice.IsButtonDown(System.Int32)">
            <summary>
            Determines whether the button was pressed down right before or during the current frame.
            This value is true only for one frame even if the button is pressed longer than one frame.
            </summary>
            <param name="buttonId">The button identifier.</param>
            <returns>
            true if the button was pressed during this frame and is still pressed down. false, if the button is released 
            or if it was pressed some frames ago.
            </returns>
        </member>
        <member name="M:Fusee.Engine.Core.InputDevice.IsButtonUp(System.Int32)">
            <summary>
            Determines whether the button was released right before or during the current frame.
            This value is true only for one frame even if the button is released longer than one frame.
            </summary>
            <param name="buttonId">The button identifier.</param>
            <returns>
            true if the button was released during this frame and is still released. false, if the button is pressed 
            or if it was released some frames ago.
            </returns>
        </member>
        <member name="E:Fusee.Engine.Core.InputDevice.ButtonValueChanged">
            <summary>
            Occurs when the value of a given button has changed.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.InputDevice.AxisValueCalculator">
            <summary>
            A delegate for functions that calculate the value of an axis.
            </summary>
            <param name="time">The time at which to calculate the value of the axis.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.InputDevice.RegisterCalculatedAxis(Fusee.Engine.Common.AxisDescription,Fusee.Engine.Core.InputDevice.AxisValueCalculator,System.Single)">
            <summary>
            Registers a calculated axis. Calculated axes behave like axes exposed by the underlying
            hardware device but can be calculated from one or more existing axes or buttons.
            </summary>
            <param name="calculatedAxisDescription">The axis description for the new calculated axis.</param>
            <param name="calculator">The calculator method performing the calculation once per frame.</param>
            <param name="initialValue">The initial value for the new axis.</param>
            <remarks>
            To register your own axis you need to provide a working <see cref="T:Fusee.Engine.Core.InputDevice.AxisValueCalculator"/>. This method
            is called whenever the axis value needs to be present.
            Any state the calculation depends upon should be queried from existing axes presented by the input device 
            or "statically" stored in the closure around the calculator. The methods
            <list type="bullet"></list>
            <item><see cref="M:Fusee.Engine.Core.InputDevice.RegisterSingleButtonAxis(System.Int32,Fusee.Engine.Common.AxisDirection,System.Single,System.Single,System.Int32,System.String)"/></item>
            <item><see cref="M:Fusee.Engine.Core.InputDevice.RegisterTwoButtonAxis(System.Int32,System.Int32,Fusee.Engine.Common.AxisDirection,System.Single,System.Single,System.Int32,System.String)"/></item>
            <item><see cref="M:Fusee.Engine.Core.InputDevice.RegisterVelocityAxis(System.Int32,System.Int32,System.Int32,System.String,Fusee.Engine.Common.AxisDirection)"/></item>
            </remarks>
            provide predefined calculators for certain purposes.
        </member>
        <member name="M:Fusee.Engine.Core.InputDevice.RegisterVelocityAxis(System.Int32,System.Int32,System.Int32,System.String,Fusee.Engine.Common.AxisDirection)">
            <summary>
            Registers a calculated axis exhibiting the derivative after the time (Velocity) of the value on the specified original axis.
            </summary>
            <param name="origAxisId">The original axis identifier.</param>
            <param name="triggerButtonId">If a valid id is passed, the derived axis only produces values if the specified button is pressed. The velocity is only
            calculated based on the axis value when the trigger button is pressed. This allows touch velocities to always start with a speed of zero when the touch starts (e.g. the 
            button identifying that a touchpoint has contact). Otherwise touch velocities would become huge between two click-like touches on different screen locations. 
            If this parameter is 0 (zero), the derived axis will always be calculated based on the original axis only.</param>
            <param name="velocityAxisId">The derived axis identifier. Note this value must be bigger than all existing axis Ids. Leave this value
            zero to have a new identifier calculated automatically.</param>
            <param name="name">The name of the new axis.</param>
            <param name="direction">The direction of the new axis.</param>
            <returns>
            The axis description of the newly created calculated axis.
            </returns>
            <remarks>
            A derived axis is helpful if you have a device delivering absolute positional values but you need the current
            speed of the axis. Imagine a mouse where the speed of the mouse over the screen is important rather than the absolute
            position.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.InputDevice.RegisterSingleButtonAxis(System.Int32,Fusee.Engine.Common.AxisDirection,System.Single,System.Single,System.Int32,System.String)">
            <summary>
            Registers a calculated axis from a button. The axis' value changes between 0 and 1 as the user hits the button or releases it.
            The time it takes to change the value can be set.
            </summary>
            <param name="origButtonId">The original button identifier.</param>
            <param name="direction">The direction the new axis is heading towards.</param>
            <param name="rampUpTime">The time it takes to change the value from 0 to 1 (in seconds).</param>
            <param name="rampDownTime">The time it takes to change the value from 1 to 0 (in seconds).</param>
            <param name="buttonAxisId">The new identifier of the button axis. Note this value must be bigger than all existing axis Ids. Leave this value
            zero to have a new identifier calculated automatically.</param>
            <param name="name">The name of the new axis.</param>
            <returns>The axis description of the newly created calculated axis.</returns>
            <remarks>
              Button axes are useful to simulate a trigger or thrust panel with the help of individual buttons. There is a user-definable acceleration and 
              deceleration period, so a simulation resulting on this input delivers a feeling of inertance.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.InputDevice.RegisterTwoButtonAxis(System.Int32,System.Int32,Fusee.Engine.Common.AxisDirection,System.Single,System.Single,System.Int32,System.String)">
            <summary>
            Registers a calculated axis from two buttons. The axis' value changes between -1 and 1 as the user hits the button or releases it.
            The time it takes to change the value can be set.
            </summary>
            <param name="origButtonIdNegative">The original button identifier for negative movements.</param>
            <param name="origButtonIdPositive">The original button identifier for positive movements.</param>
            <param name="direction">The direction the new axis is heading towards.</param>
            <param name="rampUpTime">The time it takes to change the value from 0 to 1 (or -1) (in seconds) when one of the buttons is pushed.</param>
            <param name="rampDownTime">The time it takes to change the value from -1 of 1 back to 0 (in seconds) when a pushed button is released.</param>
            <param name="buttonAxisId">The new identifier of the button axis. Note this value must be bigger than all existing axis Ids. Leave this value
            zero to have a new identifier calculated automatically.</param>
            <param name="name">The name of the new axis.</param>
            <returns>
            The axis description of the newly created calculated axis.
            </returns>
            <remarks>
            Button axes are useful to simulate one axis of a joypad or a joystick with the help of two individual buttons. One button acts as pushing the 
            joystick into the positive direction along the given axis by animating the axis' value to 1 and the a second button acts as pushing the joystick 
            into the negative direction by animating the value to -1. Releasing both buttons will animate the value to 0. Pushing both buttons simultaneously
            will stop the animation and keep the value at its current amount.
            There is a user-definable acceleration and deceleration period, so a simulation resulting on this input delivers a feeling of inertance.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.InputDevice.PostRender">
            <summary>
            Clears the button presses after rendering an image.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.JometriMesh">
            <inheritdoc />
            <summary>
            Creates a fusee-compatible mesh from a triangulated Jometri geometry
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.JometriMesh.#ctor(Fusee.Jometri.Geometry)">
            <summary>
            Creates a fusee-compatible mesh from a Jometri geometry
            </summary>
            <param name="geometry">The triangulated Jometri geometry, saved in a doubly connected edge list</param>
        </member>
        <member name="T:Fusee.Engine.Core.KeyboardDevice">
            <summary>
            Special case of an <see cref="T:Fusee.Engine.Core.InputDevice"/> identifying itself as a <see cref="F:Fusee.Engine.Common.DeviceCategory.Keyboard"/>.
            Defines convenience methods to access the keyboard buttons.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.KeyboardDevice.#ctor(Fusee.Engine.Common.IInputDeviceImp)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.KeyboardDevice"/> class.
            </summary>
            <param name="inpDeviceImp">The platform dependent connector to the underlying physical device.</param>
        </member>
        <member name="M:Fusee.Engine.Core.KeyboardDevice.GetKey(Fusee.Engine.Common.KeyCodes)">
            <summary>
            Retrieves the current button state for the specified key.
            </summary>
            <value>
            true if the button is pressed; otherwise false.
            </value>
            <param name="key">The key to check.</param>
        </member>
        <member name="M:Fusee.Engine.Core.KeyboardDevice.IsKeyDown(Fusee.Engine.Common.KeyCodes)">
            <summary>
            Determines whether the specified key was pressed during the current frame.
            The result is true only for one single frame even if the key is still pressed 
            in subsequent frames.
            </summary>
            <param name="key">The key to check.</param>
            <returns>true if the key was pressed during the current frame, false if the key
            was not pressed during the current frame - even if the key was not released yet.
            </returns>
        </member>
        <member name="M:Fusee.Engine.Core.KeyboardDevice.IsKeyUp(Fusee.Engine.Common.KeyCodes)">
            <summary>
            Determines whether the specified key was released during the current frame.
            The result is true only for one single frame even if the key is still up
            in subsequent frames.
            </summary>
            <param name="key">The key to check.</param>
            <returns>true if the key was released during the current frame, false if the key
            was not released during the current frame - even if the key currently is released.
            </returns>
        </member>
        <member name="P:Fusee.Engine.Core.KeyboardDevice.UpDownAxis">
            <summary>
            Gets the value at the (calculated) axis controlled with the Up/Down cursor keys.
            </summary>
            <returns>The  axis' value in the range between [-1, 1]</returns>
        </member>
        <member name="P:Fusee.Engine.Core.KeyboardDevice.LeftRightAxis">
            <summary>
            Gets the value at the (calculated) axis controlled with the Left/Right cursor keys.
            </summary>
            <returns>The  axis' value in the range between [-1, 1]</returns>
        </member>
        <member name="P:Fusee.Engine.Core.KeyboardDevice.ADAxis">
            <summary>
            Gets the value at the (calculated) axis controlled with the A and the D key.
            This is the horizontal component of the four key WASD left-handed game steering paradigm
            </summary>
            <returns>The  axis' value in the range between [-1, 1]</returns>
        </member>
        <member name="P:Fusee.Engine.Core.KeyboardDevice.WSAxis">
            <summary>
            Gets the value at the (calculated) axis controlled with the A and the D key.
            This is the vertical component of the four key WASD left-handed game steering paradigm
            </summary>
            <returns>The  axis' value in the range between [-1, 1]</returns>
        </member>
        <member name="T:Fusee.Engine.Core.KeyNullDevImp">
            <summary>
            Null implementation for the <see cref="F:Fusee.Engine.Common.DeviceCategory.Keyboard"/> device category. This implementation is one
            of three dummy implementations provided by the <see cref="T:Fusee.Engine.Core.KeyMouseTouchNullInputDriverImp"/>. Typically used
            in situations where the calls to <see cref="P:Fusee.Engine.Core.Input.Keyboard"/> should not result in a <see cref="T:System.NullReferenceException"/>
            when there's actually no physical keyboard present, such as headless (windowless) renderers, image generators etc.
            This device implements a keyboard never generating any input.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.KeyNullDevImp.Id">
            <summary>
            A unique identifier for this device implementor.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.KeyNullDevImp.Desc">
            <summary>
            A descriptive human readable text to be used in input configurators.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.KeyNullDevImp.Category">
            <summary>
            The category for this device. Always returns <see cref="F:Fusee.Engine.Common.DeviceCategory.Keyboard"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.KeyNullDevImp.AxesCount">
            <summary>
            The number of Axes provided by this device.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.KeyNullDevImp.AxisImpDesc">
            <summary>
            A list of descriptions for each axis provided by this device.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.KeyNullDevImp.ButtonCount">
            <summary>
            The number of buttons provided by this device.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.KeyNullDevImp.ButtonImpDesc">
            <summary>
            A list of descriptions for each button provided by this device.
            </summary>
        </member>
        <member name="E:Fusee.Engine.Core.KeyNullDevImp.AxisValueChanged">
            <summary>
            Called whenever an axis value changes. Since this is a dummy device this event will never fire.
            Only provided to meet the <see cref="T:Fusee.Engine.Common.IInputDriverImp"/> interface definition.
            </summary>
        </member>
        <member name="E:Fusee.Engine.Core.KeyNullDevImp.ButtonValueChanged">
            <summary>
            Called whenever a button value changes. Since this is a dummy device this event will never fire.
            Only provided to meet the <see cref="T:Fusee.Engine.Common.IInputDriverImp"/> interface definition.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.KeyNullDevImp.GetAxis(System.Int32)">
            <summary>
            Called by the input system to poll for axis changes. 
            Since this is a dummy device this method will return 0 for all possible input axis IDs.
            </summary>
            <param name="iAxisId">The input axis ID in question.</param>
            <returns>0 (zero) for all possible input values.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.KeyNullDevImp.GetButton(System.Int32)">
            <summary>
            Called by the input system to poll for button changes. 
            Since this is a dummy device this method will return 0 for all possible input axis IDs.
            </summary>
            <param name="iButtonId">The input button ID in question.</param>
            <returns>false for all possible input values.</returns>
        </member>
        <member name="T:Fusee.Engine.Core.MouseNullDevImp">
            <summary>
            Null implementation for the <see cref="F:Fusee.Engine.Common.DeviceCategory.Mouse"/> device category. This implementation is one
            of three dummy implementations provided by the <see cref="T:Fusee.Engine.Core.KeyMouseTouchNullInputDriverImp"/>. Typically used
            in situations where the calls to <see cref="P:Fusee.Engine.Core.Input.Mouse"/> should not result in a <see cref="T:System.NullReferenceException"/>
            when there's actually no physical keyboard present, such as headless (windowless) renderers, image generators etc.
            This device implements a keyboard never generating any input.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.MouseNullDevImp.Id">
            <summary>
            A unique identifier for this device implementor.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.MouseNullDevImp.Desc">
            <summary>
            A descriptive human readable text to be used in input configurators.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.MouseNullDevImp.Category">
            <summary>
            The category for this device. Always returns <see cref="F:Fusee.Engine.Common.DeviceCategory.Mouse"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.MouseNullDevImp.AxesCount">
            <summary>
            The number of Axes provided by this device.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.MouseNullDevImp.AxisImpDesc">
            <summary>
            A list of descriptions for each axis provided by this device.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.MouseNullDevImp.ButtonCount">
            <summary>
            The number of buttons provided by this device.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.MouseNullDevImp.ButtonImpDesc">
            <summary>
            A list of descriptions for each button provided by this device.
            </summary>
        </member>
        <member name="E:Fusee.Engine.Core.MouseNullDevImp.AxisValueChanged">
            <summary>
            Called whenever an axis value changes. Since this is a dummy device this event will never fire.
            Only provided to meet the <see cref="T:Fusee.Engine.Common.IInputDriverImp"/> interface definition.
            </summary>
        </member>
        <member name="E:Fusee.Engine.Core.MouseNullDevImp.ButtonValueChanged">
            <summary>
            Called whenever a button value changes. Since this is a dummy device this event will never fire.
            Only provided to meet the <see cref="T:Fusee.Engine.Common.IInputDriverImp"/> interface definition.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.MouseNullDevImp.GetAxis(System.Int32)">
            <summary>
            Called by the input system to poll for axis changes. 
            Since this is a dummy device this method will return 0 for all possible input axis IDs.
            </summary>
            <param name="iAxisId">The input axis ID in question.</param>
            <returns>0 (zero) for all possible input values.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.MouseNullDevImp.GetButton(System.Int32)">
            <summary>
            Called by the input system to poll for button changes. 
            Since this is a dummy device this method will return 0 for all possible input axis IDs.
            </summary>
            <param name="iButtonId">The input button ID in question.</param>
            <returns>false for all possible input values.</returns>
        </member>
        <member name="T:Fusee.Engine.Core.TouchNullDevImp">
            <summary>
            Null implementation for the <see cref="F:Fusee.Engine.Common.DeviceCategory.Touch"/> device category. This implementation is one
            of three dummy implementations provided by the <see cref="T:Fusee.Engine.Core.KeyMouseTouchNullInputDriverImp"/>. Typically used
            in situations where the calls to <see cref="P:Fusee.Engine.Core.Input.Touch"/> should not result in a <see cref="T:System.NullReferenceException"/>
            when there's actually no physical keyboard present, such as headless (windowless) renderers, image generators etc.
            This device implements a keyboard never generating any input.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.TouchNullDevImp.#ctor">
            <summary>
            Constructor. Initializes internal structures.
            </summary>        
        </member>
        <member name="E:Fusee.Engine.Core.TouchNullDevImp.AxisValueChanged">
            <summary>
            Called whenever an axis value changes. Since this is a dummy device this event will never fire.
            Only provided to meet the <see cref="T:Fusee.Engine.Common.IInputDriverImp"/> interface definition.
            </summary>
        </member>
        <member name="E:Fusee.Engine.Core.TouchNullDevImp.ButtonValueChanged">
            <summary>
            Called whenever a button value changes. Since this is a dummy device this event will never fire.
            Only provided to meet the <see cref="T:Fusee.Engine.Common.IInputDriverImp"/> interface definition.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.TouchNullDevImp.AxesCount">
            <summary>
            The number of Axes provided by this device.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.TouchNullDevImp.AxisImpDesc">
            <summary>
            A list of descriptions for each axis provided by this device.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.TouchNullDevImp.ButtonCount">
            <summary>
            The number of buttons provided by this device.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.TouchNullDevImp.ButtonImpDesc">
            <summary>
            A list of descriptions for each button provided by this device.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.TouchNullDevImp.Id">
            <summary>
            A unique identifier for this device implementor.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.TouchNullDevImp.Desc">
            <summary>
            A descriptive human readable text to be used in input configurators.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.TouchNullDevImp.Category">
            <summary>
            The category for this device. Always returns <see cref="F:Fusee.Engine.Common.DeviceCategory.Touch"/>.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.TouchNullDevImp.GetAxis(System.Int32)">
            <summary>
            Called by the input system to poll for axis changes. 
            Since this is a dummy device this method will return 0 for all possible input axis IDs.
            </summary>
            <param name="iAxisId">The input axis ID in question.</param>
            <returns>0 (zero) for all possible input values.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.TouchNullDevImp.GetButton(System.Int32)">
            <summary>
            Called by the input system to poll for button changes. 
            Since this is a dummy device this method will return 0 for all possible input axis IDs.
            </summary>
            <param name="iButtonId">The input button ID in question.</param>
            <returns>false for all possible input values.</returns>
        </member>
        <member name="T:Fusee.Engine.Core.KeyMouseTouchNullInputDriverImp">
            <summary>
            Null implementation driver providing dummy devices for Keyboard, Mouse and Touch <see cref="T:Fusee.Engine.Common.DeviceCategory"/> types.
            Inject an instance of this class into your <see cref="T:Fusee.Engine.Core.Input"/> using <see cref="M:Fusee.Engine.Core.Input.AddDriverImp(Fusee.Engine.Common.IInputDriverImp)"/>
            in situations where no real input should be provided. This guarantees that your app can still access 
            <see cref="P:Fusee.Engine.Core.Input.Keyboard"/>, <see cref="P:Fusee.Engine.Core.Input.Mouse"/> and <see cref="P:Fusee.Engine.Core.Input.Touch"/> without causing a <see cref="T:System.NullReferenceException"/>. 
            These devices will never generate input values other than 0 (on all axes) or false (on all buttons) and will never fire
            axis or button events.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.KeyMouseTouchNullInputDriverImp.Devices">
            <summary>
            List the devices/device types supported by this driver.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.KeyMouseTouchNullInputDriverImp.DriverDesc">
            <summary>
            A descriptive human readable text to be used in input configurators.
            </summary>
        </member>
        <member name="E:Fusee.Engine.Core.KeyMouseTouchNullInputDriverImp.NewDeviceConnected">
            <summary>
            Never fired by this driver.
            </summary>
        </member>
        <member name="E:Fusee.Engine.Core.KeyMouseTouchNullInputDriverImp.DeviceDisconnected">
            <summary>
            Never fired by this driver.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.KeyMouseTouchNullInputDriverImp.Dispose">
            <summary>
            Dispose pattern implementation.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.MeshChangedEnum">
            <summary>
            Propagates Mesh properties changed status inside <see cref="T:Fusee.Engine.Core.MeshDataEventArgs"/> 
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.MeshChangedEnum.Disposed">
            <summary>
            The <see cref="T:Fusee.Engine.Core.Scene.Mesh"/> has been disposed.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.MeshChangedEnum.Vertices">
            <summary>
            The field <see cref="P:Fusee.Engine.Core.Scene.Mesh.Vertices"/> changed.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.MeshChangedEnum.Triangles">
            <summary>
            The field <see cref="P:Fusee.Engine.Core.Scene.Mesh.Triangles"/> changed.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.MeshChangedEnum.Colors">
            <summary>
            The field <see cref="P:Fusee.Engine.Core.Scene.Mesh.Colors"/> changed.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.MeshChangedEnum.Normals">
            <summary>
            The field <see cref="P:Fusee.Engine.Core.Scene.Mesh.Normals"/> changed.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.MeshChangedEnum.Uvs">
            <summary>
            The field <see cref="P:Fusee.Engine.Core.Scene.Mesh.UVs"/> changed.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.MeshChangedEnum.BoneWeights">
            <summary>
            The field <see cref="P:Fusee.Engine.Core.Scene.Mesh.BoneWeights"/> changed.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.MeshChangedEnum.BoneIndices">
            <summary>
            The field <see cref="P:Fusee.Engine.Core.Scene.Mesh.BoneIndices"/> changed.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.MeshChangedEnum.Tangents">
            <summary>
            The field <see cref="P:Fusee.Engine.Core.Scene.Mesh.Tangents"/> changed.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.MeshChangedEnum.BiTangents">
            <summary>
            The field <see cref="P:Fusee.Engine.Core.Scene.Mesh.BiTangents"/> changed.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.MeshDataEventArgs">
            <summary>
            EventArgs to propagate changes of a <see cref="P:Fusee.Engine.Core.MeshDataEventArgs.Mesh"/> object's life cycle and property changes.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.MeshDataEventArgs.Mesh">
            <summary>
            The <see cref="P:Fusee.Engine.Core.MeshDataEventArgs.Mesh"/> that triggered the event.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.MeshDataEventArgs.ChangedEnum">
            <summary>
            Description enum providing details about what property of the Mesh changed.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.MeshDataEventArgs.#ctor(Fusee.Engine.Core.Scene.Mesh,Fusee.Engine.Core.MeshChangedEnum)">
            <summary>
            Constructor takes a Mesh and a description which property of the mesh changed.
            </summary>
            <param name="mesh">The Mesh which property of life cycle has changed.</param>
            <param name="meshChangedEnum">The <see cref="T:Fusee.Engine.Core.MeshChangedEnum"/> describing which property of the Mesh changed.</param>
        </member>
        <member name="M:Fusee.Engine.Core.MeshManager.#ctor(Fusee.Engine.Common.IRenderContextImp)">
            <summary>
            Creates a new Instance of MeshManager. Th instance is handling the memory allocation and deallocation on the GPU by observing Mesh.cs objects.
            </summary>
            <param name="renderContextImp">The RenderContextImp is used for GPU memory allocation and deallocation. See RegisterMesh.</param>
        </member>
        <member name="M:Fusee.Engine.Core.MeshManager.Cleanup">
            <summary>
            Call this method on the main thread after RenderContext.Render in order to cleanup all not used Buffers from GPU memory.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.MeshReader">
            <summary>
                This class is used to load 3D Models in .obj format into memory.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.MeshReader.Double_Parse(System.String)">
            <summary>
                Replacement for double.Parse(s, [InvariantCulture])
                Hack needed for JSIL.
            </summary>
            <param name="s">string to parse</param>
            <returns>A double number</returns>
        </member>
        <member name="M:Fusee.Engine.Core.MeshReader.ReadWavefrontObj(System.IO.TextReader)">
            <summary>
                Parses the contents of the TextReader object passed to the method and tries to
                interpret the contents as a <a href="http://en.wikipedia.org/wiki/Wavefront_.obj_file">Wavefront obj</a> file.
                Creates a Mesh object from the contents.
            </summary>
            <param name="tr">The initialized TextReader (can be either a StreamReader or a StringReader)</param>
            <returns>The newly created Mesh object</returns>
        </member>
        <member name="M:Fusee.Engine.Core.MeshReader.LoadGeometry(System.IO.Stream)">
            <summary>
                This method loads an object file and returns it as a geometry.
            </summary>
            <param name="stream">Stream to read from.</param>
            <returns>The newly created Mesh object</returns>
        </member>
        <member name="M:Fusee.Engine.Core.MeshReader.LoadMesh(System.IO.Stream)">
            <summary>
                This method loads an object file and returns it as a mesh.
            </summary>
            <param name="stream">Stream to read from.</param>
            <returns>The newly created Mesh object</returns>
        </member>
        <member name="M:Fusee.Engine.Core.MeshReader.FilteredSplit(System.String,System.Char[])">
            <summary>
                This method is used to split a string in a list of strings based on the separator passed to the method.
            </summary>
            <param name="strIn">The string.</param>
            <param name="separator">The separator.</param>
            <returns>An array of string with all separated values.</returns>
        </member>
        <member name="T:Fusee.Engine.Core.MouseDevice">
            <summary>
            Special case of an <see cref="T:Fusee.Engine.Core.InputDevice"/> identifying itself as a <see cref="F:Fusee.Engine.Common.DeviceCategory.Mouse"/>.
            Defines convenience methods to access the typical mouse axes and buttons. Registers
            the mouse velocity derived axes.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.MouseDevice.#ctor(Fusee.Engine.Common.IInputDeviceImp)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.MouseDevice"/> class.
            </summary>
            <param name="inpDeviceImp">The platform dependent connector to the underlying physical device.</param>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.PositionInt">
            <summary>
            Gets the current position relative to the upper left corner of the rendering window.
            The returned values are integers.
            </summary>
            <value>
            The mouse position. z contains the wheel's value.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.Position">
            <summary>
            Gets the current position relative to the upper left corner of the rendering window.
            </summary>
            <value>
            The current position of the mouse.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.X">
            <summary>
            Gets the mouse's x value.
            </summary>
            <value>
            Number of pixels from the left border of the rendering window to the current mouse position.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.Y">
            <summary>
            Gets the mouse's y value.
            </summary>
            <value>
            Number of pixels from the upper border of the rendering window to the current mouse position.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.Wheel">
            <summary>
            Gets the current wheel value.
            </summary>
            <value>
            The wheel value.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.VelocityInt">
            <summary>
            Retrieves the current mouse velocity (speed) on screen in pixels/second.
            Return values are integers. 
            </summary>
            <value>
            The mouse velocity. 
            z contains the wheel velocity.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.Velocity">
            <summary>
            Retrieves the current mouse velocity (speed) on screen in pixels/second.
            </summary>
            <value>
            The mouse velocity. 
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.XVel">
            <summary>
            Retrieves the current mouse velocity in x direction. 
            </summary>
            <value>
            The x velocity.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.YVel">
            <summary>
            Retrieves the current mouse velocity in y direction. 
            </summary>
            <value>
            The y velocity.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.WheelVel">
            <summary>
            Retrieves the current mouse wheel velocity. 
            </summary>
            <value>
            The velocity of the mouse wheel.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.XDesc">
            <summary>
            Retrieves information about the x axis.
            </summary>
            <value>
            The description for the x axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.YDesc">
            <summary>
            Retrieves information about the y axis.
            </summary>
            <value>
            The description for the y axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.WheelDesc">
            <summary>
            Retrieves information about the mouse wheel axis.
            </summary>
            <value>
            The description for the mouse wheel axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.XVelDesc">
            <summary>
            Retrieves information about the x velocity axis.
            </summary>
            <value>
            The description for the x velocity axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.YVelDesc">
            <summary>
            Retrieves information about the y velocity axis.
            </summary>
            <value>
            The description for the y velocity  axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.WheelVelDesc">
            <summary>
            Retrieves information about the mouse wheel velocity axis.
            </summary>
            <value>
            The description for the mouse wheel velocity axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.LeftButton">
            <summary>
            Retrieves the current state of the left mouse button.
            </summary>
            <value>
            <c>true</c> if the left mouse button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.MiddleButton">
            <summary>
            Retrieves the current state of the middle mouse button.
            </summary>
            <value>
            <c>true</c> if the left middle button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.RightButton">
            <summary>
            Retrieves the current state of the right mouse button.
            </summary>
            <value>
            <c>true</c> if the left right button is currently pressed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.LeftButtonDesc">
            <summary>
            Retrieves information about the left mouse button.
            </summary>
            <value>
            The description for the left mouse button.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.MiddleButtonDesc">
            <summary>
            Retrieves information about the middle mouse button.
            </summary>
            <value>
            The description for the middle mouse button.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.MouseDevice.RightButtonDesc">
            <summary>
            Retrieves information about the right mouse button.
            </summary>
            <value>
            The description for the right mouse button.
            </value>
        </member>
        <member name="T:Fusee.Engine.Core.MultiSphereShape">
            <summary>
            Implements a multi sphere collision shape.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.MultiSphereShape.Margin">
            <summary>
            Gets or sets the margin of the multi sphere collision shape.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.MultiSphereShape.GetSpherePosition(System.Int32)">
            <summary>
            Returns the spheres position.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.MultiSphereShape.GetSphereRadius(System.Int32)">
            <summary>
            Returns the spheres radius. 
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:Fusee.Engine.Core.MultiSphereShape.SphereCount">
            <summary>
            Returns the number of spheres.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.NamespaceDoc">
            <summary>
            <para>
            Classes in this module implement FUSEE's 3D rendering capability. 
            Many classes contain methods that
            enable user code to render 3D content, create 3D output windows, create and manipulate scene contents,
            organize scene contents in scene graphs, etc. 
            </para>
            <para>
            Among the most important classes are
            <list type="bullet">
              <item>
                <term><see cref="T:Fusee.Engine.Core.RenderCanvas"/></term>
                <description>The base class for FUSEE Apps. Creates and manages the rendering window and provides
                a render context to draw onto.</description>
              </item>
              <item>
                <term><see cref="T:Fusee.Engine.Core.RenderContext"/></term>
                <description>Abstracts 3D Drawing functionality from the underlying hardware-API (e.g. OpenGL).</description>
              </item>
              <item>
                <term><see cref="T:Fusee.Engine.Core.SceneRendererForward"/></term>
                <description>Visits a scene graph's items and renders each item's contribution to a render context.</description>
              </item>
            </list>
            </para>
            <para>
            Some of the functionality relies on platform specific implementations found in underlying platform-dependent modules.
            Common classes used by both, this module and underlying platform-dependent implementation modules can be found int the
            <see cref="N:Fusee.Engine.Common"/> namespace.
            </para>
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Network">
            <summary>
            Core network object. Handles all connections by accessing underlying interface implementations.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Network.Status">
            <summary>
            Gets and sets the status of the network. <see cref="T:Fusee.Engine.Common.NetStatusValues"/>.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Network.Config">
            <summary>
            Gets and sets the configuration. <see cref="T:Fusee.Engine.Common.NetConfigValues"/>
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Network.Connections">
            <summary>
            Gets all connections of type <see cref="T:Fusee.Engine.Common.INetworkConnection"/>.
            </summary>
            <value>
            The connections.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Network.LocalIP">
            <summary>
            Gets the local IP. Do not use this often due to performance reasons.
            </summary>
            <value>
            The local IP as a string, e.g. 127.0.0.1
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Network.IncomingMsgCount">
            <summary>
            Gets the incoming message's count.
            </summary>
            <value>
            The incoming message count.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Network.IncomingMsg">
            <summary>
            Gets the incoming <see cref="T:Fusee.Engine.Common.INetworkMsg"/>.
            </summary>
            <value>
            The incoming message.
            </value>
        </member>
        <member name="E:Fusee.Engine.Core.Network.OnConnectionUpdate">
            <summary>
            Occurs when [on connection update] occurs and passes the event over to the network interface implementation.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Network.StartPeer">
            <summary>
            Initializes the peer on default port 14242.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Network.StartPeer(System.Int32)">
            <summary>
            Initializes the peer on specified port.
            </summary>
            <param name="port">The port.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Network.OpenConnection(System.String)">
            <summary>
            Opens the connection on default port 14242 and specified host.
            </summary>
            <param name="host">The host (e.g. 127.0.0.1).</param>
        </member>
        <member name="M:Fusee.Engine.Core.Network.OpenConnection(System.Int32)">
            <summary>
            Opens the connection on specified port.
            </summary>
            <param name="port">The port.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Network.OpenConnection(System.String,System.Int32)">
            <summary>
            Opens the connection on specified port and host.
            </summary>
            <param name="host">The host.</param>
            <param name="port">The port.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Network.CloseConnection">
            <summary>
            Closes the connection.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Network.SendMessage(System.Byte[])">
            <summary>
            Sends the message with <see cref="T:Fusee.Engine.Common.MessageDelivery"/>.RealiableOrdered on channel 0.
            </summary>
            <param name="msg">The message in byte[].</param>
            <returns>True if the message arrived.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Network.SendMessage(System.Byte[],Fusee.Engine.Common.MessageDelivery,System.Int32)">
            <summary>
            Sends the message with options.
            </summary>
            <param name="msg">The message in byte[].</param>
            <param name="msgDelivery">The <see cref="T:Fusee.Engine.Common.MessageDelivery"/>.</param>
            <param name="channelID">The channel identifier.</param>
            <returns>True if the message arrived.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Network.SendDiscoveryMessage">
            <summary>
            Sends the discovery message on default port 14242.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Network.SendDiscoveryMessage(System.Int32)">
            <summary>
            Sends the discovery message on specified port.
            </summary>
            <param name="port">The port.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Network.CloseDevice">
            <summary>
            Closes all network connections.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Network.Instance">
            <summary>
            Provides the Instance of the Network Class.
            </summary>
            <value>
            The instance.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.Network.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Network.FirstMessage">
            <summary>
            Firsts the message.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.DummyNetworkImp">
            <summary>
            Dummy implementation without functionality
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.DummyNetworkImp.Config">
            <summary>
            Gets and sets the configuration.
            </summary>
            <value>
            The configuration.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.DummyNetworkImp.Status">
            <summary>
            Gets and sets the status.
            </summary>
            <value>
            The status.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.DummyNetworkImp.GetLocalIp">
            <summary>
            Gets the local IP.
            </summary>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="P:Fusee.Engine.Core.DummyNetworkImp.IncomingMsg">
            <summary>
            Gets the incoming MSG.
            </summary>
            <value>
            The incoming MSG.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.DummyNetworkImp.StartPeer(System.Int32)">
            <summary>
            Starts the peer.
            </summary>
            <param name="port">The port.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="E:Fusee.Engine.Core.DummyNetworkImp.ConnectionUpdate">
            <summary>
            Occurs when [connection update].
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.DummyNetworkImp.CloseConnection">
            <summary>
            Closes the connection.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Fusee.Engine.Core.DummyNetworkImp.SendMessage(System.Byte[],Fusee.Engine.Common.MessageDelivery,System.Int32)">
            <summary>
            Sends the message.
            </summary>
            <param name="msg">The MSG.</param>
            <param name="msgDelivery">The MSG delivery.</param>
            <param name="msgChannel">The MSG channel.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Fusee.Engine.Core.DummyNetworkImp.SendDiscoveryMessage(System.Int32)">
            <summary>
            Sends the discovery message.
            </summary>
            <param name="port">The port.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Fusee.Engine.Core.DummyNetworkImp.OnUpdateFrame">
            <summary>
            Called when [update frame].
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:Fusee.Engine.Core.DummyNetworkImp.CloseDevices">
            <summary>
            Closes the devices.
            </summary>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="T:Fusee.Engine.Core.NineSlicePlane">
            <summary>
            Creates a plane geometry straight from the code that is divided in 9 tiles.
            This geometry is intended for displaying GUI Textures.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.NineSlicePlane.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.NineSlicePlane" /> class.
            The default NineSlicePlane is 1 unit big.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Octant`1">
            <summary>
            Node for use in an octree.
            </summary>
            <typeparam name="T">Defines the type of the payload.</typeparam>
        </member>
        <member name="F:Fusee.Engine.Core.Octant`1.Children">
            <summary>
            Children of this Octant. Must contain eight or null (leaf node) children.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Octant`1.Payload">
            <summary>
            The payload of this octant.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Octant`1.Level">
            <summary>
            The level of the octant in the octree.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Octant`1.IsLeaf">
            <summary>
            Gets a value indicating whether this instance is a leaf node.
            </summary>
            <value>
              <c>true</c> if this instance is leaf; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.Octant`1.#ctor(Fusee.Math.Core.double3,System.Double,System.Collections.Generic.List{`0},Fusee.Engine.Core.Octant{`0}[])">
            <summary>
            Creates a new instance of type Octant.
            </summary>
            <param name="center"></param>
            <param name="size"></param>
            <param name="children"></param>
            <param name="payload"></param>
        </member>
        <member name="M:Fusee.Engine.Core.Octant`1.#ctor(Fusee.Math.Core.double3,System.Double,Fusee.Engine.Core.Octant{`0}[])">
            <summary>
            Create a new instance of type Octant.
            </summary>
            <param name="center"></param>
            <param name="size"></param>
            <param name="children"></param>        
        </member>
        <member name="M:Fusee.Engine.Core.Octant`1.#ctor">
            <summary>
            Create a new instance of type Octant.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.ParticleEmitter">
            <summary>
            Implements a particle emitter
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ParticleEmitter.VsSimpleTexture">
            <summary>
            The vertex shader.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ParticleEmitter.PsSimpleTexture">
            <summary>
            The pixel shader.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ParticleEmitter.ParticleMesh">
            <summary>
            The entire particle system consists of one mesh.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ParticleEmitter.PMesh">
            <summary>
            Returns the particle mesh.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ParticleEmitter.#ctor(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,System.Double,System.Single,System.Single,System.Single)">
            <summary>
            Initializes a new instance of the ParticleEmittter class.
            </summary>
            <param name="myCount"></param>
            <param name="myLifeMin"></param>
            <param name="myLifeMax"></param>
            <param name="myMinSize"></param>
            <param name="myMaxSize"></param>
            <param name="myRotation"></param>
            <param name="myTransparency"></param>
            <param name="myRandPosX"></param>
            <param name="myRandPosY"></param>
            <param name="myRandPosZ"></param>
            <param name="myRandVelX"></param>
            <param name="myRandVelY"></param>
            <param name="myRandVelZ"></param>
            <param name="myGravityX"></param>
            <param name="myGravityY"></param>
            <param name="myGravityZ"></param>
        </member>
        <member name="P:Fusee.Engine.Core.ParticleEmitter.LifeMin">
            <summary>
            Gets and sets the minimum life of the particles.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ParticleEmitter.LifeMax">
            <summary>
            Gets and sets the maximum life of the particles.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ParticleEmitter.MinSize">
            <summary>
            Gets and sets the minimum size of the particles.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ParticleEmitter.MaxSize">
            <summary>
            Gets and sets the maximum size of the particles.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ParticleEmitter.Transparency">
            <summary>
            Gets and sets the transparency of particles.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ParticleEmitter.RandPosX">
            <summary>
            Gets and sets the random position on the x-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ParticleEmitter.RandPosY">
            <summary>
            Gets and sets the random position on the y-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ParticleEmitter.RandPosZ">
            <summary>
            Gets and sets the random position on the z-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ParticleEmitter.RandVelX">
            <summary>
            Gets and sets the random velocity towards the x-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ParticleEmitter.RandVelY">
            <summary>
            Gets and sets the random velocity towards the y-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ParticleEmitter.RandVelZ">
            <summary>
            Gets and sets the random velocity towards the z-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ParticleEmitter.GravityX">
            <summary>
            Gets and sets the gravity towards the x-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ParticleEmitter.GravityY">
            <summary>
            Gets and sets the gravity towards the y-axis.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ParticleEmitter.GravityZ">
            <summary>
            Gets and sets the gravity towards the z-axis.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ParticleEmitter.Tick(System.Double)">
            <summary>
            This method fills the particleList with data, creates the particle mesh and manipulates the information of particleList.
            </summary>
            <param name="deltaTime"></param>
        </member>
        <member name="T:Fusee.Engine.Core.Point2PointConstraint">
            <summary>
            Implements a point to point constraint.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Point2PointConstraint.PivotInA">
            <summary>
            Gets and sets the first pivot point.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Point2PointConstraint.PivotInB">
            <summary>
            Gets and sets the second pivot point.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Point2PointConstraint.UpdateRhS(System.Single)">
            <summary>
            TBD
            </summary>
            <param name="timeStep"></param>
        </member>
        <member name="M:Fusee.Engine.Core.Point2PointConstraint.SetParam(Fusee.Engine.Common.PointToPointFlags,System.Single,System.Int32)">
            <summary>
            
            </summary>
            <param name="param"></param>
            <param name="value"></param>
            <param name="axis"></param>
        </member>
        <member name="M:Fusee.Engine.Core.Point2PointConstraint.GetParam(Fusee.Engine.Common.PointToPointFlags,System.Int32)">
            <summary>
            
            </summary>
            <param name="param"></param>
            <param name="axis"></param>
            <returns></returns>
        </member>
        <member name="P:Fusee.Engine.Core.Point2PointConstraint.RigidBodyA">
            <summary>
            Returns the first rigid body.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Point2PointConstraint.RigidBodyB">
            <summary>
            Returns the second rigid body.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Point2PointConstraint.GetUid">
            <summary>
            Returns the Uid.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.LightResult">
            <summary>
            This struct saves a light and all its parameters, as found by a Visitor.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.LightResult.Light">
            <summary>
            The light component as present (1 to n times) in the scene graph.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.LightResult.WorldSpacePos">
            <summary>
            It should be possible for one instance of type LightComponent to be used multiple times in the scene graph.
            Therefore the LightComponent itself has no position information - it gets set while traversing the scene graph.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.LightResult.Rotation">
            <summary>
            The rotation matrix. Determines the direction of the light, also set while traversing the scene graph.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.LightResult.Id">
            <summary>
            The session unique identifier of tis LightResult.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.LightResult.#ctor(Fusee.Engine.Core.Scene.Light)">
            <summary>
            Creates a new instance of type LightResult.
            </summary>
            <param name="light">The LightComponent.</param>
        </member>
        <member name="M:Fusee.Engine.Core.LightResult.Equals(System.Object)">
            <summary>
            Override for the Equals method.
            </summary>
            <param name="obj">The object to compare with.</param>       
        </member>
        <member name="M:Fusee.Engine.Core.LightResult.op_Equality(Fusee.Engine.Core.LightResult,Fusee.Engine.Core.LightResult)">
            <summary>
            Override of the == operator.
            </summary>
            <param name="thisLc">The first LightResult that will be compared with a second one.</param>
            <param name="otherLc">The second LightResult that will be compared with the first one.</param>        
        </member>
        <member name="M:Fusee.Engine.Core.LightResult.op_Inequality(Fusee.Engine.Core.LightResult,Fusee.Engine.Core.LightResult)">
            <summary>
            Override of the != operator.
            </summary>
            <param name="thisLc">The first LightResult that will be compared with a second one.</param>
            <param name="otherLc">The second LightResult that will be compared with the first one.</param>
        </member>
        <member name="M:Fusee.Engine.Core.LightResult.GetHashCode">
            <summary>
            Override of the GetHashCode method.
            Returns the session unique identifier as hash code.
            </summary>  
        </member>
        <member name="P:Fusee.Engine.Core.PrepassVisitorState.Model">
            <summary>
            Gets and sets the top of the Model matrix stack. The Model matrix transforms model coordinates into world coordinates.
            </summary>
            <value>
            The Model matrix.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.PrepassVisitorState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.PrepassVisitorState"/> class.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.PrePassVisitor._state">
            <summary>
            Holds the status of the model matrices and other information we need while traversing up and down the scene graph.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.PrePassVisitor.InitState">
            <summary>
            Sets the initial values in the <see cref="T:Fusee.Engine.Core.RendererState"/>.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.PrePassVisitor.PushState">
            <summary>
            Pushes into the RenderState.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.PrePassVisitor.PopState">
            <summary>
            Pops from the RenderState and sets the Model and View matrices in the RenderContext.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.PrePassVisitor.RenderCanvasTransform(Fusee.Engine.Core.Scene.CanvasTransform)">
            <summary>
            Sets the state of the model matrices and UiRects.
            </summary>
            <param name="ctc">The CanvasTransformComponent.</param>
        </member>
        <member name="M:Fusee.Engine.Core.PrePassVisitor.RenderRectTransform(Fusee.Engine.Core.Scene.RectTransform)">
            <summary>
            If a RectTransformComponent is visited the model matrix and MinMaxRect get updated in the <see cref="T:Fusee.Engine.Core.RendererState"/>.
            </summary>
            <param name="rtc">The XFormComponent.</param>
        </member>
        <member name="M:Fusee.Engine.Core.PrePassVisitor.RenderXForm(Fusee.Engine.Core.Scene.XForm)">
            <summary>
            If a XFormComponent is visited the model matrix gets updated in the <see cref="T:Fusee.Engine.Core.RendererState"/> and set in the <see cref="T:Fusee.Engine.Core.RenderContext"/>.
            </summary>
            <param name="xfc">The XFormComponent.</param>
        </member>
        <member name="M:Fusee.Engine.Core.PrePassVisitor.RenderXFormText(Fusee.Engine.Core.Scene.XFormText)">
            <summary>
            If a XFormTextComponent is visited the model matrix gets updated in the <see cref="T:Fusee.Engine.Core.RendererState"/> and set in the <see cref="T:Fusee.Engine.Core.RenderContext"/>.
            </summary>
            <param name="xfc">The XFormTextComponent.</param>
        </member>
        <member name="M:Fusee.Engine.Core.PrePassVisitor.RenderTransform(Fusee.Engine.Core.Scene.Transform)">
            <summary>
            If a TransformComponent is visited the model matrix of the <see cref="T:Fusee.Engine.Core.RenderContext"/> and <see cref="T:Fusee.Engine.Core.RendererState"/> is updated.
            It additionally updates the view matrix of the RenderContext.
            </summary> 
            <param name="transform">The TransformComponent.</param>
        </member>
        <member name="T:Fusee.Engine.Core.Circle">
            <summary>
            Generates a polygonal circle.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Circle.#ctor(System.Boolean,System.Int32,System.Single,System.Single)">
            <summary>
            Creates a new instance of type 'Circle'.
            </summary>
            <param name="fill">Indicates if the circle should be filled.</param>
            <param name="segments">Indicates how many segments the circle should have.</param>
            <param name="fillPercentage">Determines if it is a full circle (default, 100%).</param>
            <param name="thickness">Indicates the thickness of the (not filled) circle.</param>
        </member>
        <member name="T:Fusee.Engine.Core.WireframeCube">
            <summary>
            Creates a simple wireframe cube geometry straight from the code.
            For line width use RC.LineWidth();
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.WireframeCube.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.WireframeCube" /> class.
            The default cube is 1 unit big.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Cube">
            <summary>
            Creates a simple cube geometry straight from the code.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Cube.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.Cube" /> class.
            The default cube is 1 unit big.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Icosahedron">
            <summary>
            Creates a Icosahedron geometry straight from the code.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Icosahedron.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.Icosahedron" /> class.
            All Vertices of the Icosahedron are lying on the unit sphere.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Icosphere">
            <summary>
            Creates a Icosphere geometry straight from the code.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Icosphere.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.Icosphere" /> class.
            All Vertices of the Icosphere are lying on the unit sphere.
            </summary>
            <param name="subdivLevel">Defines the number subdivisions and therefor the number of triangles and the smoothness of the sphere.</param>
        </member>
        <member name="T:Fusee.Engine.Core.NormalAndUvHelper">
            <summary>
            Contains static methods to calculate the normals for a mesh.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.NormalAndUvHelper.CreateVertexNormals(Fusee.Engine.Core.Scene.Mesh)">
            <summary>
            Calculates the vertex normals for a given mesh by calculating the avarage of all normals of faces, adjacent to a vertex.
            </summary>
            <param name="mesh">The mesh for which to calculate the normals.</param>
        </member>
        <member name="T:Fusee.Engine.Core.Line">
            <summary>
            Creates a polygonal line.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Line.#ctor(System.Collections.Generic.List{Fusee.Math.Core.float3},System.Single,System.Single,System.Single)">
            <summary>
            Creates a instance of type 'Line'.
            </summary>
            <param name="points">The vertices, the line should connect.</param>
            <param name="lineThickness">The thickness of the line.</param>
            <param name="rectWidth"></param>
            <param name="rectHeight"></param>       
        </member>
        <member name="T:Fusee.Engine.Core.Plane">
            <summary>
            Creates a simple plane geometry straight from the code.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Plane.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.Plane" /> class.
            The default plane is 1 unit big.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Rocket">
            <summary>
            The FUSEE Rocket
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Rocket.Build">
            <summary>
            Builds the whole FUSEE rocket and returns it as a SceneContainer
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Rocket.ShaderWhite">
            <summary>
            Returns the ShaderEffect for the white part of the FUSEE rocket
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Rocket.ShaderGreen">
            <summary>
            Returns the ShaderEffect for the green part of the FUSEE rocket
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Rocket.ShaderGrey">
            <summary>
            Returns the ShaderEffect for the grey part of the FUSEE rocket
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Rocket.TransformWhite">
            <summary>
            Returns the Transform for the white part of the FUSEE rocket
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Rocket.TransformGreen">
            <summary>
            Returns the Transform for the green part of the FUSEE rocket
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Rocket.TransformGrey">
            <summary>
            Returns the Transform for the grey part of the FUSEE rocket
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Rocket.MeshWhite">
            <summary>
            Returns the Mesh for the white part of the FUSEE rocket
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Rocket.MeshGreen">
            <summary>
            Returns the Mesh for the green part of the FUSEE rocket
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Rocket.MeshGrey">
            <summary>
            Returns the Mesh for the grey part of the FUSEE rocket
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.Sphere">
            <summary>
            Creates a simple sphere geometry straight from the code.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Sphere.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.Sphere" /> class.
            The default sphere has a radius of 1 unit.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ProtoToFrag._sc">
            <summary>
            The SceneContainer, containing the scene that gets rendered.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ProtoToFrag.BuildFragmentShaderFor(Fusee.Engine.Core.Scene.ShaderEffect)">
            <summary>
            If a ShaderEffectComponent is visited the ShaderEffect of the <see cref="T:Fusee.Engine.Core.RendererState"/> is updated and the effect is set in the <see cref="T:Fusee.Engine.Core.RenderContext"/>.
            </summary>
            <param name="shaderComponent">The ShaderEffectComponent</param>
        </member>
        <member name="T:Fusee.Engine.Core.RenderCanvas">
            <summary>
                A render canvas object references the physical output screen space real estate (e.g. the rendering window).
                A typical Game application will inherit from this class and overwrite methods to implement your user code to
                to be performed on events like initialization, resize, and display refresh.
                In the future, it will be likely that this class' functionality will be divided at two different places with
                one containing the more view oriented aspects and the other containing the more application oriented aspects.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderCanvas.CanvasImplementor">
            <summary>
                Gets and sets the canvas implementor.
            </summary>
            <value>
                The canvas implementor.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.RenderCanvas.ContextImplementor">
            <summary>
                Gets and sets the RenderContext implementor.
            </summary>
            <value>
                The context implementor.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.RenderCanvas.AudioImplementor">
            <summary>
                Gets and sets the audio implementor.
            </summary>
            <value>
                The audio implementor.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.RenderCanvas.InputDriverImplementor">
            <summary>
                Gets and sets the input driver implementor.
            </summary>
            <value>
                The input driver implementor.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.RenderCanvas.VideoManagerImplementor">
            <summary>
                Gets and sets the video manager implementor.
            </summary>
            <value>
                The video manager implementor.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.RenderCanvas.NetworkImplementor">
            <summary>
                Gets and sets the network implementor.
            </summary>
            <value>
                The network implementor.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.RenderCanvas.RC">
            <summary>
                Returns the render context object.
            </summary>
            <value>
                Use the render context (<see cref="T:Fusee.Engine.Core.RenderContext" />) to fill the render canvas with 3d contents.
            </value>
        </member>
        <member name="M:Fusee.Engine.Core.RenderCanvas.GetAppName">
            <summary>
                Gets the name of the app.
            </summary>
            <returns>Name of the app as string.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.RenderCanvas.GetWindowWidth">
            <summary>
                Gets the width of the application's window.
            </summary>
            <returns>Width of the application's window as int.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.RenderCanvas.GetWindowHeight">
            <summary>
                Gets the height of the application's window.
            </summary>
            <returns>Height of the application's window as int.</returns>
        </member>
        <member name="F:Fusee.Engine.Core.RenderCanvas._appInitialized">
            <summary>
            Whether or not the app is initialized.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RenderCanvas.InitCanvas">
            <summary>
            Initializes the canvas for the rendering loop.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RenderCanvas.RenderAFrame">
            <summary>
                Callback method to invoke user code for rendering a frame.
            </summary>
            <remarks>
                Override this method in inherited classes of RenderCanvas to render 3D contents. Typically, an application will
                use the render context (<see cref="P:Fusee.Engine.Core.RenderCanvas.RC" />) to achieve this. Consider the code you implement here as the body of the
                application's rendering loop.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.RenderCanvas.Init">
            <summary>
                Callback method to invoke user code after initialization of the render canvas.
            </summary>
            <remarks>
                Override this method in inherited classes of RenderCanvas to apply initialization code. Typically, an application
                will call one-time initialization code on the render context (<see cref="P:Fusee.Engine.Core.RenderCanvas.RC" />) to set render states.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.RenderCanvas.DeInit">
            <summary>
                Used to release the resources of all audio and network instances.
                All audio and network resources get reset.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RenderCanvas.Resize(Fusee.Engine.Common.ResizeEventArgs)">
            <summary>
                Callback method to invoke user code when the render canvas size changes.
            </summary>
            <remarks>
                Override this method in inherited classes of RenderCanvas to apply window resize code. Typically, an application
                will change the projection matrix of the render context (<see cref="P:Fusee.Engine.Core.RenderCanvas.RC" />) to match the new aspect ratio.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.RenderCanvas.SetCursor(Fusee.Engine.Common.CursorType)">
            <summary>
                Set the cursor (the mouse pointer image) to one of the predefined types
            </summary>
            <param name="cursorType">The type of the cursor to set.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderCanvas.OpenLink(System.String)">
            <summary>
                Opens the given URL in the user's standard web browser. The link MUST start with "http://".
            </summary>
            <param name="link">The URL to open</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderCanvas.Run">
            <summary>
                Runs this instance.
            </summary>
            <remarks>
                Users should call this method of their RenderCanvas instance to start the application. The RenderCanvas will then
                do all
                necessary initialization, call the Init method and enter the application main loop.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.RenderCanvas.Present">
            <summary>
                Presents the contents of the back-buffer on the visible part of this render canvas.
            </summary>
            <remarks>
                Call this method from your rendering code implementation <see cref="M:Fusee.Engine.Core.RenderCanvas.RenderAFrame" /> after rendering geometry on
                the rendering context.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.RenderCanvas.SetWindowSize(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
                Sets the size of the output window for desktop development.
            </summary>
            <param name="width">The width of the window.</param>
            <param name="height">The height of the window.</param>
            <param name="posx">The x position of the window.</param>
            <param name="posy">The y position of the window.</param>
            <param name="borderHidden">Show the window border or not.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderCanvas.CloseGameWindow">
            <summary>
                Closes the GameWindow with a call to OpenTK.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderCanvas.Width">
            <summary>
                Retrieves the width of the canvas.
            </summary>
            <value>
                The width in pixels.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.RenderCanvas.Height">
            <summary>
                Retrieves the height of the canvas.
            </summary>
            <value>
                The height in pixels.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.RenderCanvas.VSync">
            <summary>
                Gets and sets a value indicating whether VSync is active.
            </summary>
            <value>
                <c>true</c> if VSync is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.RenderCanvas.Fullscreen">
            <summary>
                Gets and sets a value indicating whether this <see cref="T:Fusee.Engine.Core.RenderCanvas" /> is fullscreen.
            </summary>
            <value>
                <c>true</c> if fullscreen; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Fusee.Engine.Core.RenderContext">
            <summary>
            The render context contains all functions necessary to manipulate the underlying rendering hardware. Use this class' elements
            to render geometry to the RenderCanvas associated with this context. If you have worked with OpenGL or DirectX before you will find
            many similarities in this class' methods and properties.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.ClearColor">
            <summary>
            The color to use when clearing the color buffer.
            </summary>
            <value>
            The color value is interpreted as a (Red, Green, Blue, Alpha) quadruple with
            component values ranging from 0.0f to 1.0f.
            </value>
            <remarks>
            This is the color that will be copied to all pixels in the output color buffer when Clear is called on the render context.
            </remarks>
            <seealso cref="M:Fusee.Engine.Core.RenderContext.Clear(Fusee.Engine.Common.ClearFlags)"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.ClearDepth">
            <summary>
            The depth value to use when clearing the color buffer.
            </summary>
            <value>
            Typically set to the highest possible depth value. Typically ranges between 0 and 1.
            </value>
            <remarks>
            This is the depth (z-) value that will be copied to all pixels in the depth (z-) buffer when Clear is called on the render context.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.DefaultState">
            <summary>
            Contains the default state of the render context. can be used to reset this RenderContext to it's DefaultState.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.RenderFrustum">
            <summary>
            The world space frustum planes, derived from the current view-projection matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.RenderContext.GlobalFXParams">
            <summary>
            Saves all global shader parameters. "Global" are those which get updated by a SceneRenderer, e.g. the matrices or the parameters of the lights.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.CurrentRenderState">
            <summary>
            Saves the current RenderState.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.LockedStates">
            <summary>
            If a state is forced it will remain the value currently set in <see cref="P:Fusee.Engine.Core.RenderContext.CurrentRenderState"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.ViewportWidth">
            <summary>
            Gets and sets the viewport width.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.ViewportHeight">
            <summary>
            Gets and sets the viewport height.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.ViewportXStart">
            <summary>
            Gets and sets the x coordinate of viewport's lower left (starting) point.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.ViewportYStart">
            <summary>
            Gets and sets the y coordinate of viewport's lower left (starting) point.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.RenderContext._currentShaderEffect">
            <summary>
            The currently used <see cref="T:Fusee.Engine.Core.Scene.ShaderEffect"/> is set in <see cref="M:Fusee.Engine.Core.RenderContext.SetShaderEffect(Fusee.Engine.Core.Scene.ShaderEffect)"/>.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.RenderContext._currentShaderProgram">
            <summary>
            The currently bound shader program. One <see cref="T:Fusee.Engine.Core.Scene.ShaderEffect"/> can result in one to _n_ <see cref="T:Fusee.Engine.Core.ShaderProgram"/>s, one for each pass.
            Is set in <see cref="M:Fusee.Engine.Core.RenderContext.Render(Fusee.Engine.Core.Scene.Mesh)"/> --> <see cref="M:Fusee.Engine.Core.RenderContext.SetShaderProgram(Fusee.Engine.Core.ShaderProgram)"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.View">
            <summary>
            The View matrix used by the rendering pipeline.
            </summary>
            <value>
            The view matrix.
            </value>
            <remarks>
            This matrix is also referred often as the camera transformation(not the projection). 
            It describes the orientation of the view that is used to render a scene.
            You can use <see cref="M:Fusee.Math.Core.float4x4.LookAt(Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3)"/> to create a valid view matrix and analyze how it is build up.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.Model">
            <summary>
            The Model matrix used by the rendering pipeline.
            </summary>
            <value>
            The model matrix.
            </value>
            <remarks>
            Model coordinates are the coordinates directly taken from the model (the mesh geometry - <see cref="T:Fusee.Engine.Core.Scene.Mesh"/>).
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.Projection">
            <summary>
            The projection matrix used by the rendering pipeline
            </summary>
            <value>
            The 4x4 projection matrix applied to view coordinates yielding clip space coordinates.
            </value>
            <remarks>
            View coordinates are the result of the ModelView matrix multiplied to the geometry (<see cref="P:Fusee.Engine.Core.RenderContext.ModelView"/>).
            The coordinate system of the view space has its origin in the camera center with the z axis aligned to the viewing direction, and the x- and
            y axes aligned to the viewing plane. Still, no projection from 3d space to the viewing plane has been performed. This is done by multiplying
            view coordinate geometry with the projection matrix. Typically, the projection matrix either performs a parallel projection or a perspective
            projection.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.ModelView">
            <summary>
            The ModelView matrix used by the rendering pipeline.
            </summary>
            <value>
            The 4x4 ModelView matrix defining the transformation applied to model coordinates yielding view coordinates.
            </value>
            <remarks>
            Model coordinates are the coordinates directly taken from the model (the mesh geometry - <see cref="T:Fusee.Engine.Core.Scene.Mesh"/>). The rendering pipeline
            transforms these coordinates into View coordinates. Further down the pipeline the coordinates will be transformed to screen coordinates to allow the
            geometry to be rendered to pixel positions on the screen. The ModelView matrix defines the transformations performed on the original model coordinates
            to yield view coordinates. In most cases the matrix is a composition of several translations, rotations, and scale operations.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.ModelViewProjection">
            <summary>
            The combination of the ModelView and Projection matrices.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix multiplication of the ModelView and the Projection matrix.
            </value>
            <remarks>
            <see cref="P:Fusee.Engine.Core.RenderContext.ModelView"/> and <see cref="P:Fusee.Engine.Core.RenderContext.Projection"/>.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.InvView">
            <summary>
            Gets the inverted View matrix.
            </summary>
            <value>
            The inverted view matrix.
            </value>
            <remarks>
            If the View matrix is orthogonal (i.e. contains no scale component), its inverse matrix
            is equal to its transpose matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.View"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.TransView"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.InvModel">
            <summary>
            Gets the inverted Model matrix.
            </summary>
            <value>
            The inverted Model matrix.
            </value>
            <remarks>
            If the Model matrix is orthogonal (i.e. contains no scale component), its inverse matrix
            is equal to its transpose matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.Model"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.TransModel"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.InvModelView">
            <summary>
            The inverse of the ModelView matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion applied to the ModelView matrix.
            </value>
            <remarks>
            If the ModelView matrix is orthogonal (i.e. contains no scale component), its inverse matrix
            is equal to its transpose matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.ModelView"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.TransModelView"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.InvProjection">
            <summary>
            The inverse of the Projection matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion applied to the Projection matrix.
            </value>
            <remarks>
            If the Projection matrix is orthogonal (i.e. contains no scale component), its inverse matrix
            is equal to its transpose matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.Projection"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.TransProjection"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.InvModelViewProjection">
            <summary>
            The inverse of the ModelViewProjection matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion applied to the ModelViewProjection matrix.
            </value>
            <remarks>
            If the ModelViewProjection matrix is orthogonal (i.e. contains no scale component), its inverse matrix
            is equal to its transpose matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.ModelViewProjection"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.TransModelViewProjection"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.TransView">
            <summary>
            The transpose of the View matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix transpose applied to the View matrix.
            </value>
            <remarks>
            If the View matrix is orthogonal (i.e. contains no scale component), its transpose matrix
            is equal to its inverse matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.View"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.InvView"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.TransModel">
            <summary>
            The transpose of the Model matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix transpose applied to the Model matrix.
            </value>
            <remarks>
            If the Model matrix is orthogonal (i.e. contains no scale component), its transpose matrix
            is equal to its inverse matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.Model"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.InvModel"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.TransModelView">
            <summary>
            The transpose of the ModelView matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix transpose applied to the ModelView matrix.
            </value>
            <remarks>
            If the ModelView matrix is orthogonal (i.e. contains no scale component), its transpose matrix
            is equal to its inverse matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.ModelView"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.InvModelView"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.TransProjection">
            <summary>
            The transpose of the Projection matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix transpose applied to the Projection matrix.
            </value>
            <remarks>
            If the Projection matrix is orthogonal (i.e. contains no scale component), its transpose matrix
            is equal to its inverse matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.Projection"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.InvProjection"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.TransModelViewProjection">
            <summary>
            The transpose of the ModelViewProjection matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix transpose applied to the ModelViewProjection matrix.
            </value>
            <remarks>
            If the ModelViewProjection matrix is orthogonal (i.e. contains no scale component), its transpose matrix
            is equal to its inverse matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.ModelViewProjection"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.InvModelViewProjection"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.InvTransView">
            <summary>
            The inverse transpose of the View matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion and transpose applied to the View matrix.
            </value>
            <remarks>
            If the View matrix is orthogonal (i.e. contains no scale component), its inverse transpose matrix
            is the same as the original View matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.View"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.InvView"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.TransView"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.InvTransModel">
            <summary>
            The inverse transpose of the Model matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion and transpose applied to the Model matrix.
            </value>
            <remarks>
            If the Model matrix is orthogonal (i.e. contains no scale component), its inverse transpose matrix
            is the same as the original Model matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.Model"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.InvModel"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.TransModel"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.InvTransModelView">
            <summary>
            The inverse transpose of the ModelView matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion and transpose applied to the ModelView matrix.
            </value>
            <remarks>
            If the ModelView matrix is orthogonal (i.e. contains no scale component), its inverse transpose matrix
            is the same as the original ModelView matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.ModelView"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.InvModelView"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.TransModelView"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.InvTransProjection">
            <summary>
            The inverse transpose of the Projection matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion and transpose applied to the Projection matrix.
            </value>
            <remarks>
            If the Projection matrix is orthogonal (i.e. contains no scale component), its inverse transpose matrix
            is the same as the original Projection matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.Projection"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.InvProjection"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.TransProjection"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.InvTransModelViewProjection">
            <summary>
            The inverse transpose of the ModelViewProjection matrix.
            </summary>
            <value>
            The 4x4 matrix resulting from the matrix inversion and transpose applied to the ModelViewProjection matrix.
            </value>
            <remarks>
            If the ModelViewProjection matrix is orthogonal (i.e. contains no scale component), its inverse transpose matrix
            is the same as the original ModelViewProjection matrix.
            </remarks>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.ModelViewProjection"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.InvModelViewProjection"/>
            <seealso cref="P:Fusee.Engine.Core.RenderContext.TransModelViewProjection"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContext.Bones">
            <summary>
            Array of bone matrices.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.#ctor(Fusee.Engine.Common.IRenderContextImp)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.RenderContext"/> class.
            </summary>
            <param name="rci">The <see cref="T:Fusee.Engine.Common.IRenderContextImp"/>.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.Clear(Fusee.Engine.Common.ClearFlags)">
            <summary>
            Erases the contents of the specified rendering buffers.
            </summary>
            <param name="flags">A combination of flags specifying the rendering buffers to clear.</param>
            <remarks>
            Calling this method erases all contents of the rendering buffers. A typical use case for this method
            is to erase the contents of the color buffer and the depth buffer (z-buffer) before rendering starts
            at the beginning of a rendering loop. Thus, rendering the current frame starts with an empty color and
            z-buffer. <see cref="T:Fusee.Engine.Common.ClearFlags"/> for a list of possible buffers to clear. Make sure to use the bitwise
            or-operator (|) to combine several buffers to clear.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.Viewport(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the rectangular output region within the output buffer(s).
            </summary>
            <param name="x">leftmost pixel of the rectangular output region within the output buffer.</param>
            <param name="y">topmost pixel of the rectangular output region within the output buffer.</param>
            <param name="width">horizontal size (in pixels) of the output region.</param>
            <param name="height">vertical size (in pixels) of the output region.</param>       
            <remarks>
            Setting the Viewport limits the rendering output to the specified rectangular region.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.UpdateTextureRegion(Fusee.Engine.Core.Texture,Fusee.Engine.Core.Texture,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Updates a rectangular region of a given Texture (dstTexture) by copying a rectangular block from another texture (srcTexture).
            </summary>
            <param name="dstTexture">This Textures region will be updated.</param>
            <param name="srcTexture">This is the source from which the region will be copied.</param>
            <param name="startX">x offset in pixels.</param>
            <param name="startY">y offset in pixels.</param>
            <param name="width">Width in pixels.</param>
            <param name="height">Height in pixels.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.DeleteFrameBuffer(Fusee.Engine.Common.IBufferHandle)">
            <summary>
            Free all allocated gpu memory that belongs to a frame-buffer object.
            </summary>
            <param name="bufferHandle">The platform dependent abstraction of the gpu buffer handle.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.DeleteRenderBuffer(Fusee.Engine.Common.IBufferHandle)">
            <summary>
            Free all allocated gpu memory that belongs to a render-buffer object.
            </summary>
            <param name="bufferHandle">The platform dependent abstraction of the gpu buffer handle.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.SetShaderParamTexture(Fusee.Engine.Common.IShaderParam,Fusee.Engine.Core.Texture)">
            <summary>
            Sets a Shader Parameter to a created texture.
            </summary>
            <param name="param">Shader Parameter used for texture binding.</param>
            <param name="texture">An ITexture.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.SetShaderParamWritableTexture(Fusee.Engine.Common.IShaderParam,Fusee.Engine.Core.WritableTexture)">
            <summary>
            Sets a Shader Parameter to a created texture.
            </summary>
            <param name="param">Shader Parameter used for texture binding.</param>
            <param name="texture">An ITexture.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.SetShaderParamWritableTextureArray(Fusee.Engine.Common.IShaderParam,Fusee.Engine.Core.WritableTexture[])">
            <summary>
            Sets a Shader Parameter to a created texture.
            </summary>
            <param name="param">Shader Parameter used for texture binding.</param>
            <param name="textures">A texture array.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.SetShaderParamWritableCubeMap(Fusee.Engine.Common.IShaderParam,Fusee.Engine.Core.WritableCubeMap)">
            <summary>
            Sets a Shader Parameter to a created texture.
            </summary>
            <param name="param">Shader Parameter used for texture binding.</param>
            <param name="texture">An ITexture.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.SetShaderEffect(Fusee.Engine.Core.Scene.ShaderEffect)">
            <summary>
            Activates the passed shader effect as the current shader for geometry rendering.
            Will compile a shader by calling <see cref="M:Fusee.Engine.Common.IRenderContextImp.CreateShaderProgram(System.String,System.String,System.String)"/> if it hasn't been compiled yet.
            </summary>
            <param name="ef">The shader effect.</param>
            <remarks>A ShaderEffect must be attached to a context before you can render geometry with it. The main
            task performed in this method is compiling the provided shader source code and uploading the shaders to
            the gpu.</remarks>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.CreateAllShaderEffectVariables(Fusee.Engine.Core.Scene.ShaderEffect,System.Collections.Generic.Dictionary{System.String,Fusee.Engine.Common.ShaderParamInfo})">
            <summary>
            Gets the <see cref="T:Fusee.Engine.Core.CompiledShaderEffect"/> from the RC's dictionary and creates all effect parameters. 
            </summary>
            <param name="ef">The ShaderEffect the parameters are created for.</param>
            <param name="activeUniforms">The active uniform parameters, as they are saved in the source shader on the gpu.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.SetGlobalEffectParam(System.String,System.Object)">
            <summary>
            Sets global effect parameters by updating or adding them in the GlobalFXParams list.
            Changes will only have an effect when rendering.
            </summary>
            <param name="name">Effect parameter name.</param>
            <param name="value">Effect parameter value.</param>        
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.UpdateParameterInCompiledEffect(Fusee.Engine.Core.Scene.ShaderEffect,System.String,System.Object)">
            <summary>
            Called from the <see cref="E:Fusee.Engine.Core.Scene.ShaderEffect.ShaderEffectChanged"/> event. Will lookup the CompiledShaderEffect and change the value of the parameter there.
            </summary>
            <param name="ef">The ShaderEffect.</param>
            <param name="name">The parameter's name</param>
            <param name="paramValue">The parameter's value.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.RemoveShader(Fusee.Engine.Core.Scene.ShaderEffect)">
            <summary>
            Removes given shader program from GPU. Should ONLY be used by the <see cref="T:Fusee.Engine.Core.ShaderEffectManager"/>!
            </summary>
            <param name="ef">The ShaderEffect.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.SetShaderProgram(Fusee.Engine.Core.ShaderProgram)">
            <summary>
            Activates the passed shader program as the current shader for rendering.
            </summary>
            <param name="program">The shader to apply to mesh geometry subsequently passed to the RenderContext</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.SetShaderParamT(Fusee.Engine.Core.EffectParam)">
            <summary>
            Sets the shaderParam, works with every type.
            </summary>
            <param name="param"></param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.EnableDepthClamp">
            <summary>
            The clipping behavior against the Z position of a vertex can be turned off by activating depth clamping. 
            This is done with glEnable(GL_DEPTH_CLAMP). This will cause the clip-space Z to remain unclipped by the front and rear viewing volume.
            See: https://www.khronos.org/opengl/wiki/Vertex_Post-Processing#Depth_clamping
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.DisableDepthClamp">
            <summary>
            Disables depths clamping. <seealso cref="M:Fusee.Engine.Core.RenderContext.EnableDepthClamp"/>
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.GetHardwareCapabilities(Fusee.Engine.Common.HardwareCapability)">
            <summary>
            Returns the hardware capabilities.
            </summary>
            <param name="capability"></param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.GetHardwareDescription">
            <summary>
            Returns a human readable description of the underlying graphics hardware
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.UnlockRenderState(Fusee.Engine.Common.RenderState,System.Boolean)">
            <summary>
            Unlocks the given <see cref="T:Fusee.Engine.Common.RenderState"/>. And sets it to the value it had before it was locked.
            After this call the state can be set to a new value again.
            </summary>
            <param name="state">The state to unlock.</param>
            <param name="resetValue">True by default. Defines if the state gets reset to its pre-locked value.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.UnlockAllRenderStates(System.Boolean)">
            <summary>
            Unlocks all previously locked <see cref="T:Fusee.Engine.Common.RenderState"/>s.
            <param name="resetValue">True by default. Defines if the states get reset to their pre-locked value.</param>
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.SetRenderState(Fusee.Engine.Common.RenderState,System.UInt32,System.Boolean)">
            <summary>
            Apply a single render state to the render context. All subsequent rendering will be
            performed using the currently set state unless it is changed to a different value.
            </summary>
            <param name="renderState">One of the <see cref="T:Fusee.Engine.Common.RenderState"/> enumeration values.</param>
            <param name="value">An unsigned integer value representing the value the state should be set to.
             Depending on the renderState, this value can be interpreted as an integer value, a float value, a
            boolean value, or even a color.  </param>
            <param name="doLockState">Forces this state to have the given value and locks the state. Unlock it by calling <see cref="M:Fusee.Engine.Core.RenderContext.UnlockRenderState(Fusee.Engine.Common.RenderState,System.Boolean)"/></param>
            <remarks>This method is close to the underlying implementation layer and might be awkward to use
            due to the ambiguity of the value parameter type. If you want type-safe state values and also 
            want to set a couple of states at the same time, try the more 
            elaborate <see cref="M:Fusee.Engine.Core.RenderContext.SetRenderStateSet(Fusee.Engine.Core.RenderStateSet,System.Boolean)"/> method.</remarks>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.SetRenderStateSet(Fusee.Engine.Core.RenderStateSet,System.Boolean)">
            <summary>
            Apply a number of render states to this render context. All subsequent rendering will be
            performed using the currently set state set unless one of its values it is changed. Use this 
            method to change more than one render state at once. 
            </summary>
            <param name="renderStateSet">A set of render states with their respective values to be set.</param>
            <param name="doLockState">Forces all states that are set in this <see cref="T:Fusee.Engine.Core.RenderStateSet"/> to have the given value and locks them. Unlock them by calling <see cref="M:Fusee.Engine.Core.RenderContext.UnlockRenderState(Fusee.Engine.Common.RenderState,System.Boolean)"/></param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.GetRenderState(Fusee.Engine.Common.RenderState)">
            <summary>
            Returns a current render state.
            </summary>
            <param name="renderState"></param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.SetRenderTarget(Fusee.Engine.Core.RenderTarget)">
            <summary>
            Sets the RenderTarget, if texture is null render target is the main screen, otherwise the picture will be rendered onto given texture
            </summary>
            <param name="renderTarget">The render target.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.SetRenderTarget(Fusee.Engine.Common.IWritableTexture)">
            <summary>
             Renders into the given texture.
            </summary>
            <param name="tex">The render texture.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.SetRenderTarget(Fusee.Engine.Common.IWritableCubeMap)">
            <summary>
            Renders into the given texture.
            </summary>
            <param name="tex">The render texture.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.SetLineWidth(System.Single)">
            <summary>
            Specifies the rasterized width of both aliased and antialiased lines.
            </summary>
            <param name="width">The width in pixel.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.Render(Fusee.Engine.Core.Scene.Mesh)">
            <summary>
            Renders the specified mesh.
            </summary>
            <param name="m">The mesh that should be rendered.</param>
            <remarks>
            Passes geometry to be pushed through the rendering pipeline. <see cref="T:Fusee.Engine.Core.Scene.Mesh"/> for a description how geometry is made up.
            The geometry is transformed and rendered by the currently active shader program.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContext.ResetToDefaultRenderContextState">
            <summary>
            Resets the RenderContexts View, Projection and Viewport to the values defined in <see cref="P:Fusee.Engine.Core.RenderContext.DefaultState"/>.
            Must be called after every visitation of the Scene Graph that changed these values.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.RenderContextDefaultState">
            <summary>
            After every Render call the values are reset to the ones saved here.
            This ensures that we do not necessarily need a Camera in the Scene Graph.
            The viewport width and height is updated with every resize.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContextDefaultState.CanvasWidth">
            <summary>
            This value should be equal to the window/canvas width and is set at every resize.
            If this value is changed the default Projection matrix is recalculated.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContextDefaultState.CanvasHeight">
            <summary>
            This value should be equal to the window/canvas height and is set at every resize.
            If this value is changed the default Projection matrix is recalculated.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.RenderContextDefaultState.View">
            <summary>
            The view matrix.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderContextDefaultState.Projection">
            <summary>
            The projection matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.RenderContextDefaultState.ZNearDefautlt">
            <summary>
            The default distance to the near clipping plane.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.RenderContextDefaultState.ZFarDefault">
            <summary>
            The default distance to the far clipping plane.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.RenderContextDefaultState.FovDefault">
            <summary>
            The default distance field of view.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RenderContextDefaultState.#ctor">
            <summary>
            Creates a new instance of type RenderContextDefaultState.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.RendererState">
            <summary>
            Saves the current status of the rendered scene a set of <see cref="T:Fusee.Xene.CollapsingStateStack`1"/>
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.RendererState._model">
            <summary>
            State of the Model Matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.RendererState._uiRect">
            <summary>
            State of the <see cref="T:Fusee.Math.Core.MinMaxRect"/>.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.RendererState._canvasXForm">
            <summary>
            State of the <see cref="P:Fusee.Engine.Core.RendererState.CanvasXForm"/>.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.RendererState._effect">
            <summary>
            State of the <see cref="T:Fusee.Engine.Core.Scene.ShaderEffect"/>.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.RendererState._renderStates">
            <summary>
            State of the <see cref="T:Fusee.Engine.Core.RenderStateSet"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RendererState.RenderUndoStates">
            <summary>
            Gets and sets the top of stack of the Render states state stack.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RendererState.Model">
            <summary>
            Gets and sets the top of stack of the Model Matrix state stack.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RendererState.UiRect">
            <summary>
            Gets and sets the top of stack of the MinMaxRext state stack.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RendererState.CanvasXForm">
            <summary>
            Gets and sets the top of stack of the CanvasXForm state stack.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RendererState.Effect">
            <summary>
            Gets and sets the shader effect.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RendererState.#ctor">
            <summary>
            Creates a new instance of type RenderState.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.RenderPasses">
            <summary>
            Contains all types of render passes. Is used to control behavior in the SceneRenderer, based on the current type of pass. 
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.RenderStateSet">
            <summary>
            Use instances of this class to store a set of render states that need to be applied as a whole. 
            Instances are used in the effects system to set a couple of states before a render pass is performed.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.Default">
            <summary>
            OpenGL defaults for the render states.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.States">
            <summary>
            Enumerate this set of render states for its contents
            </summary>
            <value>An enumerator to be used in loops returning a key and its respective value.</value>
            <example>
            Use this enumerator in loops to query a RenderStateSet's contents.
            <code>
            RenderStateSet aRenderStateSet = ...;
            foreach (var state in aRenderStateSet.States)
                DoSomethingWithState(state.Key, state.Value);
            </code>
            </example>
        </member>
        <member name="M:Fusee.Engine.Core.RenderStateSet.#ctor">
            <summary>
            Returns a new instance of type <see cref="T:Fusee.Engine.Core.RenderStateSet"/>.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RenderStateSet.#ctor(System.Collections.Generic.Dictionary{Fusee.Engine.Common.RenderState,System.UInt32})">
            <summary>
            Returns a new instance of type <see cref="T:Fusee.Engine.Core.RenderStateSet"/>.
            </summary>
            <param name="states">The values to fill this state set with.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderStateSet.Copy">
            <summary>
            Returns a new RenderStateSet with the same states as this instance.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RenderStateSet.Delta(Fusee.Engine.Core.RenderStateSet)">
            <summary>
            Returns a new RenderStateSet which contains the delta of this instance (A) and a given RenderStateSet (B).
            Rules
            1. A has state and B has state and A == B: no need to add the state.
            2. A has state and B has state and A != B: set state to value of A.
            3. A has state and B does not: set state to value of A.
            4. B has state and A has not: set state to default value.
            </summary>
            <param name="otherSet"></param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.RenderStateSet.SetRenderStates(System.Collections.Generic.Dictionary{System.UInt32,System.UInt32})">
            <summary>
            Sets the RenderStates in the Set.
            </summary>
            <param name="renderStateContainer"></param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderStateSet.SetRenderState(Fusee.Engine.Common.RenderState,System.UInt32)">
            <summary>
            Sets the given <see cref="T:Fusee.Engine.Common.RenderState"/> on the internal state collection.
            </summary>
            <param name="state">The state.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderStateSet.GetRenderState(Fusee.Engine.Common.RenderState)">
            <summary>
            Tries to get the value of the given <see cref="T:Fusee.Engine.Common.RenderState"/> from the internal state collection.
            </summary>
            <param name="state">The render state.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.RenderStateSet.GetRenderState(Fusee.Engine.Common.RenderState,System.Nullable{System.UInt32}@)">
            <summary>
            Tries to get the value of the given <see cref="T:Fusee.Engine.Common.RenderState"/> from the internal state collection.
            </summary>
            <param name="state">The render state</param>
            <param name="val">The state as uint.</param>
            <returns></returns>
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.FillMode">
            <summary>
            A value from the <see cref="T:Fusee.Engine.FillMode"/> enumeration that represents the fill mode to apply when rendering triangles.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.CullMode">
            <summary>
            A value from the <see cref="T:Fusee.Engine.Cull"/> enumeration specifying if and how to cull the two different sides of a triangle.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.Clipping">
            <summary>
            Enables or disables primitive (triangle) clipping. Set to true to enable primitive clipping, or false to disable it.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.AlphaBlendEnable">
            <summary>
            Set to true to enable alpha-blended transparency, or false to disable it.
            The type of alpha blending is determined by the <see cref="P:Fusee.Engine.Core.RenderStateSet.SourceBlend"/> and <see cref="P:Fusee.Engine.Core.RenderStateSet.DestinationBlend"/> render states.
            </summary>
            <remarks>
            Blending describes the process how the pixel generated by the pixel shader is written into the render target buffer. Typically
            it is just copied at its respective pixel position, but several operations are possible to perform a calculation between the 
            pixel value (rgb and a) already in the buffer and the pixel value (rgb and a) created by the pixel shader. The general blending
            assignment is  (always independent for rgb and alpha): 
            <code>
                 OUTrgb = SRCrgb * SourceBlend       {BlendOperation: [+|-|-inv|min|max]}        DSTrgb * DestinationBlend;
                 OUTa   = SRCa   * SourceBlendAlpha  {BlendOperationAlpha: [+|-|-inv|min|max]}   DSTa   * DestinationBlendAlpha;
            </code>
            where:
            <list type="bullet">
            <item><description>OUT: The new pixel written to the output buffer</description></item>
            <item><description>SRC: The pixel generated by the pixel shader</description></item>
            <item><description>DST: The pixel already in the output buffer</description></item>
            <item><description>SourceBlend: See the <see cref="P:Fusee.Engine.Core.RenderStateSet.SourceBlend"/> attribute</description></item>
            <item><description>DestinationBlend: See the <see cref="P:Fusee.Engine.Core.RenderStateSet.DestinationBlend"/> attribute</description></item>
            <item><description>SourceBlendAlpha: See the <see cref="P:Fusee.Engine.Core.RenderStateSet.SourceBlendAlpha"/> attribute</description></item>
            <item><description>DestinationBlendAlpha: See the <see cref="P:Fusee.Engine.Core.RenderStateSet.DestinationBlendAlpha"/> attribute</description></item>
            </list>
            The following example shows how to set-up the combiner to use the alpha value passed to gl_FragColor.a in the 
            pixel shader as the opacity of the resulting pixel's color. The color is blended between the pixel shader's 
            RGB output and the RGB color already in the output buffer.
            <code>
                // Switch alpha blending ON
                RC.SetRenderState(new RenderStateSet
                {
                    AlphaBlendEnable = true,
                    SourceBlend = Blend.SourceAlpha,
                    DestinationBlend = Blend.InvSourceAlpha,
                    BlendOperation = BlendOperation.Add,
                    // In case of particles:
                    ZEnable = true,
                    ZWriteEnable = false,
                });
            
                // Switch alpha blending OFF
                RC.SetRenderState(RenderState.AlphaBlendEnable, 0);
            </code>
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.BlendOperation">
            <summary>
            The blend operation to perform for blending rgb values (one of add, subtract, inverted subtract, max, or min).
            </summary>
            <seealso cref="P:Fusee.Engine.Core.RenderStateSet.AlphaBlendEnable"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.BlendOperationAlpha">
            <summary>
            The blend operation to perform for blending alpha values (one of add, subtract, inverted subtract, max, or min).
            </summary>
            <seealso cref="P:Fusee.Engine.Core.RenderStateSet.AlphaBlendEnable"/>  
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.SourceBlend">
            <summary>
            Contains a member of the <see cref="T:Fusee.Engine.Blend"/> enumeration that represents the source. 
            </summary>
            <seealso cref="P:Fusee.Engine.Core.RenderStateSet.AlphaBlendEnable"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.DestinationBlend">
            <summary>
            Contains a member of the <see cref="T:Fusee.Engine.Blend"/> enumeration that represents the destination. 
            </summary>
            <seealso cref="P:Fusee.Engine.Core.RenderStateSet.AlphaBlendEnable"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.SourceBlendAlpha">
            <summary>
            A member of the Blend enumeration that represents the source.
            </summary>
            <seealso cref="P:Fusee.Engine.Core.RenderStateSet.AlphaBlendEnable"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.DestinationBlendAlpha">
            <summary>
            A member of the Blend enumeration that represents the destination.
            </summary>
            <seealso cref="P:Fusee.Engine.Core.RenderStateSet.AlphaBlendEnable"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.BlendFactor">
            <summary>
            A <see cref="T:Fusee.Math.float4"/> object representing a color used for a constant blend factor during alpha blending.
            </summary>
            <seealso cref="P:Fusee.Engine.Core.RenderStateSet.AlphaBlendEnable"/>
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.ZEnable">
            <summary>
            Enables or disables z-buffering (depth buffering).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.ZFunc">
            <summary>
            Determines the comparison function for the z-buffer test. Valid values are members of the <see cref="T:Fusee.Engine.Compare"/> enumeration.
            The depth value of the pixel is compared to the z-buffer value. If the depth value of the pixel passes the comparison function, the pixel is written.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderStateSet.ZWriteEnable">
            <summary>
            Enables or disables depth buffer writing.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.RenderTarget">
            <summary>
            Use this if you want to render into buffer object, associated with one or more textures.
            If only a single texture is needed, the usage of a <see cref="T:Fusee.Engine.Core.WritableTexture"/> as a render target is preferred.
            Use the "Create__Tex"-Methods of this class to generate the textures you need. The order of the textures in the RenderTextures array is given by the <see cref="T:Fusee.Engine.Common.RenderTargetTextureTypes"/> enum.
            </summary>
        </member>
        <member name="E:Fusee.Engine.Core.RenderTarget.DeleteBuffers">
            <summary>
            Event that deletes unmanaged buffer objects.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderTarget.Disposed">
            Flag: Has Dispose already been called?
        </member>
        <member name="P:Fusee.Engine.Core.RenderTarget.RenderTextures">
            Order of textures in RenderTextures array is given by the corresponding enum.
        </member>
        <member name="P:Fusee.Engine.Core.RenderTarget.GBufferHandle">
            <summary>
            Handle of the corresponding G-Buffer. Used to dispose the object if it isn't needed anymore.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderTarget.DepthBufferHandle">
            <summary>
            Handle of the corresponding Depth Buffer (as renderbuffer). Used to dispose the object if it isn't needed anymore.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderTarget.TextureResolution">
            <summary>
            Sets the resolution of the render textures.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RenderTarget.IsDepthOnly">
            <summary>
            If the RenderTarget only contains a depth texture or a depth cube map, there will be no draw buffers.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RenderTarget.#ctor(Fusee.Engine.Common.TexRes)">
            <summary>
            Creates a new instance of type "RenderTarget".
            </summary>
            <param name="texRes">Resolution of the created Textures.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderTarget.SetTextureFromRenderTarget(Fusee.Engine.Core.RenderTarget,Fusee.Engine.Common.RenderTargetTextureTypes)">
            <summary>
            Sets a RenderTexture from another RenderTarget at the correct position in the RenderTexure array.
            </summary>
            <param name="src">The source RenderTarget.</param>
            <param name="tex">The type of the texture.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderTarget.SetTexture(Fusee.Engine.Core.WritableTexture,Fusee.Engine.Common.RenderTargetTextureTypes)">
            <summary>
            Sets a RenderTexture into the correct position in the RederTexture array.
            </summary>
            <param name="src">The source RenderTexture.</param>
            <param name="tex">The type of the texture.</param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderTarget.SetPositionTex">
            <summary>
            Generates a position texture and sets it at the correct position in the RenderTextures Array.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RenderTarget.SetAlbedoSpecularTex">
            <summary>
            Generates a albedo and specular (alpha channel) texture and sets it at the correct position in the RenderTextures Array.
            </summary>       
        </member>
        <member name="M:Fusee.Engine.Core.RenderTarget.SetNormalTex">
            <summary>
            Generates a normal texture and sets it at the correct position in the RenderTextures Array.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RenderTarget.SetDepthTex(Fusee.Engine.Common.TextureCompareMode,Fusee.Engine.Common.Compare)">
            <summary>
            Generates a depth texture and sets it at the correct position in the RenderTextures Array.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RenderTarget.SetSSAOTex">
            <summary>
            Generates a SSAO texture and sets it at the correct position in the RenderTextures Array.
            </summary>        
        </member>
        <member name="M:Fusee.Engine.Core.RenderTarget.SetSpecularTex">
            <summary>
            Generates a specular texture and sets it at the correct position in the RenderTextures Array.
            </summary>        
        </member>
        <member name="M:Fusee.Engine.Core.RenderTarget.Dispose">
            <summary>
            Public implementation of Dispose pattern callable by consumers.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RenderTarget.Dispose(System.Boolean)">
            <summary>
            The protected implementation of Dispose pattern callable by consumers.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Fusee.Engine.Core.RenderTarget.Finalize">
            <summary>
            Deconstruction of the render target.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.RigidBody">
            <summary>
            The RigidBody class ...
            </summary>
        </member>
        <member name="E:Fusee.Engine.Core.RigidBody.WhileCollidingEvent">
            <summary>
            This event is called while 2 RBs collide
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RigidBody.Gravity">
            <summary>
            Gets and sets the gravity for a rigid body.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RigidBody.Mass">
            <summary>
            Gets and sets the mass of a rigid body.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RigidBody.Inertia">
            <summary>
            Gets and sets the inertia for a rigid body.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RigidBody.WorldTransform">
            <summary>
            Get and sets the world transform
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RigidBody.Position">
            <summary>
            Gets and sets the position for a rigid body.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RigidBody.Rotation">
            <summary>
            The orientation of the rigidbody in world space stored as a Quaternion.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RigidBody.ApplyForce(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Adds a force to the rigidbody. As a result the rigidbody will start moving.
            </summary>
            <param name="force"></param>
            <param name="relPos"></param>
        </member>
        <member name="M:Fusee.Engine.Core.RigidBody.ApplyTorque(Fusee.Math.Core.float3)">
            <summary>
            Adds a torque to the rigidbody.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RigidBody.ApplyImpulse(Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Applies an impulse to a rigid body.
            </summary>
            <param name="impulse"></param>
            <param name="relPos"></param>
        </member>
        <member name="M:Fusee.Engine.Core.RigidBody.ApplyTorqueImpulse(Fusee.Math.Core.float3)">
            <summary>
            Applies a torque impulse to a rigid body.
            </summary>
            <param name="torqueImpulse"></param>
        </member>
        <member name="M:Fusee.Engine.Core.RigidBody.ApplyCentralForce(Fusee.Math.Core.float3)">
            <summary>
            Applies a central force to a rigid body.
            </summary>
            <param name="centralForce"></param>
        </member>
        <member name="M:Fusee.Engine.Core.RigidBody.ApplyCentralImpulse(Fusee.Math.Core.float3)">
            <summary>
            Adds an impulse 
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RigidBody.LinearVelocity">
            <summary>
            Gets and sets the linear velocity for a rigid body.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RigidBody.AngularVelocity">
            <summary>
            Gets and sets the angular velocity for a rigid body.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RigidBody.LinearFactor">
            <summary>
            Gets and sets the linear factor of a rigid body.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RigidBody.AngularFactor">
            <summary>
            Gets and sets the angular factor of a rigid body.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RigidBody.Restitution">
            <summary>
            Gets and sets the restitution of a rigid body
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RigidBody.Friction">
            <summary>
            Gets and sets the friction of rigid body.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.RigidBody.SetDrag(System.Single,System.Single)">
            <summary>
            Sets the drag of a rigidbody.
            </summary>
            <param name="linearDrag"></param>
            <param name="anglularDrag"></param>
        </member>
        <member name="P:Fusee.Engine.Core.RigidBody.LinearDrag">
            <summary>
            Returns the linear drag of a rigid body
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RigidBody.AngularDrag">
            <summary>
            Returns the angular drag of a rigid body.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.RigidBody.CollisionShape">
            <summary>
            TBD
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.PickResult">
            <summary>
            This class contains information about the scene of the picked point.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.PickResult.Node">
            <summary>
            The scene code container.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.PickResult.Mesh">
            <summary>
            The mesh.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.PickResult.Triangle">
            <summary>
            The index of the triangle that was picked.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.PickResult.U">
            <summary>
            The u, v coordinates.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.PickResult.V">
            <summary>
            The u, v coordinates.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.PickResult.Model">
            <summary>
            The model matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.PickResult.View">
            <summary>
            The view matrix
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.PickResult.Projection">
            <summary>
            The projection matrix.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.PickResult.GetTriangle(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@,Fusee.Math.Core.float3@)">
            <summary>
            Gets the triangles of the picked mesh.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
        </member>
        <member name="P:Fusee.Engine.Core.PickResult.TriangleCenter">
            <summary>
            Returns the center of the picked triangle.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.PickResult.TriangleBarycentric">
            <summary>
            Returns the barycentric triangle coordinates.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.PickResult.GetNormals(Fusee.Math.Core.float3@,Fusee.Math.Core.float3@,Fusee.Math.Core.float3@)">
            <summary>
            Gets the normals at the picked triangle.
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
        </member>
        <member name="P:Fusee.Engine.Core.PickResult.NormalCenter">
            <summary>
            Returns the normal at the center of the picked triangle.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.PickResult.NormalBarycentric">
            <summary>
            Returns the barycentric normal coordinates.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.PickResult.ModelPos">
            <summary>
            Returns the model position.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.PickResult.ClipPos">
            <summary>
            Returns the clipping position of the model.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.PickResult.WorldPos">
            <summary>
            Returns the world position of the model.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.PickResult.CameraPos">
            <summary>
            Returns the camera position.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.ScenePicker">
            <summary>
            Implements the scene picker.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.ScenePicker.PickerState">
            <summary>
            The picker state upon scene traversal.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ScenePicker.PickerState.Model">
            <summary>
            The registered model.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ScenePicker.PickerState.UiRect">
            <summary>
            The registered UI rectangle.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ScenePicker.PickerState.CanvasXForm">
            <summary>
            The registered canvas transform.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ScenePicker.PickerState.#ctor">
            <summary>
            The default constructor for the <see cref="T:Fusee.Engine.Core.ScenePicker.PickerState"/> class, which registers state stacks for mode, UI rectangle, and canvas transform.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ScenePicker.View">
            <summary>
            The current view matrix.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ScenePicker.Projection">
            <summary>
            The current projection matrix.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ScenePicker.#ctor(Fusee.Engine.Core.Scene.SceneContainer)">
            <summary>
            The constructor to initialize a new ScenePicker.
            </summary>
            <param name="scene">The <see cref="T:Fusee.Engine.Core.Scene.SceneContainer"/> to pick from.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ScenePicker.InitState">
            <summary>
            This method is called when traversal starts to initialize the traversal state.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ScenePicker.Pick(Fusee.Engine.Core.RenderContext,Fusee.Math.Core.float2)">
            <summary>
            Returns a collection of objects that fall in the area of the pick position and that can be iterated over.
            </summary>
            <param name="rc"></param>
            <param name="pickPos">The pick position.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ScenePicker.RenderCanvasTransform(Fusee.Engine.Core.Scene.CanvasTransform)">
            <summary>
            Sets the state of the model matrices and UiRects.
            </summary>
            <param name="ctc">The CanvasTransformComponent.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ScenePicker.RenderRectTransform(Fusee.Engine.Core.Scene.RectTransform)">
            <summary>
            If a RectTransformComponent is visited the model matrix and MinMaxRect get updated in the <see cref="T:Fusee.Engine.Core.RendererState"/>.
            </summary>
            <param name="rtc">The XFormComponent.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ScenePicker.RenderXForm(Fusee.Engine.Core.Scene.XForm)">
            <summary>
            If a XFormComponent is visited the model matrix gets updated in the <see cref="T:Fusee.Engine.Core.RendererState"/> and set in the <see cref="T:Fusee.Engine.Core.RenderContext"/>.
            </summary>
            <param name="xfc">The XFormComponent.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ScenePicker.RenderXFormText(Fusee.Engine.Core.Scene.XFormText)">
            <summary>
            If a XFormTextComponent is visited the model matrix gets updated in the <see cref="T:Fusee.Engine.Core.RendererState"/> and set in the <see cref="T:Fusee.Engine.Core.RenderContext"/>.
            </summary>
            <param name="xfc">The XFormTextComponent.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ScenePicker.RenderTransform(Fusee.Engine.Core.Scene.Transform)">
            <summary>
            If a TransformComponent is visited the model matrix of the <see cref="T:Fusee.Engine.Core.RenderContext"/> and <see cref="T:Fusee.Engine.Core.RendererState"/> is updated.
            It additionally updates the view matrix of the RenderContext.
            </summary> 
            <param name="transform">The TransformComponent.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ScenePicker.PickMesh(Fusee.Engine.Core.Scene.Mesh)">
            <summary>
            Creates pick results from a given mesh if it is within the pick position.
            </summary>
            <param name="mesh">The given Mesh.</param>
        </member>
        <member name="P:Fusee.Engine.Core.ScenePicker.PickPosClip">
            <summary>
            The pick position on the screen.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.SceneRendererDeferred">
            <summary>
            Use a Scene Renderer to traverse a scene hierarchy (made out of scene nodes and components) in order
            to have each visited element contribute to the result rendered against a given render context.
            This particular SceneRenderer uses deferred rendering.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SceneRendererDeferred.BackgroundColor">
            <summary>
            Sets the GL.ClearColor
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SceneRendererDeferred.ShadowMapRes">
            <summary>
            Sets the Shadow Map resolution.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SceneRendererDeferred.TexRes">
            <summary>
            Sets the G-Buffer texture resolution.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SceneRendererDeferred.FxaaOn">
            <summary>
            Determines if the scene gets rendered with Fast Approximate Anti Aliasing.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SceneRendererDeferred.SsaoOn">
            <summary>
            Determines if the scene gets rendered with Screen Space Ambient Occlusion.
            If possible set this in the "Init" method to avoid the creation of an SSAO texture if you don't need one.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.SceneRendererDeferred.PssmLambda">
            <summary>
            This value is used for cascaded shadow mapping.
            The viewing frustum is split according to the Parallel Split Shadow Maps algorithm. 
            With this, the lambda value specifies a weight that adapts the logarithmic view frustum split according to the far planes of a uniform split.
            A value in the range [0;1] is expected. If it falls outside this range the value is clamped.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.SceneRendererDeferred.NumberOfCascades">
            <summary>
            The number of shadow maps, generated when using cascaded shadow mapping for parallel lights.
            If set to 1 standard shadow mapping is used.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererDeferred.#ctor(Fusee.Engine.Core.Scene.SceneContainer,Fusee.Engine.Common.TexRes,Fusee.Engine.Common.TexRes)">
            <summary>
            Creates a new instance of type SceneRendererDeferred.
            </summary>
            <param name="sc">The SceneContainer, containing the scene that gets rendered.</param>
            <param name="texRes">The g-buffer texture resolution.</param>
            <param name="shadowMapRes">The shadow map resolution.</param>       
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererDeferred.RenderShaderEffect(Fusee.Engine.Core.Scene.ShaderEffect)">
            <summary>
            If a ShaderEffectComponent is visited the ShaderEffect of the <see cref="T:Fusee.Engine.Core.RendererState"/> is updated and the effect is set in the <see cref="T:Fusee.Engine.Core.RenderContext"/>.
            </summary>
            <param name="shaderComponent">The ShaderEffectComponent</param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererDeferred.RenderMesh(Fusee.Engine.Core.Scene.Mesh)">
            <summary>
            If a Mesh is visited and it has a <see cref="T:Fusee.Engine.Core.Scene.Weight"/> the BoneIndices and  BoneWeights get set, 
            the shader parameters for all lights in the scene are updated and the geometry is passed to be pushed through the rendering pipeline.        
            </summary>
            <param name="mesh">The Mesh.</param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererDeferred.PopState">
            <summary>
            Pops from the RenderState and sets the Model and View matrices in the RenderContext.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererDeferred.Render(Fusee.Engine.Core.RenderContext,Fusee.Engine.Core.WritableTexture)">
            <summary>
            Renders the scene.
            </summary>
            <param name="rc">The <see cref="T:Fusee.Engine.Core.RenderContext"/>.</param>
            <param name="renderTex">If the render texture isn't null, the last pass of the deferred pipeline will render into it, else it will render to the screen.</param>        
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererDeferred.RenderLightPasses(Fusee.Engine.Core.WritableTexture)">
            <summary>
            Renders one (lighting calculation) pass for each light and blends the results together. 
            Alternatively it would be possible to iterate the lights in the shader, but this would create a more complex shader. Additionally it would be more difficult to implement a dynamic number of lights.
            The iteration here should not prove critical, due to the scene only consisting of a single quad.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.SceneRendererForward">
            <summary>
            Use a Scene Renderer to traverse a scene hierarchy (made out of scene nodes and s) in order
            to have each visited element contribute to the result rendered against a given render context.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.SceneRendererForward.HasNumberOfLightsChanged">
             <summary>
            Is set to true if a light was added or removed from the scene.
             /// </summary>
        </member>
        <member name="F:Fusee.Engine.Core.SceneRendererForward.DoFrumstumCulling">
            <summary>
            Enables or disables Frustum Culling.
            If we render with one or more cameras this value will be overwritten by <see cref="F:Fusee.Engine.Core.Scene.Camera.FrustumCullingOn"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SceneRendererForward.LightViseratorResults">
            <summary>
            Light results, collected from the scene in the <see cref="T:Fusee.Engine.Core.PrePassVisitor"/>.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.SceneRendererForward._boneMap">
            <summary>
            Caches SceneNodes and their model matrices. Used when visiting a <see cref="T:Fusee.Engine.Core.Scene.Bone"/>.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.SceneRendererForward._animation">
            <summary>
            Manages animations.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.SceneRendererForward._sc">
            <summary>
            The Scene, containing the scene that gets rendered.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.SceneRendererForward._rc">
            <summary>
            The RenderContext, used to render the scene.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.SceneRendererForward._state">
            <summary>
            Holds the status of the model matrices and other information we need while traversing up and down the scene graph.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.SceneRendererForward._lightResults">
            <summary>
            List of <see cref="T:Fusee.Engine.Core.LightResult"/>, created by the <see cref="T:Fusee.Engine.Core.PrePassVisitor"/>.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.#ctor(Fusee.Engine.Core.Scene.SceneContainer)">
            <summary>
            Creates a new instance of type SceneRendererForward.
            This scene renderer is used for forward rendering.
            </summary>
            <param name="sc">The <see cref="N:Fusee.Engine.Core.Scene"/> containing the scene that is rendered.</param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.InitAnimations(Fusee.Engine.Core.Scene.SceneContainer)">
            <summary>
            Initializes animations, given as <see cref="T:Fusee.Xirkit.Animation"/>.
            </summary>
            <param name="sc">The Scene, containing the Animations.</param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.Animate">
            <summary>
            Handles animations.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.SetContext(Fusee.Engine.Core.RenderContext)">
            <summary>
            Sets the render context for the given scene.
            </summary>
            <param name="rc"></param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.Render(Fusee.Engine.Core.RenderContext)">
            <summary>
            Renders the scene.
            </summary>
            <param name="rc"></param>       
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.AccumulateLight">
            <summary>
            Viserates the Light and caches them in a dedicated field.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.RenderBone(Fusee.Engine.Core.Scene.Bone)">
            <summary>
            Renders the Bone.
            </summary>
            <param name="bone">The bone.</param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.RenderWeight(Fusee.Engine.Core.Scene.Weight)">
            <summary>
            Renders the weight.
            </summary>
            <param name="weight"></param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.RenderCanvasTransform(Fusee.Engine.Core.Scene.CanvasTransform)">
            <summary>
            Sets the state of the model matrices and UiRects.
            </summary>
            <param name="ctc">The CanvasTransform.</param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.RenderRectTransform(Fusee.Engine.Core.Scene.RectTransform)">
            <summary>
            If a RectTransform is visited the model matrix and MinMaxRect get updated in the <see cref="T:Fusee.Engine.Core.RendererState"/>.
            </summary>
            <param name="rtc">The XForm.</param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.RenderXForm(Fusee.Engine.Core.Scene.XForm)">
            <summary>
            If a XForm is visited the model matrix gets updated in the <see cref="T:Fusee.Engine.Core.RendererState"/> and set in the <see cref="T:Fusee.Engine.Core.RenderContext"/>.
            </summary>
            <param name="xfc">The XForm.</param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.RenderXFormText(Fusee.Engine.Core.Scene.XFormText)">
            <summary>
            If a XFormText is visited the model matrix gets updated in the <see cref="T:Fusee.Engine.Core.RendererState"/> and set in the <see cref="T:Fusee.Engine.Core.RenderContext"/>.
            </summary>
            <param name="xfc">The XFormText.</param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.RenderTransform(Fusee.Engine.Core.Scene.Transform)">
            <summary>
            If a Transform is visited the model matrix of the <see cref="T:Fusee.Engine.Core.RenderContext"/> and <see cref="T:Fusee.Engine.Core.RendererState"/> is updated.
            It additionally updates the view matrix of the RenderContext.
            </summary> 
            <param name="transform">The Transform.</param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.RenderPtOctant(Fusee.Engine.Core.Scene.Octant)">
            <summary>
            If a PtOctant is visited the level of this octant is set in the shader.
            </summary>
            <param name="ptOctant"></param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.RenderShaderEffect(Fusee.Engine.Core.Scene.ShaderEffect)">
            <summary>
            If a ShaderEffect is visited the ShaderEffect of the <see cref="T:Fusee.Engine.Core.RendererState"/> is updated and the effect is set in the <see cref="T:Fusee.Engine.Core.RenderContext"/>.
            </summary>
            <param name="shader">The ShaderEffect</param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.RenderMesh(Fusee.Engine.Core.Scene.Mesh)">
            <summary>
            If a Mesh is visited and it has a <see cref="T:Fusee.Engine.Core.Scene.Weight"/> the BoneIndices and  BoneWeights get set, 
            the shader parameters for all lights in the scene are updated and the geometry is passed to be pushed through the rendering pipeline.        
            </summary>
            <param name="mesh">The Mesh.</param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.AddWeightToMesh(Fusee.Engine.Core.Scene.Mesh,Fusee.Engine.Core.Scene.Weight)">
            <summary>
            Adds weight to a given mesh
            </summary>
            <param name="mesh"></param>
            <param name="wc"></param>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.InitState">
            <summary>
            Sets the initial values in the <see cref="T:Fusee.Engine.Core.RendererState"/>.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.PushState">
            <summary>
            Pushes into the RenderState.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SceneRendererForward.PopState">
            <summary>
            Pops from the RenderState and sets the Model and View matrices in the RenderContext.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.Animation">
            <summary>
            Contains animation data. Generally, a list of animation tracks
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Animation.AnimationTracks">
            <summary>
            The animation tracks making up this animation data. 
            Each animation track controls a single value.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.AnimationKeyBase">
            <summary>
            Base class to hold a single animation key. Derived types specify the type of the value
            controlled by the keys.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.AnimationKeyBase.Time">
            <summary>
            The position of the key on the time-line.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.AnimationKeyDouble">
            <inheritdoc />
            <summary>
            Animation key storing double values.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.AnimationKeyDouble.Value">
            <summary>
            The key value effective at the <see cref="F:Fusee.Engine.Core.Scene.AnimationKeyBase.Time"/>.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.AnimationKeyInt">
            <inheritdoc />
            <summary>
            Animation key storing integer values.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.AnimationKeyInt.Value">
            <summary>
            The key value effective at the <see cref="F:Fusee.Engine.Core.Scene.AnimationKeyBase.Time"/>.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.AnimationKeyFloat">
            <inheritdoc />
            <summary>
            Animation key storing float values.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.AnimationKeyFloat.Value">
            <summary>
            The key value effective at the <see cref="F:Fusee.Engine.Core.Scene.AnimationKeyBase.Time"/>.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.AnimationKeyFloat2">
            <inheritdoc />
            <summary>
            Animation key storing float2 values.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.AnimationKeyFloat2.Value">
            <summary>
            The key value effective at the <see cref="F:Fusee.Engine.Core.Scene.AnimationKeyBase.Time"/>.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.AnimationKeyFloat3">
            <inheritdoc />
            <summary>
            Animation key storing float3 values.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.AnimationKeyFloat3.Value">
            <summary>
            The key value effective at the <see cref="F:Fusee.Engine.Core.Scene.AnimationKeyBase.Time"/>.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.AnimationKeyFloat4">
            <inheritdoc />
            <summary>
            Animation key storing float4 values.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.AnimationKeyFloat4.Value">
            <summary>
            The key value effective at the <see cref="F:Fusee.Engine.Core.Scene.AnimationKeyBase.Time"/>.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.LerpType">
            <summary>
            Symbolic value describing the type of Lerp (linear interpolation) to perform.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.LerpType.Lerp">
            <summary>
            Standard interpolation. Multi-Value-Types are interpolated individually for each value (e.g., x, y, z).
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.LerpType.Slerp">
            <summary>
            Spherical interpolation. float3 are interpreted as Euler angles and interpolated in a shortest-path way using <see cref="T:Fusee.Math.Core.Quaternion"/>s.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.TypeId">
            <summary> 
            Symbolic value describing the data type of stored values. 
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.TypeId.Double">
            <summary>Contains double values. </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.TypeId.Int">
            <summary>Contains int values. </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.TypeId.Float">
            <summary>Contains float values. </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.TypeId.Float2">
            <summary>Contains float2 values. </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.TypeId.Float3">
            <summary>Contains float3 values. </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.TypeId.Float4">
            <summary>Contains float4 values. </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.TypeId.Bool">
            <summary>Contains boolean values. </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.AnimationTrack">
            <summary>
            Stores data about a single animation track (mainly a list of keyframes).
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.AnimationTrack.SceneComponent">
            <summary>
            The scene component to be controlled by this animation track.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.AnimationTrack.Property">
            <summary>
            The name to the property/field to control. May be a dot-separated path to a sub-item (e.g. "Transform.Position.x").
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.AnimationTrack.TypeId">
            <summary>
            The type of the key-values stored in this animation track.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.AnimationTrack.LerpType">
            <summary>
            The lerp type to use for interpolation. 
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.AnimationTrack.KeyFrames">
            <summary>
            The list of key frames ordered by time.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.Bone">
            <summary>
            Marker component (contains no data). If contained within a node, the node 
            serves as a bone in a bone animation.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.ProjectionMethod">
            <summary>
            Used to define the Projection method of a <see cref="T:Fusee.Engine.Core.Scene.Camera"/>. Defines how the projection matrix is calculated.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.ProjectionMethod.Perspective">
            <summary>
            Perspective projection method.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.ProjectionMethod.Orthographic">
            <summary>
            Orthographic projection method.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.CustomCameraUpdate">
            <summary>
            Delegate that allows a user to give a custom projection calculation to a <see cref="T:Fusee.Engine.Core.Scene.Camera"/>.
            </summary>
            <param name="viewport">The viewport that gets rendered with the resulting projection matrix. Given in pixel. This is used in lower levels to set <see cref="M:Fusee.Engine.Common.IRenderContextImp.Viewport(System.Int32,System.Int32,System.Int32,System.Int32)"/></param>
            <param name="projection">The given method needs to calculate the projection matrix.</param>    
        </member>
        <member name="T:Fusee.Engine.Core.Scene.Camera">
            <summary>
            Use this in a <see cref="T:Fusee.Engine.Core.Scene.SceneNode"/> to create a Camera Node.
            A the Projection and View matrices, generated from a CameraComponent will overwrite calls you made directly on the RenderContext.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Camera.ClearColor">
            <summary>
            If set to false, the color bit won't be cleared before this camera is rendered.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Camera.ClearDepth">
            <summary>
            If set to false, the depth bit won't be cleared before this camera is rendered.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Camera.FrustumCullingOn">
            <summary>
            Determines whether frustum culling is enabled for this camera or not.
            Note that only <see cref="T:Fusee.Engine.Core.Scene.Mesh"/>s with a initialized (non zero-sized) bounding box (<see cref="F:Fusee.Engine.Core.Scene.Mesh.BoundingBox"/>) can be culled.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Camera.Layer">
            <summary>
            If there is more than one CameraComponent in one scene, the rendered output of the camera with a higher layer will be drawn above the output of a camera with a lower layer.        
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Camera.BackgroundColor">
            <summary>
            The background color for this camera's viewport.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Camera.ProjectionMethod">
            <summary>
            You can choose from a set of projection methods. This will automatically calculate the correct projection matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Camera.Fov">
            <summary>
            The vertical (y) field of view in radians.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Camera.ClippingPlanes">
            <summary>
            Distance to the near and far clipping planes.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Camera.Viewport">
            <summary>
            The viewport in percent [0, 100].
            x: start
            y: end
            z: width
            w: height
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Camera.RenderTexture">
            <summary>
            The texture given here will be used as render target.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Camera.Active">
            <summary>
            A camera is active by default. Set this to false to deactivate it. 
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Camera.CustomCameraUpdate">
            <summary>
            Allows to overwrite the calculation of the projection matrix. E.g. if <see cref="F:Fusee.Engine.Core.Scene.Camera.ProjectionMethod"/> does not contain your desired projection calculation.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.Camera.#ctor(Fusee.Engine.Core.Scene.ProjectionMethod,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of type CameraComponent.
            </summary>
            <param name="projectionMethod">The projection method. See <see cref="F:Fusee.Engine.Core.Scene.Camera.ProjectionMethod"/>.</param>
            <param name="zNear">The near clipping plane. See <see cref="F:Fusee.Engine.Core.Scene.Camera.ClippingPlanes"/>.</param>
            <param name="zFar">The far clipping plane. See <see cref="F:Fusee.Engine.Core.Scene.Camera.ClippingPlanes"/>.</param>
            <param name="fovY">The vertical field of view in radians.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.Camera.GetProjectionMat(System.Int32,System.Int32,Fusee.Math.Core.float4@)">
            <summary>
            Calculates and returns the projection matrix.
            </summary>
            <param name="canvasWidthPx">The width of the render canvas.</param>
            <param name="canvasHeightPx">The height of the render canvas.</param>
            <param name="viewport">The viewport that gets rendered with the resulting projection matrix. Given in pixel. This is used in lower levels to set <see cref="M:Fusee.Engine.Common.IRenderContextImp.Viewport(System.Int32,System.Int32,System.Int32,System.Int32)"/></param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.CanvasTransform">
            <summary>
            Building block to set up User Interface hierarchies.
            Use this as your first element in the Interface hierarchy.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.CanvasTransform.CanvasRenderMode">
            <summary>
            The canvas render mode.  Is the UI on this canvas placed in the 3D world or overlaid onto the 2D screen. 
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.CanvasTransform.Size">
            <summary>
            Absolute size of the Canvas. First element in the interface hierarchy.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.CanvasTransform.ScreenSpaceSize">
            <summary>
            Absolute size of the Canvas. First element in the interface hierarchy.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.CanvasTransform.Scale">
            <summary>
            Scale factor for the user given offsets that define the sizes if the canvas' child elements. This becomes important when rendering in SCREEN mode.        
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.CanvasTransform.#ctor(Fusee.Engine.Core.Scene.CanvasRenderMode)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.Scene.CanvasTransform"/> class.
            </summary>
            <param name="canvasRenderMode">The canvas render mode. Is the UI on this canvas placed in the 3D world or overlaid onto the 2D screen.</param>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.CanvasRenderMode">
            <summary>
            The available render modes.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.CanvasRenderMode.World">
            <summary>
            The UI is embedded into the 3D world.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.CanvasRenderMode.Screen">
            <summary>
            The UI should be overlaid onto the 2D screen.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.ChildList">
            <summary>
            List of child nodes used in <see cref="T:Fusee.Engine.Core.Scene.SceneNode"/> instances. In addition to normal collection operations
            this type keeps track of each object's <see cref="F:Fusee.Engine.Core.Scene.SceneNode.Parent"/> property when added or removed to a
            node.
            </summary>
        </member>
        <member name="E:Fusee.Engine.Core.Scene.ChildList.OnAdd">
            <summary>
            Event handler for adding additional behavior to Add(). E.g. to add the parent for the element that was added to the child list.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.ChildList.InsertItem(System.Int32,Fusee.Engine.Core.Scene.SceneNode)">
            <summary>
            Inserts the item at the given index.
            </summary>
            <param name="index">The index.</param>
            <param name="sn">The scene node to insert.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.ChildList.SetItem(System.Int32,Fusee.Engine.Core.Scene.SceneNode)">
            <summary>
            Sets the item at the given index.
            </summary>
            <param name="index">The index.</param>
            <param name="sn">The scene node to add.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.ChildList.RemoveItem(System.Int32)">
            <summary>
            Removes the element at the specified index of the <see cref="T:System.Collections.ObjectModel.Collection`1"></see>.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.CodeComponent">
            <summary>
            Use this component to add Code to Objects in the scene graph. Will not serialize/deserialize
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.CodeComponent.IsMouseOver">
            <summary>
            Tells if the mouse is over the SceneNodeContainer this code component belongs to.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.CodeComponent.InteractionHandler">
            <summary>
                A delegation for the event listeners of a <see cref="T:Fusee.Engine.Core.Scene.CodeComponent" />.
            </summary>
            <param name="sender">The sender.</param>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.Light">
            <summary>
            Contains light information. If contained in a node, the node serves as a light object.
            If possible, avoid adding or removing these at runtime, instead create all you need and set active or inactive.
            The Position and Direction of a Light gets calculated internally, depending on the parent transform components, found in the scene graph.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Light.Active">
            <summary>
            Represents the light status.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Light.Color">
            <summary>
            Represents the color.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Light.MaxDistance">
            <summary>
            Represents the attenuation of the light.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Light.Strength">
            <summary>
            Represents the strength of the light (non-physically representation of the brightness).
            Should be a value between 0 and 1.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Light.Type">
            <summary>
            Represents the type of the light.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Light.OuterConeAngle">
            <summary>
            Represents the outer spot angle of the light.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Light.InnerConeAngle">
            <summary>
            Represents the spot inner angle of the light.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.Light.#ctor(System.Single)">
            <summary>
            Creates a new instance of type LightComponent.
            </summary>
            <param name="strength">Represents the strength of the light (non-physically representation of the brightness).</param>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Light.IsCastingShadows">
            <summary>
            Defines if a shadow map is created for this light.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Light.Bias">
            <summary>
            Bias for calculating shadows.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.Mesh">
            <summary>
            Provides the ability to create or interact directly with the point data.
            </summary>
        </member>
        <member name="E:Fusee.Engine.Core.Scene.Mesh.MeshChanged">
            <summary>
            MeshChanged event notifies observing MeshManager about property changes and the Mesh's disposal.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Mesh.SessionUniqueIdentifier">
            <summary>
            SessionUniqueIdentifier is used to verify a Mesh's uniqueness in the current session.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.Vertices">
            <summary>
            Gets and sets the vertices.
            </summary>
            <value>
            The vertices.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.VerticesSet">
            <summary>
            Gets a value indicating whether vertices are set.
            </summary>
            <value>
              <c>true</c> if vertices are set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.TangentsSet">
            <summary>
            Gets a value indicating whether tangents are set.
            </summary>
            <value>
              <c>true</c> if tangents are set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.BiTangentsSet">
            <summary>
            Gets a value indicating whether bi tangents are set.
            </summary>
            <value>
              <c>true</c> if bi tangents are set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.Colors">
            <summary>
            Gets and sets the color of a single vertex.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.ColorsSet">
            <summary>
            Gets a value indicating whether a color is set.
            </summary>
            <value>
              <c>true</c> if a color is set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.Normals">
            <summary>
            Gets and sets the normals.
            </summary>
            <value>
            The normals..
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.NormalsSet">
            <summary>
            Gets a value indicating whether normals are set.
            </summary>
            <value>
              <c>true</c> if normals are set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.UVs">
            <summary>
            Gets and sets the UV-coordinates.
            </summary>
            <value>
            The UV-coordinates.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.UVsSet">
            <summary>
            Gets a value indicating whether UVs are set.
            </summary>
            <value>
              <c>true</c> if UVs are set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.BoneWeights">
            <summary>
            Gets and sets the bone weights.
            </summary>
            <value>
            The bone weights.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.BoneWeightsSet">
            <summary>
            Gets a value indicating whether bone weights are set.
            </summary>
            <value>
              <c>true</c> if bone weights are set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.BoneIndices">
            <summary>
            Gets and sets the bone indices.
            </summary>
            <value>
            The bone indices.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.BoneIndicesSet">
            <summary>
            Gets a value indicating whether bone indices are set.
            </summary>
            <value>
              <c>true</c> if bone indices are set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.Triangles">
            <summary>
            Gets and sets the triangles.
            </summary>
            <value>
            The triangles.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.TrianglesSet">
            <summary>
            Gets a value indicating whether triangles are set.
            </summary>
            <value>
              <c>true</c> if triangles are set; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Mesh.BoundingBox">
            <summary>
            The bounding box of this geometry chunk.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.Tangents">
            <summary>
            The tangent of each triangle for bump mapping.
            w-component is handedness
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Mesh.BiTangents">
            <summary>
            The bi tangent of each triangle for bump mapping.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Mesh.Active">
            <summary>
            Used by various visitors such as rendering and picking. If set to true the mesh contributes to the traversal result. 
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Mesh.MeshType">
            <summary>
            The type of mesh which is represented by this instance (e. g. triangle mesh, point, line, etc...)
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.Mesh.Dispose(System.Boolean)">
            <summary>
            Fire dispose mesh event
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.Mesh.Dispose">
            <summary>
            Fire dispose mesh event
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.Octant">
            <summary>
            Component that allows a SceneNode to save information usually associated with a "PtOctant".
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Octant.PosInParent">
            <summary>
            Defines the position in the parent octant.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Octant.Level">
            <summary>
            The level of the octree the node lies in.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Octant.Guid">
            <summary>
            Unique identifier of the node.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Octant.Center">
            <summary>
            Center in world space.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Octant.Size">
            <summary>
            Length of on side of the cubical node.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Octant.IsLeaf">
            <summary>
            Defines if the node is a leaf node.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Octant.WasLoaded">
            <summary>
            Defines if the node was loaded into memory.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Octant.NumberOfPointsInNode">
            <summary>
            Number of point cloud points, this node holds.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.Octant.ProjectedScreenSize">
            <summary>
            The size, projected into screen space. Set with <seealso cref="M:Fusee.Engine.Core.Scene.Octant.ComputeScreenProjectedSize(Fusee.Math.Core.double3,System.Int32,System.Single)"/>.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Octant.PosInHierarchyTex">
            <summary>
            Position in hierarchy texture
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Octant.VisibleChildIndices">
            <summary>
            Visible child indices
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.Octant.ComputeScreenProjectedSize(Fusee.Math.Core.double3,System.Int32,System.Single)">
            <summary>
            Calculates the size, projected into screen space.
            </summary>
            <param name="camPos">Position of the camera.</param>
            <param name="screenHeight">Hight of the canvas.</param>
            <param name="fov">Field of view.</param>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.RectTransform">
            <summary>
            Building block to set up User Interface hierarchies.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.RectTransform.Anchors">
            <summary>
            Per-cent setting where to place the anchor point in respect to 
            the area defined by the parent node.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.RectTransform.Offsets">
            <summary>
            Absolute offset values added to the anchor points.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.SceneComponent">
            <summary>
            Base type for all Components used as building blocks within <see cref="N:Fusee.Engine"/>.
            </summary>
            <seealso cref="T:Fusee.Xene.IComponent" />
        </member>
        <member name="F:Fusee.Engine.Core.Scene.SceneComponent.Name">
            <summary>
            The components name. Might serve as identifier in find traversals.
            </summary>
            <seealso cref="M:Fusee.Engine.Core.Scene.SceneExtensions.FindComponents(Fusee.Engine.Core.Scene.SceneNode,System.Predicate{Fusee.Engine.Core.Scene.SceneComponent})"/>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.SceneHeader">
            <summary>
            The header of a scene.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.SceneHeader.Generator">
            <summary>
            The generator used to create this scene.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.SceneHeader.CreatedBy">
            <summary>
            The user who created this scene.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.SceneHeader.CreationDate">
            <summary>
            The creation date of this scene.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.SceneContainer">
            <summary>
            The root object of a scene file.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.SceneContainer.Header">
            <summary>
            The header containing meta information about the scene.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.SceneContainer.Children">
            <summary>
            The list of child nodes. Each can contain children itself.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.SceneExtensions">
            <summary>
            Static extension methods on <see cref="T:Fusee.Engine.Core.Scene.SceneNode"/> and <see cref="T:Fusee.Engine.Core.Scene.SceneComponent"/> instances (or enumerations)
            for various purposes.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.FindComponents(Fusee.Engine.Core.Scene.SceneNode,System.Predicate{Fusee.Engine.Core.Scene.SceneComponent})">
            <summary>
            Finds all components matching a given search predicate within the given node.
            </summary>
            <remarks>
            Narrows the generic parameters of <see cref="M:Fusee.Xene.SceneFinderExtensions.FindComponents``2(``0,System.Predicate{``1})"/> 
            to the concrete Types <see cref="T:Fusee.Engine.Core.Scene.SceneNode"/> and <see cref="T:Fusee.Engine.Core.Scene.SceneComponent"/>.
            </remarks>
            <param name="root">The root node where to start the traversal.</param>
            <param name="match">The matching predicate. Enumeration will yield on every matching node.</param>
            <returns>An enumerable that can be used in foreach statements.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.FindComponents(System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Scene.SceneNode},System.Predicate{Fusee.Engine.Core.Scene.SceneComponent})">
            <summary>
            Finds all components matching a given search predicate within the given list of nodes.
            </summary>
            <param name="roots"></param>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.FindComponents``1(Fusee.Engine.Core.Scene.SceneNode,System.Predicate{``0})">
            <summary>
            Finds all components of a certain type matching a given search predicate within the given node.
            </summary>
            <remarks>
            Narrows the generic parameters of <see cref="M:Fusee.Xene.SceneFinderExtensions.FindComponents``2(``0,System.Predicate{``1})"/> 
            to the concrete Types <see cref="T:Fusee.Engine.Core.Scene.SceneNode"/> and <see cref="T:Fusee.Engine.Core.Scene.SceneComponent"/>.
            </remarks>
            <param name="root">The root node where to start the traversal.</param>
            <param name="match">The matching predicate. Enumeration will yield on every matching node.</param>
            <returns>An enumerable that can be used in foreach statements.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.FindComponents``1(System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Scene.SceneNode},System.Predicate{``0})">
            <summary>
            Finds all components of a certain type matching a given search predicate within the given list of nodes.
            </summary>
            <param name="roots"></param>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.FindNodesWhereComponent(Fusee.Engine.Core.Scene.SceneNode,System.Predicate{Fusee.Engine.Core.Scene.SceneComponent})">
            <summary>
            Finds all components matching a given search predicate within the given node.
            </summary>
            <param name="root"></param>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.FindNodesWhereComponent(System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Scene.SceneNode},System.Predicate{Fusee.Engine.Core.Scene.SceneComponent})">
            <summary>
            Finds all components matching a given search predicate within the given node.
            </summary>
            <param name="roots"></param>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.Matrix(Fusee.Engine.Core.Scene.Transform)">
            <summary>
            Calculates a transformation matrix from this transform component.
            </summary>
            <param name="transformThis">This transform component.</param>
            <returns>The transform component's translation, rotation and scale combined in a single matrix.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.GetGlobalTransformation(Fusee.Engine.Core.Scene.SceneNode)">
            <summary>
            Returns the global transformation matrix as the product of all transformations along the scene graph branch this SceneNode is a part of. 
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.GetGlobalRotation(Fusee.Engine.Core.Scene.SceneNode)">
            <summary>
            Returns the global rotation matrix as the product of all rotations along the scene graph branch this SceneNode is a part of. 
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.GetGlobalTranslation(Fusee.Engine.Core.Scene.SceneNode)">
            <summary>
            Returns the global translation as the product of all translations along the scene graph branch this SceneNode is a part of. 
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.GetGlobalScale(Fusee.Engine.Core.Scene.SceneNode)">
            <summary>
            Returns the global scale as the product of all scaling along the scene graph branch this SceneNode is a part of. 
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.GetLocalTransformation(Fusee.Engine.Core.Scene.Transform)">
            <summary>
            Get the local transformation matrix from this TransformationComponent. 
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.RemoveComponentsInChildren(Fusee.Engine.Core.Scene.SceneNode,System.Type)">
            <summary>
            Removes the components with the specified type and the sub-types in the children of this scene node container.
            </summary>
            <param name="snThisThis">This scene node container.</param>
            <param name="type">The type of the components to look for.</param>
            <returns>A List of components of the specified type, if contained within the given container.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.RemoveComponentsInChildren``1(Fusee.Engine.Core.Scene.SceneNode)">
            <summary>
            Removes components with the specified type in the children of this scene node container.
            </summary>
            <typeparam name="TComp">The type of the components to look for.</typeparam>
            <param name="snThisThis">This scene node container.</param>
            <returns>A List of components of the specified type, if contained within the given container.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.GetComponentsInChildren(Fusee.Engine.Core.Scene.SceneNode,System.Type)">
            <summary>
            Finds the components with the specified type and the sub-types in the children of this scene node container.
            </summary>
            <param name="snThisThis">This scene node container.</param>
            <param name="type">The type of the components to look for.</param>
            <returns>A List of components of the specified type, if contained within the given container.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.GetComponentsInChildren``1(Fusee.Engine.Core.Scene.SceneNode)">
            <summary>
            Finds the components with the specified type in the children of this scene node container.
            </summary>
            <typeparam name="TComp">The type of the components to look for.</typeparam>
            <param name="snThisThis">This scene node container.</param>
            <returns>A List of components of the specified type, if contained within the given container.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.GetComponent(Fusee.Engine.Core.Scene.SceneNode,System.Type,System.Int32)">
            <summary>
            Finds the component with the specified type in this scene node container.
            </summary>
            <param name="snThisThis">This scene node container.</param>
            <param name="type">The type of the component to look for.</param>
            <param name="inx">specifies the n'th component if more than component of the given type exists.</param>
            <returns>A component of the specified type, if contained within the given container, null otherwise.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.RemoveComponent(Fusee.Engine.Core.Scene.SceneNode,System.Type,System.Int32)">
            <summary>
            Removes the component with the specified type in this scene node container.
            </summary>
            <param name="snThisThis">This scene node container.</param>
            <param name="type">The type of the component to look for.</param>
            <param name="inx">specifies the n'th component if more than component of the given type exists.</param>
            <returns>A component of the specified type, if contained within the given container, null otherwise.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.GetComponents``1(Fusee.Engine.Core.Scene.SceneNode)">
            <summary>
            Finds the components with the specified type in this scene node container.
            </summary>
            <param name="snThisThis">This scene node container.</param>       
            <returns>A component of the specified type, if contained within the given container, null otherwise.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.GetComponents(Fusee.Engine.Core.Scene.SceneNode,System.Type)">
            <summary>
            Finds the components with the specified type in this scene node container.
            </summary>
            <param name="snThisThis">This scene node container.</param>
            <param name="type">The type of the component to look for.</param>        
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.GetComponent``1(Fusee.Engine.Core.Scene.SceneNode,System.Int32)">
            <summary>
            Finds the component with the specified type in this scene node container.
            </summary>
            <typeparam name="TComp">The type of the component to look for.</typeparam>
            <param name="snThisThis">This scene node container.</param>
            <param name="inx">specifies the n'th component if more than component of the given type exists.</param>
            <returns>A component of the specified type, if contained within this container, null otherwise.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.RemoveComponent``1(Fusee.Engine.Core.Scene.SceneNode,System.Int32)">
            <summary>
            Removes the component with the specified type in this scene node container.
            </summary>
            <typeparam name="TComp">The type of the component to look for.</typeparam>
            <param name="snThisThis">This scene node container.</param>
            <param name="inx">specifies the n'th component if more than component of the given type exists.</param>
            <returns>A component of the specified type, if contained within this container, null otherwise.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.GetMesh(Fusee.Engine.Core.Scene.SceneNode,System.Int32)">
            <summary>
            Shortcut for <code>GetComponent&lt;Mesh&gt;(snThisThis, inx);</code>. See <see cref="M:Fusee.Engine.Core.Scene.SceneExtensions.GetComponent``1(Fusee.Engine.Core.Scene.SceneNode,System.Int32)"/>.
            </summary>
            <param name="snThisThis">This scene node container.</param>
            <param name="inx">specifies the n'th component if more than component of the given type exists.</param>
            <returns>A mesh if contained within this container.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.GetLight(Fusee.Engine.Core.Scene.SceneNode,System.Int32)">
            <summary>
            Shortcut for <code>GetComponent&lt;Light&gt;(snThisThis, inx);</code>. See <see cref="M:Fusee.Engine.Core.Scene.SceneExtensions.GetComponent``1(Fusee.Engine.Core.Scene.SceneNode,System.Int32)"/>.
            </summary>
            <param name="snThisThis">This scene node container.</param>
            <param name="inx">specifies the n'th component if more than component of the given type exists.</param>
            <returns>A light if contained within this container.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.GetWeights(Fusee.Engine.Core.Scene.SceneNode,System.Int32)">
            <summary>
            Shortcut for <code>GetComponent&lt;Weight&gt;(snThisThis, inx);</code>. See <see cref="M:Fusee.Engine.Core.Scene.SceneExtensions.GetComponent``1(Fusee.Engine.Core.Scene.SceneNode,System.Int32)"/>.
            </summary>
            <param name="snThisThis">This scene node container.</param>
            <param name="inx">specifies the n'th component if more than component of the given type exists.</param>
            <returns>A weight component if contained within this container.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.GetTransform(Fusee.Engine.Core.Scene.SceneNode,System.Int32)">
            <summary>
            Shortcut for <code>GetComponent&lt;Transform&gt;(snThisThis, inx);</code>. See <see cref="M:Fusee.Engine.Core.Scene.SceneExtensions.GetComponent``1(Fusee.Engine.Core.Scene.SceneNode,System.Int32)"/>.
            </summary>
            <param name="snThisThis">This scene node container.</param>
            <param name="inx">specifies the n'th component if more than component of the given type exists.</param>
            <returns>A transform if contained within this container.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.AddComponent(Fusee.Engine.Core.Scene.SceneNode,Fusee.Engine.Core.Scene.SceneComponent)">
            <summary>
            Adds the given component into this container's list of components.
            </summary>
            <param name="snThisThis">This node.</param>
            <param name="scc">The component to add.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.ToSceneNode(Fusee.Engine.Core.Scene.SceneContainer)">
            <summary>
            Converts the Scene to a SceneNode with a separate Transform
            </summary>
            <param name="sc">this node.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.ToScene(Fusee.Engine.Core.Scene.SceneNode)">
            <summary>
            Converts the SceneNode to a Scene
            </summary>
            <param name="snThis">this node.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.Translate(Fusee.Engine.Core.Scene.Transform,Fusee.Math.Core.float3)">
            <summary>
            Translate this node.
            </summary>
            <param name="tc"></param>
            <param name="xyz">Translation amount as float3.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.Translate(Fusee.Engine.Core.Scene.Transform,Fusee.Math.Core.float4x4)">
            <summary>
            Translates a transform component with a specified float4x4 translation matrix
            </summary>
            <param name="tc"></param>
            <param name="translationMtx">Translation amount as represented in float4x4.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.Rotate(Fusee.Engine.Core.Scene.Transform,Fusee.Math.Core.float3,Fusee.Engine.Core.Scene.SceneExtensions.Space)">
            <summary>
            Rotates this node.
            </summary>
            <param name="tc"></param>
            <param name="xyz">Rotation amount as float3.</param>
            <param name="space">Rotation in reference to model or world space.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.Rotate(Fusee.Engine.Core.Scene.Transform,Fusee.Math.Core.Quaternion,Fusee.Engine.Core.Scene.SceneExtensions.Space)">
            <summary>
            Rotates this node.
            </summary>
            <param name="tc"></param>
            <param name="quaternion">Rotation amount in Quaternion.</param>
            <param name="space">Rotation in reference to model or world space.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.RotateAround(Fusee.Engine.Core.Scene.Transform,Fusee.Math.Core.float3,Fusee.Math.Core.float3)">
            <summary>
            Roates around a given center and angle
            </summary>
            <param name="tc"></param>
            <param name="center"></param>
            <param name="angles"></param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.Rotate(Fusee.Engine.Core.Scene.Transform,Fusee.Math.Core.float4x4,Fusee.Engine.Core.Scene.SceneExtensions.Space)">
            <summary>
            Rotates this node.
            </summary>
            <param name="tc"></param>
            <param name="rotationMtx">Rotation amount as represented in float4x4.</param>
            <param name="space">Rotation in reference to model or world space.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneExtensions.FpsView(Fusee.Engine.Core.Scene.Transform,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Use this if the TransformComponent is part of a camera and you want to achieve a first person behavior.
            </summary>
            <param name="tc">This TransformComponent</param>
            <param name="angleHorz">The horizontal rotation angle in rad. Should probably come from Mouse input.</param>
            <param name="angleVert">The vertical rotation angle in rad. Should probably come from Mouse input.</param>
            <param name="inputWSAxis">The value we want to translate the camera when pressing the W or S key.</param>
            <param name="inputADAxis">The value we want to translate the camera when pressing the A or D key.</param>
            <param name="speed">Changes the speed of the camera movement.</param>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.SceneExtensions.Space">
            <summary>
            Reference space for rotation.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.SceneExtensions.Space.World">
            <summary>
            World space
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.SceneExtensions.Space.Model">
            <summary>
            Model space
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.AddChildEventArgs">
            <summary>
            Event Arguments for adding a new child to a SceneNodeContainer and set its parent.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.AddChildEventArgs.Snc">
            <summary>
            Returns the scene node container.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.AddChildEventArgs.#ctor(Fusee.Engine.Core.Scene.SceneNode)">
            <summary>
            Adds event arguments to a scene node container.
            </summary>
            <param name="snc">The scene node container <see cref="T:Fusee.Engine.Core.Scene.SceneNode"></see>/></param>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.SceneNode">
            <summary>
            The building block to create hierarchies.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.SceneNode.Name">
            <summary>
            The name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.SceneNode.Components">
            <summary>
            The components this node is made of.
            </summary>           
        </member>
        <member name="F:Fusee.Engine.Core.Scene.SceneNode.Parent">
            <summary>
            This SceneNodeContainer's snc. 
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.SceneNode.#ctor">
            <summary>
            Creates a new instance of this SceneNode class. 
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.SceneNode.Children">
            <summary>
            Possible children. 
            </summary>         
        </member>
        <member name="P:Fusee.Engine.Core.Scene.SceneNode.EnumChildren">
            <summary>
            Returns all children of this SceneNode
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.SceneNode.EnumComponents">
            <summary>
            Returns all components of this SceneNode
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.IEffectPassDeclarationBase">
            <summary>
            An effect pass declaration contains the relevant shader source code as well as a <see cref="T:Fusee.Engine.Core.RenderStateSet"/>
            declaration for the rendering pass declared by this instance.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.IEffectPassDeclarationBase.StateSet">
            <summary>
            The  <see cref="T:Fusee.Engine.Core.RenderStateSet"/> of the current effect pass.  
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.IEffectPassDeclarationBase.VS">
            <summary>
            Vertex shader as string
            </summary>
            
        </member>
        <member name="P:Fusee.Engine.Core.Scene.IEffectPassDeclarationBase.GS">
            <summary>
            Geometry-shader as string
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.EffectPassDeclaration">
            <summary>
            An effect pass declaration contains the vertex, pixel and geometry shader source code as well as a <see cref="T:Fusee.Engine.Core.RenderStateSet"/>
            declaration for the rendering pass declared by this instance.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.EffectPassDeclaration.StateSet">
            <summary>
            The  <see cref="T:Fusee.Engine.Core.RenderStateSet"/> of the current effect pass.  
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.EffectPassDeclaration.VS">
            <summary>
            Vertex shader as string
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.EffectPassDeclaration.GS">
            <summary>
            Geometry-shader as string
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.EffectPassDeclaration.PS">
            <summary>
            Pixel- or fragment shader as string
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.EffectPassDeclarationProto">
            <summary>
            A "proto" effect pass declaration contains the vertex and geometry shader source code as well as a partial  Fragment Shader, that is completed in a pre-pass, depending whether we render forward or deferred.
            It also contains a <see cref="T:Fusee.Engine.Core.RenderStateSet"/> declaration for the rendering pass declared by this instance.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.EffectPassDeclarationProto.StateSet">
            <summary>
            The  <see cref="T:Fusee.Engine.Core.RenderStateSet"/> of the current effect pass.  
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.EffectPassDeclarationProto.VS">
            <summary>
            Vertex shader as string
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.EffectPassDeclarationProto.GS">
            <summary>
            Geometry-shader as string
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.EffectPassDeclarationProto.ProtoPS">
            <summary>
            Partial Fragment Shader, that is completed in a pre-pass, depending whether we render forward or deferred.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.EffectParameterDeclaration">
            <summary>
            A data type for the list of (uniform) parameters possibly occurring in one of the shaders in the various passes.
            Each of this array entry consists of the parameter's name and its initial value. The concrete type of the object also indicates the
            parameter's type.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.EffectParameterDeclaration.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.EffectParameterDeclaration.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.ShaderEffect">
            <summary>
            A ShaderEffect contains a list of render passes with each pass item being a combination of a set of render states, and Shader Programs (the code running on the GPU).
            In addition a ShaderEffect contains the actual values for all the shaders' (uniform) variables.
            </summary>
            TODO (mr): Move to Fusee.Engine.Common
        </member>
        <member name="P:Fusee.Engine.Core.Scene.ShaderEffect.ParamDecl">
            <summary>
            The ShaderEffect'S uniform parameters and their values.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.ShaderEffect.States">
            <summary>
            List of <see cref="T:Fusee.Engine.Core.RenderStateSet"/>
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.ShaderEffect.VertexShaderSrc">
            <summary>
            Vertex shaders of all passes
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.ShaderEffect.PixelShaderSrc">
            <summary>
            Pixel- or fragment shader of all passes
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.ShaderEffect.GeometryShaderSrc">
            <summary>
            Geometry of all passes
            </summary>
        </member>
        <member name="E:Fusee.Engine.Core.Scene.ShaderEffect.ShaderEffectChanged">
            <summary>
            ShaderEffect event notifies observing ShaderEffectManager about property changes and the ShaderEffects's disposal.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.ShaderEffect.SessionUniqueIdentifier">
            <summary>
            SessionUniqueIdentifier is used to verify a Mesh's uniqueness in the current session.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.ShaderEffect.#ctor">
            <summary>
            The default (nullary) constructor to create a shader effect.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.ShaderEffect.#ctor(Fusee.Engine.Core.Scene.EffectPassDeclaration[],System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Scene.EffectParameterDeclaration})">
            <summary>
            The constructor to create a shader effect.
            </summary>
            <param name="effectPasses">The ordered array of <see cref="T:Fusee.Engine.Core.Scene.EffectPassDeclaration"/> items. The first item
            in the array is the first pass applied to rendered geometry, and so on.</param>
            <param name="effectParameters">A list of (uniform) parameters possibly occurring in one of the shaders in the various passes.
            Each array entry consists of the parameter's name and its initial value. The concrete type of the object also indicates the
            parameter's type.
            </param>
            <remarks>Make sure to list any parameter in any of the different passes' shaders you want to change later on in the effectParameters
            list. Shaders must not contain parameters with names listed in the effectParameters but declared with different types than those of 
            the respective default values given here.</remarks>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.ShaderEffect.SetEffectParam(System.String,System.Object)">
            <summary>
            Set effect parameter
            </summary>
            <param name="name">Name of the uniform variable</param>
            <param name="value">Value of the uniform variable</param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.ShaderEffect.GetEffectParam(System.String)">
            <summary>
            Returns the value of a given shader effect variable
            <remarks>THIS IS NOT THE ACTUAL UNIFORM VALUE</remarks>
            </summary>
            <param name="name">Name of the uniform variable</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.ShaderEffect.GetEffectParam(System.String,System.Object@)">
            <summary>
            Returns the value of a given shader effect variable
            <remarks>THIS IS NOT THE ACTUAL UNIFORM VALUE</remarks>
            </summary>
            <param name="name">Name of the uniform variable</param>
            /// <param name="obj">The value. Return null if no parameter was found.</param>
            <returns></returns>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.ShaderEffect.Count">
            <summary>
            Size of <see cref="P:Fusee.Engine.Core.Scene.ShaderEffect.ParamDecl"/>
            Needed for <see cref="T:System.Dynamic.DynamicObject"/>
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.ShaderEffect.Dispose(System.Boolean)">
            <summary>
            Invoke deletion of shaders on GPU
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.ShaderEffect.Dispose">
            <summary>
            Invoke deletion of shaders on GPU
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.ShaderEffectProtoPixel">
            <summary>
            A ShaderEffect contains a list of render passes with each pass item being a combination of a set of render states, and Shader Programs (the code running on the GPU).
            In addition a ShaderEffect contains the actual values for all the shaders' (uniform) variables.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.ShaderEffectProtoPixel.EffectProps">
            <summary>
            The effect props are the basis on which we can decide what kind of shards this effect supports.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.ShaderEffectProtoPixel.#ctor(Fusee.Engine.Core.Scene.EffectPassDeclarationProto[],System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Scene.EffectParameterDeclaration})">
            <summary>
            Creates a new instance of type ShaderEffectProtoPixel.
            </summary>
            <param name="effectPasses"></param>
            <param name="effectParameters"></param>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.ShaderEffectProtoPixel.CreateFragmentShader(System.Boolean)">
             <summary>
            Called by the SceneVisitor in the pre-pass to create the correct fragment shader, whether we render forward or deferred.
             </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.Transform">
            <summary>
            Transformation (position, orientation and size) of the node.
            </summary>
            <seealso cref="T:Fusee.Engine.Core.Scene.SceneComponent" />
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Transform.Translation">
            <summary>
            The translation (position) of the node.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Transform.Rotation">
            <summary>
            The rotation (orientation) of the node.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Transform.Scale">
            <summary>
            The scale (size) of the node.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.Weight">
            <summary>
            Defines a weight map. Basically a table with a row for each vertex and a column for each bone
            controlling the geometry. 
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Weight.WeightMap">
            <summary>
            The weight map. Contains as many entries as the object containing this node's geometry has vertices.
            </summary>       
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Weight.Joints">
            <summary>
            The joint objects controlling the geometry.
            </summary>       
        </member>
        <member name="F:Fusee.Engine.Core.Scene.Weight.BindingMatrices">
            <summary>
            The binding matrices defining the object's untransformed state.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.VertexWeightList">
            <summary>
            A single row of the weight table. Stored in a way respecting sparse data (only few bones control a vertex).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Scene.VertexWeightList.VertexWeights">
            <summary>
            List of bones controlling the vertex.
            </summary>        
        </member>
        <member name="T:Fusee.Engine.Core.Scene.VertexWeight">
            <summary>
            A single entry of a weight table row.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.VertexWeight.JointIndex">
            <summary>
            The joint index controlling the vertex.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.VertexWeight.Weight">
            <summary>
            The weight (the influence) of the bone on the vertex's transformation.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.VertexWeight.Equals(System.Object)">
            <summary>
            Check if two vertex weights are the same
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.Scene.VertexWeight.GetHashCode">
            <summary>
            Returns the hash code of one vertex weight
            </summary>        
        </member>
        <member name="M:Fusee.Engine.Core.Scene.VertexWeight.op_Equality(Fusee.Engine.Core.Scene.VertexWeight,Fusee.Engine.Core.Scene.VertexWeight)">
            <summary>
            Check if two vertex weights are the same
            </summary>       
        </member>
        <member name="M:Fusee.Engine.Core.Scene.VertexWeight.op_Inequality(Fusee.Engine.Core.Scene.VertexWeight,Fusee.Engine.Core.Scene.VertexWeight)">
            <summary>
            Check if two vertex weights aren't the same
            </summary>       
        </member>
        <member name="T:Fusee.Engine.Core.Scene.XForm">
            <summary>
            Placeholder for later implemented UI Elements such as buttons, images, slider etc.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.HorizontalTextAlignment">
            <summary>
            Defines the alignment in x direction.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.HorizontalTextAlignment.Left">
            <summary>
            The text will be aligned to the left border of the enclosing <see cref="T:Fusee.Math.Core.MinMaxRect"/>.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.HorizontalTextAlignment.Center">
            <summary>
            The text will be aligned to the middle of the horizontal axis of the enclosing <see cref="T:Fusee.Math.Core.MinMaxRect"/>.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.HorizontalTextAlignment.Right">
            <summary>
            The text will be aligned to the right border of the enclosing <see cref="T:Fusee.Math.Core.MinMaxRect"/>.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.VerticalTextAlignment">
            <summary>
            Defines the alignment in y direction.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.VerticalTextAlignment.Top">
            <summary>
            The text will be aligned to the top border of the enclosing <see cref="T:Fusee.Math.Core.MinMaxRect"/>.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.VerticalTextAlignment.Center">
            <summary>
            The text will be aligned to the middle of vertical axis of the enclosing <see cref="T:Fusee.Math.Core.MinMaxRect"/>.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.VerticalTextAlignment.Bottom">
            <summary>
            The text will be aligned to the bottom border of the enclosing <see cref="T:Fusee.Math.Core.MinMaxRect"/>.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Scene.XFormText">
            <summary>
            Enables the scene renderer to treat GUI text differently.
            </summary>  
        </member>
        <member name="F:Fusee.Engine.Core.Scene.XFormText.Width">
            <summary>
            The width of the text.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.XFormText.Height">
            <summary>
            The height of the text.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.XFormText.HorizontalAlignment">
            <summary>
            The <see cref="T:Fusee.Engine.Core.Scene.HorizontalTextAlignment"/>.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.Scene.XFormText.VerticalAlignment">
            <summary>
            The <see cref="T:Fusee.Engine.Core.Scene.VerticalTextAlignment"/>.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderCodeBuilder">
            <summary>
            Provides a collection of ShaderEffects.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ShaderCodeBuilder.Default">
            <summary>
            The default ShaderEffect, that is used if a <see cref="T:Fusee.Engine.Core.Scene.SceneContainer"/> has a mesh but no <see cref="T:Fusee.Engine.Core.Scene.ShaderEffect"/>.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.FXAARenderTargetEffect(Fusee.Engine.Core.WritableTexture,Fusee.Math.Core.float2)">
            <summary>
            If rendered with FXAA we'll need an additional (final) pass, that takes the lighted scene, rendered to a texture, as input.
            </summary>
            <param name="srcTex">RenderTarget, that contains a single texture in the Albedo/Specular channel, that contains the lighted scene.</param>
            <param name="screenParams">The width and height of the screen.</param>       
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.SSAORenderTargetTextureEffect(Fusee.Engine.Core.RenderTarget,System.Int32,Fusee.Math.Core.float2)">
            <summary>
            Shader effect for the SSAO pass.
            </summary>        
            <param name="geomPassRenderTarget">RenderTarget filled in the previous geometry pass.</param>
            <param name="kernelLength">SSAO kernel size.</param>
            <param name="screenParams">Width and Height of the screen.</param>        
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.SSAORenderTargetBlurEffect(Fusee.Engine.Core.WritableTexture)">
            <summary>
            Creates a blurred SSAO texture, to hide rectangular artifacts originating from the noise texture;
            </summary>
            <param name="ssaoRenderTex">The non blurred SSAO texture.</param>        
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.DeferredLightingPassEffect(Fusee.Engine.Core.RenderTarget,Fusee.Engine.Core.Scene.Light,Fusee.Math.Core.float4,Fusee.Engine.Common.IWritableTexture)">
            <summary>
            ShaderEffect that performs the lighting calculation according to the textures from the Geometry Pass.
            </summary> 
            <param name="srcRenderTarget">The source render target.</param>
            <param name="lc">The light component.</param>
            <param name="shadowMap">The shadow map.</param>
            <param name="backgroundColor">Sets the background color. Could be replaced with a texture or other sky color calculations in the future.</param>            
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.DeferredLightingPassEffect(Fusee.Engine.Core.RenderTarget,Fusee.Engine.Core.Scene.Light,Fusee.Engine.Core.WritableTexture[],Fusee.Math.Core.float2[],System.Int32,Fusee.Math.Core.float4)">
            <summary>
            [Parallel light only] ShaderEffect that performs the lighting calculation according to the textures from the Geometry Pass. Shadow is calculated with cascaded shadow maps.
            </summary> 
            <param name="srcRenderTarget">The source render target.</param>
            <param name="lc">The light component.</param>
            <param name="shadowMaps">The cascaded shadow maps.</param>
            <param name="clipPlanes">The clip planes of the frustums. Each frustum is associated with one shadow map.</param>
            <param name="numberOfCascades">The number of sub-frustums, used for cascaded shadow mapping.</param>
            <param name="backgroundColor">Sets the background color. Could be replaced with a texture or other sky color calculations in the future.</param>            
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.ShadowCubeMapEffect(Fusee.Math.Core.float4x4[])">
            <summary>
            ShaderEffect that renders the depth map from a lights point of view - this depth map is used as a shadow map.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.ShadowMapEffect">
            <summary>
            ShaderEffect that renders the depth map from a lights point of view - this depth map is used as a shadow map.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.MakeShaderEffect(Fusee.Math.Core.float4,System.String,System.Single)">
            <summary>
                Builds a very simple shader effect with just albedo
            </summary>
            <param name="albedoColor">The albedo color the resulting effect.</param>
            <param name="albedoTexture">The (optional) albedo texture to use.</param>   
            <param name="albedoTextureMix">The mix between albedo color and texture.</param>   
            <returns>A ShaderEffect ready to use as a component in scene graphs.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.MakeShaderEffectProto(Fusee.Math.Core.float4,System.String,System.Single)">
            <summary>
                Builds a very simple shader effect with just albedo
            </summary>
            <param name="albedoColor">The albedo color for the resulting effect.</param>
            <param name="albedoTexture">The (optional) albedo texture to use.</param>   
            <param name="albedoTextureMix">The mix between albedo color and texture.</param>   
            <returns>A ShaderEffect ready to use as a component in scene graphs.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.MakeShaderEffect(Fusee.Math.Core.float4,Fusee.Math.Core.float4,System.Single,System.Single)">
            <summary>
                Builds a simple shader effect with albedo and specular color.
            </summary>
            <param name="albedoColor">The albedo color the resulting effect.</param>
            <param name="specularColor">The specular color for the resulting effect.</param>
            <param name="shininess">The resulting effect's shininess.</param>
            <param name="specularIntensity">The resulting effects specular intensity.</param>
            <returns>A ShaderEffect ready to use as a component in scene graphs.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.MakeShaderEffectProto(Fusee.Math.Core.float4,Fusee.Math.Core.float4,System.Single,System.Single)">
            <summary>
                Builds a simple shader effect with albedo and specular color.
            </summary>
            <param name="albedoColor">The albedo color the resulting effect.</param>
            <param name="specularColor">The specular color for the resulting effect.</param>
            <param name="shininess">The resulting effect's shininess.</param>
            <param name="specularIntensity">The resulting effects specular intensity.</param>
            <returns>A ShaderEffect ready to use as a component in scene graphs.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.MakeShaderEffect(Fusee.Math.Core.float4,Fusee.Math.Core.float4,System.Single,System.String,System.Single,System.Single)">
            <summary>
                Builds a simple shader effect with albedo and specular color.
            </summary>
            <param name="albedoColor">The albedo color the resulting effect.</param>
            <param name="specularColor">The specular color for the resulting effect.</param>
            <param name="shininess">The resulting effect's shininess.</param>
            <param name="albedoTexture">Name of the albedo texture you want to use.</param>
            <param name="albedoTextureMix">Determines how much the albedo color and the color from the texture are mixed.</param>
            <param name="specularIntensity">The resulting effects specular intensity.</param>
            <returns>A ShaderEffect ready to use as a component in scene graphs.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.MakeShaderEffectProto(Fusee.Math.Core.float4,Fusee.Math.Core.float4,System.Single,System.String,System.Single,System.Single)">
            <summary>
                Builds a simple shader effect with albedo and specular color.
            </summary>
            <param name="albedoColor">The albedo color the resulting effect.</param>
            <param name="specularColor">The specular color for the resulting effect.</param>
            <param name="shininess">The resulting effect's shininess.</param>
            <param name="albedoTexture">Name of the albedo texture you want to use.</param>
            <param name="albedoTextureMix">Determines how much the albedo color and the color from the texture are mixed.</param>
            <param name="specularIntensity">The resulting effects specular intensity.</param>
            <returns>A ShaderEffect ready to use as a component in scene graphs.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.MakeShaderEffectProto(Fusee.Engine.Core.ShaderShards.ShaderEffectProps)">
            <summary>
            Build a complex shader by specifying the <see cref="T:Fusee.Engine.Core.ShaderShards.ShaderEffectProps"/> explicitly.
            </summary>
            <param name="fxProps">The ShaderEffectProps to use (including values)</param>
            <returns>a new ShaderEffectProtoPixel</returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.MakeShaderEffect(Fusee.Engine.Core.ShaderShards.ShaderEffectProps)">
            <summary>
            Build a complex shader by specifying the <see cref="T:Fusee.Engine.Core.ShaderShards.ShaderEffectProps"/> explicitly.
            </summary>
            <param name="fxProps">The ShaderEffectProps to use (including values)</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.MakeShaderEffectFromShaderEffectProps(Fusee.Engine.Core.ShaderShards.ShaderEffectProps,Fusee.Engine.Core.Scene.Weight)">
            <summary> 
            Creates a ShaderEffectComponent from a MaterialComponent 
            </summary> 
            <param name="fxProps">The shader effect properties</param> 
            <param name="wc">Only pass over a WeightComponent if you use bone animations in the current node (usage: pass currentNode.GetWeights())</param>        
            <returns></returns> 
            <exception cref="T:System.Exception"></exception> 
        </member>
        <member name="M:Fusee.Engine.Core.ShaderCodeBuilder.MakeShaderEffectFromShaderEffectPropsProto(Fusee.Engine.Core.ShaderShards.ShaderEffectProps,Fusee.Engine.Core.Scene.Weight)">
            <summary> 
            Creates a ShaderEffectComponent from a MaterialComponent 
            </summary> 
            <param name="fxProps">The shader effect properties</param> 
            <param name="wc">Only pass over a WeightComponent if you use bone animations in the current node (usage: pass currentNode.GetWeights())</param>        
            <returns></returns> 
            <exception cref="T:System.Exception"></exception> 
        </member>
        <member name="M:Fusee.Engine.Core.ShaderEffectManager.#ctor(Fusee.Engine.Core.RenderContext)">
            <summary>
            Creates a new Instance of ShaderEffectManager. Th instance is handling the memory allocation and deallocation on the GPU by observing ShaderEffect.cs objects.
            </summary>
            <param name="renderContextImp">The RenderContextImp is used for GPU memory allocation and deallocation. See RegisterShaderEffect.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderEffectManager.Cleanup">
            <summary>
            Call this method on the main thread after RenderContext.Render in order to cleanup all not used Buffers from GPU memory.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderProgram">
            <summary>
            A ShaderProgram is a set of shaders (currently vertex, pixel and optionally geometry shaders), all compiled an 
            uploaded to the gpu ready to be used. 
            </summary>
            <remarks>See <see cref="M:Fusee.Engine.Core.RenderContext.SetShaderProgram(Fusee.Engine.Core.ShaderProgram)"/> how to use instances as the current shaders.</remarks>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderProgram.GpuHandle">
            <summary>
            The handle that identifies the shader program on the gpu.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderProgram.ParamsByName">
            <summary>
            All parameters of this ShaderProgramm as a Dictionary of type "string, ShaderParamInfo".
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderProgram.#ctor(System.Collections.Generic.Dictionary{System.String,Fusee.Engine.Common.ShaderParamInfo},Fusee.Engine.Common.IShaderHandle)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.ShaderProgram"/> class.
            </summary>
            <param name="paramsByName">Dictionary of the shader parameters.</param>
            <param name="gpuHandle">The <see cref="T:Fusee.Engine.Common.IShaderHandle"/>.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderProgram.GetShaderParam(System.String)">
            <summary>
            Retrieves an identifier for the shader parameter name.
            </summary>
            <param name="paramName">Name of the parameter.</param>
            <returns>A <see cref="T:Fusee.Engine.Common.IShaderParam"/> if paramName is declared and used as a uniform parameter within the shader program. Otherwise null</returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderProgram.GetShaderParamInfo(System.String)">
            <summary>
            Gets the shader parameter.
            </summary>
            <param name="paramName">Name of the parameter.</param>
            <returns>A <see cref="T:Fusee.Engine.Common.ShaderParamInfo"/> object if paramName is declared and used as a uniform parameter within the shader program. Otherwise the Handle of the returned struct is null</returns>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.AttributeLocations">
            <summary>
            Declares buffer locations.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.AttributeLocations.VertexAttribLocation">
            <summary>
            The vertex attribute location index.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.AttributeLocations.ColorAttribLocation">
            <summary>
            The color attribute location index.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.AttributeLocations.NormalAttribLocation">
            <summary>
            The normal attribute location index.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.AttributeLocations.UvAttribLocation">
            <summary>
            The uv attribute location index.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.AttributeLocations.TangentAttribLocation">
            <summary>
            The tangent attribute location index.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.AttributeLocations.BitangentAttribLocation">
            <summary>
            The bitangent attribute location index.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.AttributeLocations.BoneWeightAttribLocation">
            <summary>
            The bone weight attribute location index.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.AttributeLocations.BoneIndexAttribLocation">
            <summary>
            The bone index attribute location index.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.Fragment.FragMainShard">
            <summary>
            Collection of Shader Shards, describing the Main method of a fragment shader.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.FragMainShard.ForwardLighting(Fusee.Engine.Core.ShaderShards.ShaderEffectProps)">
            <summary>
            Lighting Main method for forward rendering.
            </summary>
            <param name="effectProps">The <see cref="T:Fusee.Engine.Core.ShaderShards.ShaderEffectProps"/> which function as a basis to build the correct lighting method.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.FragMainShard.RenderToGBuffer(Fusee.Engine.Core.ShaderShards.ShaderEffectProps)">
            <summary>
            The main method for rendering into a G-Buffer object.
            </summary>
            <param name="effectProps">The ShaderEffectProps.</param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.Fragment.FragPropertiesShard">
            <summary>
            Collection of Shader Shards, describing possible in, out and uniform properties of a fragment shader.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.Fragment.FragPropertiesShard.OutColorName">
            <summary>
            The standard name for the fragment shader color output.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.FragPropertiesShard.ColorOut">
            <summary>
            Creates a single color (vec4) out parameter.
            </summary>       
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.FragPropertiesShard.GBufferOut">
            <summary>
            Creates the out parameters for rendering into a G-Buffer object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.FragPropertiesShard.InParams(Fusee.Engine.Core.ShaderShards.ShaderEffectProps)">
            <summary>
            Returns the in parameters for a ShaderEffect, depending on the given ShaderEffectProps.
            </summary>
            <param name="effectProps">The ShaderEffectProps.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.FragPropertiesShard.FuseeMatrixUniforms">
            <summary>
            Returns the pre defined Fusee uniform parameters of a fragment shader, depending on the given ShaderEffectProps.
            </summary>       
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.FragPropertiesShard.MaterialPropsUniforms(Fusee.Engine.Core.ShaderShards.ShaderEffectProps)">
            <summary>
            Returns all uniforms, as they are given in the <see cref="T:Fusee.Engine.Core.ShaderShards.MaterialProps"/> object.
            </summary>
            <param name="effectProps">The ShaderEffectProps.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.FragPropertiesShard.DeferredTextureUniforms">
            <summary>
            Creates the uniform texture parameters for the lighting pass, as used in deferred rendering.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.FragPropertiesShard.DeferredLightAndShadowUniforms(Fusee.Engine.Core.Scene.Light,System.Boolean,System.Int32)">
            <summary>
            Creates the uniforms for the deferred lighting pass for one light.
            </summary>
            <param name="lc">The light component, needed to decide if we have a Shadow Cube Map or a standard shadow map.</param>
            <param name="isCascaded">If cascaded shadow mapping is used, this should be set to true.</param>
            <param name="numberOfCascades">If cascaded shadow mapping is used this is the number of cascades.</param>        
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.Fragment.FragPropertiesShard.FixedNumberLightArray">
            <summary>
            Creates the "allLights" uniform array, as it is used in forward rendering.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.Fragment.LightingShard">
            <summary>
            Collection of Shader Shards, describing the struct for a Light and different methods for light and shadow calculation.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.Fragment.LightingShard.NumberOfLightsForward">
            The maximal number of lights we can render when using the forward pipeline.
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.Fragment.LightingShard.LightStructDeclaration">
            <summary>
            Struct, that describes a Light object in the shader code./>
            </summary>
            <returns></returns>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.Fragment.LightingShard.LightPararamStringsAllLights">
            <summary>
            Caches "allLight[i]." names (used as uniform parameters).
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.LightingShard.AssembleLightingMethods(Fusee.Engine.Core.ShaderShards.ShaderEffectProps)">
            <summary>
            Collects all lighting methods, dependent on what is defined in the given <see cref="T:Fusee.Engine.Core.ShaderShards.ShaderEffectProps"/> and the LightingCalculationMethod.
            </summary>
            <param name="effectProps">The ShaderEffectProps.</param>        
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.LightingShard.AmbientComponent">
            <summary>
            Method for calculation the ambient lighting component.
            </summary>       
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.LightingShard.DiffuseComponent">
            <summary>
            Method for calculation the diffuse lighting component.
            </summary>       
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.LightingShard.SpecularComponent">
            <summary>
            Method for calculation the specular lighting component.
            </summary>       
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.LightingShard.PbrSpecularComponent">
            <summary>
            Method for calculation the specular lighting component.
            Replaces the standard specular calculation with the Cook-Torrance-Shader
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.LightingShard.AttenuationPointComponent">
            <summary>
            Calculates the attenuation of a point light.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.LightingShard.AttenuationConeComponent">
            <summary>
            Calculates the cone component of the attenuation of a spot light.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.LightingShard.ApplyLightForward(Fusee.Engine.Core.ShaderShards.ShaderEffectProps)">
            <summary>
            Wraps all the lighting methods into a single one.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.LightingShard.ApplyLightDeferred(Fusee.Engine.Core.Scene.Light,System.Boolean,System.Int32,System.Boolean)">
            <summary>
            Wraps all the lighting methods into a single one. For deferred rendering, this equals the "main" method.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.LightingShard.ShadowCalculation">
            <summary>
            Creates the method for calculating whether a fragment is in shadow or not, by using a shadow map (sampler2D).
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Fragment.LightingShard.ShadowCalculationCubeMap">
            <summary>
            Creates the method for calculating whether a fragment is in shadow or not, by using a shadow map (sampler2DCube).
            The cube map is used when calculating the shadows for a point light.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.GLSL.CreateMethod(Fusee.Engine.Core.ShaderShards.GLSL.Type,System.String,System.String[],System.Collections.Generic.IList{System.String})">
            <summary>
            Creates a GLSL method
            </summary>
            <param name="returnType"></param>
            <param name="methodName"></param>
            <param name="methodParams"></param>
            <param name="method">method body goes here</param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.HeaderShard">
            <summary>
            Collection of Shader Shards, describing a shader's header information, such as the version precision and preprocessor instructions.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.HeaderShard.BoneDefineVar">
            <summary>
            Name of the number of bones preprocessor directive.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.HeaderShard.EsPrecisionHighpFloat">
            <summary>
            Sets the precision to highp float.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.HeaderShard.Version300Es">
            <summary>
            Sets the version to 300es.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.HeaderShard.DefineBones(Fusee.Engine.Core.ShaderShards.ShaderEffectProps,Fusee.Engine.Core.Scene.Weight)">
            <summary>
            Sets preprocessor that defines the bone count.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.Includes">
            <summary>
            Handles includes in parsed shader files.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Includes.ParseIncludes(System.String)">
            <summary>
            Parses a raw shader string and replaces the includes with the correct files.
            </summary>
            <param name="rawShaderString">The raw shader string that is to be parsed.</param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.ShaderEffectProps">
            <summary>
            This struct describes a collection of properties, which are the basis to build the needed shader.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.ShaderEffectProps.MeshProbs">
            <summary>
            Collection of bools, describing the mesh properties.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.ShaderEffectProps.MatProbs">
            <summary>
            Collection of bools, describing the material properties.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.ShaderEffectProps.MatType">
            <summary>
            The type of the material.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.ShaderEffectProps.MatValues">
            <summary>
            Collection of values of one material 
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.MaterialValues">
            <summary>
            The values one material could carry (e.g.: AlbedoColor or SpecularIntensity)
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.MeshProps">
            <summary>
            Collection of bools, describing the mesh properties.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.MeshProps.HasNormals">
            <summary>
            Does this mesh have normals?
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.MeshProps.HasUVs">
            <summary>
            Does this mesh have uv coordinates?
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.MeshProps.HasColors">
            <summary>
            Does this mesh have vertex colors?
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.MeshProps.HasWeightMap">
            <summary>
            Does this mesh have a weight map?
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.MeshProps.HasTangents">
            <summary>
            Does this mesh have tangents?
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.MeshProps.HasBiTangents">
            <summary>
            Does this mesh have bitangents?
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.MaterialProps">
            <summary>
            Collection of bools, describing the material properties.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.MaterialProps.HasAlbedo">
            <summary>
            Does this material have an albedo color?
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.MaterialProps.HasAlbedoTexture">
            <summary>
            Does this material have an albedo texture?
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.MaterialProps.HasSpecular">
            <summary>
            Does this material have a specular reflection?
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.MaterialProps.HasSpecularTexture">
            <summary>
            Does this material have a specular texture?
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.MaterialProps.HasEmissive">
            <summary>
            Does this material have a emissive component?
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.MaterialProps.HasEmissiveTexture">
            <summary>
            Does this material have a emissive texture?
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.MaterialProps.HasNormalMap">
            <summary>
            Does this material have a normal map?
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.MaterialType">
            <summary>
            The type of the material.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.MaterialType.Standard">
            <summary>
            The Standard material.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.MaterialType.MaterialPbr">
            <summary>
            A material for physically based lighting.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.ShaderShardUtil">
            <summary>
            Provides utility methods to write and use Shader Shards.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.ShaderShardUtil.MainMethod(System.Collections.Generic.IList{System.String})">
            <summary>
            Creates a main method with the given method body.
            </summary>
            <param name="methodBody">The content of the method.</param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations">
            <summary>
            Collection of uniform parameter names, as they should be used in the Shader Shards to make them compatible to each other.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.ArrayPostfix">
            <summary>
            The array postfix as we get it for uniforms of array types, if we call gl.GetShaderParamList().
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.Vertex">
            <summary>
            The vertex attribute name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.Color">
            <summary>
            The color attribute name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.Normal">
            <summary>
            The normal attribute name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.TextureCoordinates">
            <summary>
            The uv attribute name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.TangentAttribName">
            <summary>
            The tangent attribute name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.BitangentAttribName">
            <summary>
            The bitangent attribute name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.BoneWeight">
            <summary>
            The bone weight attribute name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.BoneIndex">
            <summary>
            The bone index attribute name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.Model">
            <summary>
            The model matrix. Transforms from model into world space.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.View">
            <summary>
            The view matrix. Transforms from world into camera space.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.ModelView">
            <summary>
            The model view matrix. Transforms from model into camera space.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.Projection">
            <summary>
            The model view matrix. Transforms from view into clip space.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.ModelViewProjection">
            <summary>
            The model view projection matrix. Transforms from model into clip space.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.IView">
            <summary>
            The inverse view matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.IModel">
            <summary>
            The inverse view matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.TModel">
            <summary>
            The inverse view matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.IModelView">
            <summary>
            The inverse model view matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.TView">
            <summary>
            The inverse transposed view matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.ITView">
            <summary>
            The inverse transposed view matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.IProjection">
            <summary>
            The inverse projection matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.IModelViewProjection">
            <summary>
            The inverse model view projection matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.TModelView">
            <summary>
            The transposed model view matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.TProjection">
            <summary>
            The transposed projection matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.TModelViewProjection">
            <summary>
            The transposed model view projection matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.ITModelView">
            <summary>
            The inversed transposed model view matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.ITProjection">
            <summary>
            The inversed transposed projection matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.ITModelViewProjection">
            <summary>
            The inversed transposed model view projection matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.ITModel">
            <summary>
            The inversed transposed model view projection matrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.Bones">
            <summary>
            The bones array.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.BonesArray">
            <summary>
            The bones array including the postfix.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.SSAOKernel">
            <summary>
            The var name for the uniform SSAOKernel[0] variable.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.NoiseTex">
            <summary>
            The var name for the uniform NoiseTex variable, needed to calculate SSAO.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.SsaoOn">
            <summary>
            The var name for the uniform SsaoOn variable.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.LightSpaceMatrix">
            <summary>
            The var name for the uniform LightSpaceMatrix.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.ShadowMap">
            <summary>
            The var name for the uniform ShadowMap.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.ShadowCubeMap">
            <summary>
            The var name for the uniform ShadowCubeMap.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.RenderPassNo">
            <summary>
            The var name for the uniform PassNo variable.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.BackgroundColor">
            <summary>
            The var name for the uniform BackgroundColor.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.ScreenParams">
            <summary>
            The var name for the uniform ScreenParams (width and height of the window).
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.AmbientStrengthName">
            <summary>
            The var name for the uniform DiffuseColor variable within the pixel shaders.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.AlbedoColor">
            <summary>
            The var name for the uniform DiffuseColor variable within the pixel shaders.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.SpecularColor">
            <summary>
            The var name for the uniform SpecularColor variable within the pixel shaders.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.EmissiveColor">
            <summary>
            The var name for the uniform EmissiveColor variable within the pixel shaders.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.AlbedoTexture">
            <summary>
            The var name for the uniform DiffuseTexture variable within the pixel shaders.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.SpecularTexture">
            <summary>
            The var name for the uniform SpecularTexture variable within the pixel shaders.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.EmissiveTexture">
            <summary>
            The var name for the uniform EmissiveTexture variable within the pixel shaders.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.NormalMap">
            <summary>
            The var name for the uniform NormalMap variable within the pixel shaders.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.AlbedoMix">
            <summary>
            The var name for the uniform DiffuseMix variable within the pixel shaders.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.SpecularMix">
            <summary>
            The var name for the uniform SpecularMix variable within the pixel shaders.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.EmissiveMix">
            <summary>
            The var name for the uniform EmissiveMix variable within the pixel shaders.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.SpecularShininess">
            <summary>
            The var name for the uniform SpecularShininess variable within the pixel shaders.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.SpecularIntensity">
            <summary>
            The var name for the uniform SpecularIntensity variable within the pixel shaders.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.RoughnessValue">
            <summary>
            [PBR (Cook-Torrance) only] Describes the roughness of the material.
            </summary>       
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.FresnelReflectance">
            <summary>
            [PBR (Cook-Torrance) only] This float describes the fresnel reflectance of the material.
            </summary>        
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.DiffuseFraction">
            <summary>
            [PBR (Cook-Torrance) only] This float describes the diffuse fraction of the material.
            </summary>       
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.NormalMapIntensity">
            <summary>
            The var name for the uniform BumpIntensity variable within the pixel shaders.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.UniformNameDeclarations.DeferredRenderTextures">
            <summary>
            List of all possible render texture names.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.VaryingNameDeclarations">
            <summary>
            Name declarations for varying variables (vert out, frag in). Ensures compatibility between shader shards.
            Use those in vert and frag files too, if you want to mix shards and complete files.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.VaryingNameDeclarations.TextureCoordinates">
            <summary>
            The texture coordinates variable name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.VaryingNameDeclarations.ViewDirection">
            <summary>
            The view direction variable name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.VaryingNameDeclarations.CameraPosition">
            <summary>
            The camera position variable name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.VaryingNameDeclarations.Tangent">
            <summary>
            The tangents variable name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.VaryingNameDeclarations.Bitangent">
            <summary>
            The bitangents variable name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.VaryingNameDeclarations.Color">
            <summary>
            The vertex colors variable name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.VaryingNameDeclarations.Position">
            <summary>
            The vertex position variable name.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.ShaderShards.VaryingNameDeclarations.Normal">
            <summary>
            The vertex normal variable name.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.Vertex.VertMainShard">
            <summary>
            Collection of Shader Shards, describing the Main method of a vertex shader.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Vertex.VertMainShard.VertexMain(Fusee.Engine.Core.ShaderShards.ShaderEffectProps)">
            <summary>
            Creates the main method for the vertex shader, used in forward rendering.
            The naming of the out parameters is the same as in the <see cref="T:Fusee.Engine.Core.ShaderShards.Vertex.VertPropertiesShard"/>.
            </summary>
            <param name="effectProps">The <see cref="T:Fusee.Engine.Core.ShaderShards.ShaderEffectProps"/> is the basis to decide, which calculations need to be made. E.g. do we have a weight map? If so, adjust the gl_Position.</param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.ShaderShards.Vertex.VertPropertiesShard">
            <summary>
            Collection of Shader Shards, describing possible in, out and uniform properties of a vertex shader.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Vertex.VertPropertiesShard.InAndOutParams(Fusee.Engine.Core.ShaderShards.ShaderEffectProps)">
            <summary>
            Creates the in (with prefix "fu") and out parameters of the vertex shader, depending on the given ShaderEffectProps.
            </summary>
            <param name="effectProps">>The ShaderEffectProps.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShaderShards.Vertex.VertPropertiesShard.FuseeUniforms(Fusee.Engine.Core.ShaderShards.ShaderEffectProps)">
            <summary>
            Returns the pre defined Fusee uniform parameters of a vertex shader, depending on the given ShaderEffectProps.
            </summary>
            <param name="effectProps">The ShaderEffectProps.</param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.Cascade">
            <summary>
            Saves a axis aligned bounding box in light space and the clipping planes of the associated sub-frustum.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.ShadowMapping">
            <summary>
            Utility class for creating shadow maps.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.ShadowMapping.ParallelSplitCascades(System.Int32,Fusee.Math.Core.float4x4,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,Fusee.Math.Core.float4x4)">
            <summary>
            Calculates the <see cref="T:Fusee.Engine.Core.Cascade"/> for each sub-frustum, used for cascaded shadow mapping.
            The algorithm, used to split the viewing frustum is "Parallel Split Shadow Maps"
            </summary>
            <param name="numberOfCascades">The number of times the viewing frustum is divided. A Cascade is created for each of the sub-frustum.</param>
            <param name="lightView">The lights view matrix.</param>
            <param name="lambda">A constant value, used to weight the logarithmic split with the uniform split of the viewing frustum.</param>
            <param name="zNear">The near clipping plane of the camera.</param>
            <param name="zFar">The far clipping plane of the camera.</param>
            <param name="width">The window width in px.</param>
            <param name="height">The window height in px.</param>
            <param name="fov">The field of view of the camera.</param>
            <param name="view">The view matrix.</param>        
        </member>
        <member name="M:Fusee.Engine.Core.ShadowMapping.GetClippingPlanesOfSplitFrustums(System.Single,System.Single,System.Int32,System.Single)">
            <summary>
            Returns the clipping planes for each sub-frustum.
            </summary>
            <param name="zNear">The near clipping plane of the camera.</param>
            <param name="zFar">The far clipping plane of the camera.</param>
            <param name="numberOfCascades">The number of times the viewing frustum is divided. A Cascade is created for each of the sub-frustum.</param>
            <param name="lambda">A constant value, used to wight the logarithmic division with the logarithmic division of the viewing frustum.</param>        
        </member>
        <member name="M:Fusee.Engine.Core.ShadowMapping.SplitClipPlaneUniform(System.Single,System.Single,System.Single)">
            <summary>
            Uniform calculation of the i'th clipping plane.
            </summary>
            <param name="zNear">The near clipping plane of the camera.</param>
            <param name="zFar">The far clipping plane of the camera.</param>
            <param name="splitOverNoOfCascades">A fraction consisting of i and the number of cascades.</param>        
        </member>
        <member name="M:Fusee.Engine.Core.ShadowMapping.SplitClipPlaneLog(System.Single,System.Single,System.Single)">
            <summary>
            Logarithmic calculation of the i'th clipping plane.
            </summary>
            <param name="zNear">The near clipping plane of the camera.</param>
            <param name="zFar">The far clipping plane of the camera.</param>
            <param name="splitOverNoOfCascades">A fraction consisting of i and the number of cascades.</param>        
        </member>
        <member name="M:Fusee.Engine.Core.ShadowMapping.SplitClipPlane(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Weighted calculation of the i'th clipping plane.
            </summary>
            <param name="zNear">The near clipping plane of the camera.</param>
            <param name="zFar">The far clipping plane of the camera.</param>
            <param name="splitOverNoOfCascades">A fraction consisting of i and the number of cascades.</param>   
            <param name="lambda">A constant value, used to weight the logarithmic split with the uniform split of the viewing frustum.</param>
        </member>
        <member name="M:Fusee.Engine.Core.ShadowMapping.FrustumAABBLightSpace(Fusee.Math.Core.float4x4,Fusee.Math.Core.float3[])">
            <summary>
            Calculates the axis aligned bounding box in light space.
            </summary>
            <param name="lightView">The view matrix of the light.</param>
            <param name="frustumCorners">The world space frustum corners of a cascade.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.ShadowMapping.CascadesProjectionMatrices(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single)">
            <summary>
            Returns a tuple of a projection matrix and the clipping planes for each sub-frustum.
            </summary>
            <param name="numberOfCascades">The number of times the viewing frustum is divided. A Cascade is created for each of the sub-frustum.</param>      
            <param name="lambda">A constant value, used to weight the logarithmic split with the uniform split of the viewing frustum.</param>
            <param name="zNear">The near clipping plane of the camera.</param>
            <param name="zFar">The far clipping plane of the camera.</param>
            <param name="width">The window width in px.</param>
            <param name="height">The window height in px.</param>
            <param name="fov">The field of view of the camera.</param>              
        </member>
        <member name="M:Fusee.Engine.Core.ShadowMapping.CascadeCornersWorldSpace(System.Int32,System.Single,System.Single,System.Single,System.Int32,System.Int32,System.Single,Fusee.Math.Core.float4x4)">
            <summary>
            Returns a tuple of the world space frustum corners and the clipping planes for each sub-frustum.
            </summary>
            <param name="numberOfCascades">The number of times the viewing frustum is divided. A Cascade is created for each of the sub-frustum.</param>      
            <param name="lambda">A constant value, used to weight the logarithmic split with the uniform split of the viewing frustum.</param>
            <param name="zNear">The near clipping plane of the camera.</param>
            <param name="zFar">The far clipping plane of the camera.</param>
            <param name="width">The window width in px.</param>
            <param name="height">The window height in px.</param>
            <param name="fov">The field of view of the camera.</param>    
            <param name="view">The view matrix.</param> 
        </member>
        <member name="M:Fusee.Engine.Core.ShadowMapping.CreateOrthographic(Fusee.Math.Core.AABBf)">
            <summary>
            Creates a orthographic projection matrix from a bounding box. This matrix is named "crop" matrix in the literature.
            </summary>
            <param name="aabb">The bounding box.</param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.SixDOFDevice">
            <summary>
            Special case of an <see cref="T:Fusee.Engine.Core.InputDevice"/> identifying itself as a <see cref="F:Fusee.Engine.Common.DeviceCategory.SixDOF"/>.
            Defines convenience methods to access the typical gamepad axes and buttons. Registers
            the gamepad dpad axes.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SixDOFDevice.#ctor(Fusee.Engine.Common.IInputDeviceImp)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.SixDOFDevice"/> class.
            </summary>
            <param name="inpDeviceImp">The platform dependent connector to the underlying physical device.</param>
        </member>
        <member name="P:Fusee.Engine.Core.SixDOFDevice.Translation">
            <summary>
            Gets the deflection values.
            </summary>
            <value>
            The SixDOF device´s deflection from its resting position.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.SixDOFDevice.Rotation">
            <summary>
            Gets the rotation values.
            </summary>
            <value>
            The SixDOF device´s rotation from its resting position.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.SixDOFDevice.XDesc">
            <summary>
            Retrieves information about the x axis.
            </summary>
            <value>
            The description for the x axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.SixDOFDevice.YDesc">
            <summary>
            Retrieves information about the y axis.
            </summary>
            <value>
            The description for the y axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.SixDOFDevice.ZDesc">
            <summary>
            Retrieves information about the z axis.
            </summary>
            <value>
            The description for the z axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.SixDOFDevice.XRotDesc">
            <summary>
            Retrieves information about the x rotation axis.
            </summary>
            <value>
            The description for the x rotation axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.SixDOFDevice.YRotDesc">
            <summary>
            Retrieves information about the y rotation axis.
            </summary>
            <value>
            The description for the y rotation axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.SixDOFDevice.ZRotDesc">
            <summary>
            Retrieves information about the z rotation axis.
            </summary>
            <value>
            The description for the z rotation axis.
            </value>
        </member>
        <member name="T:Fusee.Engine.Core.SliderConstraint">
            <summary>
            Implements the slider constraint
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.AnchorInA">
            <summary>
            Returns the anchor in a.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.AnchorInB">
            <summary>
            Returns the anchor in b.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.AngularDepth">
            <summary>
            Returns the angular depth.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.AngularPos">
            <summary>
            Returns the angular position.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SliderConstraint.CalculateTransforms(Fusee.Math.Core.float4x4,Fusee.Math.Core.float4x4)">
            <summary>
            Calculates the transform for A and B.
            </summary>
            <param name="transA"></param>
            <param name="transB"></param>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.CalculatedTransformA">
            <summary>
            Returns the calculated transforms of a.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.CalculatedTransformB">
            <summary>
            Returns the calculated transforms of b.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.DampingDirAngular">
            <summary>
            Gets and sets the angular dampening direction.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.DampingDirLin">
            <summary>
            Gets and sets the linear dampening direction.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.DampingLimAngular">
            <summary>
            Gets and sets the angular dampening lim.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.DampingLimLin">
            <summary>
            Gets and sets the linear dampening lim.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.DampingOrthoAngular">
            <summary>
            Gets and sets the angular dampening orthogonals.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.DampingOrthoLin">
            <summary>
            Gets and sets the linear dampening orthogonals.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.FrameOffsetA">
            <summary>
            Returns the frame offset for a.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.FrameOffsetB">
            <summary>
            Returns the frame offset for b.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.LinDepth">
            <summary>
            Returns the linear depth.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.LinPos">
            <summary>
            Return the linear position.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.LowerAngularLimit">
            <summary>
            Gets and sets the lower angular limit.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.LowerLinLimit">
            <summary>
            Gets and sets the lower linear limit.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.MaxAngularMotorForce">
            <summary>
            Gets and sets the maximum angular motor force.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.MaxLinMotorForce">
            <summary>
            Gets and sets the maximum linear motor force.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.PoweredAngularMotor">
            <summary>
            Gets and sets the powered angular motor.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.PoweredLinMotor">
            <summary>
            Gets and sets the linear powered motor.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.RestitutionDirAngular">
            <summary>
            Gets and sets the  angular restitution direction.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.RestitutionDirLin">
            <summary>
            Gets and sets the linear restitution direction.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.RestitutionLimAngular">
            <summary>
            Gets and sets the angular restitution lim.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.RestitutionLimLin">
            <summary>
            Gets and sets the linear restitution lim.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.RestitutionOrthoAngular">
            <summary>
            Gets and sets the angular restitution orthogonal.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.RestitutionOrthoLin">
            <summary>
            Gets and sets the linear restitution orthogonal.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SliderConstraint.SetFrames(Fusee.Math.Core.float4x4,Fusee.Math.Core.float4x4)">
            <summary>
            Sets the frames.
            </summary>
            <param name="frameA"></param>
            <param name="frameB"></param>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.SoftnessDirAngular">
            <summary>
            Gets and sets the angular softness direction.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.SoftnessDirLin">
            <summary>
            Gets and sets the linear softness direction.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.SoftnessLimAngular">
            <summary>
            Gets and sets the angular softness lim.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.SoftnessLimLin">
            <summary>
            Gets and sets the linear softness lim.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.SoftnessOrthoAngular">
            <summary>
            Gets and sets the angular softness orthogonal.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.SoftnessOrthoLin">
            <summary>
            Gets and sets the linear softness orthogonal.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.SolveAngularLimit">
            <summary>
            Returns the solved angular limit.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.SolveLinLimit">
            <summary>
            Returns the solved linear limit.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.TargetAngularMotorVelocity">
            <summary>
            Gets and sets the target angular motor velocity.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.TargetLinMotorVelocity">
            <summary>
            Gets and sets the target linear motor velocity.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SliderConstraint.TestAngularLimits">
            <summary>
            Tests the angular limits.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SliderConstraint.TestLinLimits">
            <summary>
            Tests the linear limits.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.UpperAngularLimit">
            <summary>
            Gets and sets the upper angular limit.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.UpperLinLimit">
            <summary>
            Gets and sets the upper linear limit.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.UseFrameOffset">
            <summary>
            Gets and sets the use of frame offset.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.UseLinearReferenceFrameA">
            <summary>
            Gets and sets the use of the linear reference frame a.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.RigidBodyA">
            <summary>
            Returns the rigid body a.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SliderConstraint.RigidBodyB">
            <summary>
            Returns the rigid body b.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SliderConstraint.GetUid">
            <summary>
            Returns the Uid.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.SphereShape">
            <summary>
            implements a collision shape in form of a sphere.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SphereShape.Margin">
            <summary>
            Gets and sets the margin of the sphere shape.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SphereShape.LocalScaling">
            <summary>
            Gets and sets the local scaling of the sphere shape.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.SphereShape.Radius">
            <summary>
            Gets and sets the radius of the sphere shape.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.SSAOHelper">
            <summary>
            Defines methods for creating the SSAO kernel and the noise texture.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.SSAOHelper.CreateKernel(System.Int32)">
            <summary>
            Creates a hemispherical kernel with more samples closer to the center. 
            </summary>
            <param name="kernelSize">Number of samples.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.SSAOHelper.CreateNoiseTex(System.Int32)">
            <summary>
            Creates a noise texture with size 4x4.
            </summary>
            <param name="noiseSize">Number of random values used to rotate the sample kernel.</param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.StaticPlaneShape">
            <summary>
            Implements a collision shape in form of a static plane.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.StaticPlaneShape.PlaneConstant">
            <summary>
            Returns the plane constant.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.StaticPlaneShape.PlaneNormal">
            <summary>
            Returns the plane´s normal.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.StaticPlaneShape.Margin">
            <summary>
            Returns the plane´s Margin
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.TangentSpaceCalulator">
            <summary>
            Static class for tangent space calculation
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.TangentSpaceCalulator.CalculateTangents(Fusee.Engine.Core.Scene.Mesh)">
            <summary>
            Calculates the tangents of a mesh
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.TangentSpaceCalulator.CalculateBiTangents(Fusee.Engine.Core.Scene.Mesh)">
            <summary>
            Calculates the bitangents of a mesh
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="T:Fusee.Engine.Core.Texture">
            <summary>
            Texture implements <see cref="T:Fusee.Base.Common.IImageData"/> and is used inside <see cref="T:Fusee.Engine.Core.RenderContext"/> to render bitmaps in fusee.
            </summary>
        </member>
        <member name="E:Fusee.Engine.Core.Texture.TextureChanged">
            <summary>
            TextureChanged event notifies observing TextureManager about property changes and the Texture's disposal.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Texture.SessionUniqueIdentifier">
            <summary>
            SessionUniqueIdentifier is used to verify a Textures's uniqueness in the current session.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Texture.Width">
            <summary>
            Width in pixels.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Texture.Height">
            <summary>
            Height in pixels.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Texture.PixelData">
            <summary>
            The raw pixel data byte buffer. This byte buffer will be uploaded to the GPU inside <see cref="T:Fusee.Engine.Core.RenderContext"/>
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Texture.PixelFormat">
            <summary>
            Provides additional information abut this Texture's pixel encoding.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Texture.IsEmpty">
            <summary>
            Checks if an image contains no data by checking if <see cref="P:Fusee.Engine.Core.Texture.Width"/> or <see cref="P:Fusee.Engine.Core.Texture.Height"/> is 0.
            </summary>
            <value>
            <c>true</c> if this instance is empty; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.Texture.DoGenerateMipMaps">
            <summary>
            Specifies if mipmaps are created for this texture.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Texture.WrapMode">
            <summary>
            Specifies the texture's wrap mode, see <see cref="T:Fusee.Engine.Common.TextureWrapMode"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Texture.FilterMode">
            <summary>
            Specifies the texture's filter mode, see <see cref="T:Fusee.Engine.Common.TextureWrapMode"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Texture.TextureType">
            <summary>
            Type of the render texture, <see cref="T:Fusee.Engine.Common.RenderTargetTextureTypes"/>.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Texture.#ctor">
            <summary>
            Creates a new instance of type Texture.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Texture.#ctor(System.Byte[],System.Int32,System.Int32,Fusee.Base.Common.ImagePixelFormat,System.Boolean,Fusee.Engine.Common.TextureFilterMode,Fusee.Engine.Common.TextureWrapMode)">
            <summary>
            Constructor initializes a Texture from a pixelData byte buffer, width and height in pixels and <see cref="T:Fusee.Base.Common.ImagePixelFormat"/>.
            </summary>
            <param name="pixelData">The raw pixelData byte buffer that makes up the texture.</param>
            <param name="width">Width in pixels.</param>
            <param name="height">Height in pixels.</param>
            <param name="colorFormat">Provides additional information about pixel encoding.</param>
            <param name="generateMipMaps">Defines if mipmaps are created.</param>
            <param name="filterMode">Defines the filter mode <see cref="T:Fusee.Engine.Common.TextureFilterMode"/>.</param>
            <param name="wrapMode">Defines the wrapping mode <see cref="T:Fusee.Engine.Common.TextureWrapMode"/>.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Texture.#ctor(Fusee.Base.Common.IImageData,System.Boolean,Fusee.Engine.Common.TextureFilterMode,Fusee.Engine.Common.TextureWrapMode)">
            <summary>
            Initialize a Texture from an existing IImageData. The input IImageData will be copied into this Texture via <seealso cref="M:Fusee.Engine.Core.Texture.Blt(System.Int32,System.Int32,Fusee.Base.Common.IImageData,System.Int32,System.Int32,System.Int32,System.Int32)"/> command.
            </summary>
            <param name="imageData">The existing <see cref="T:Fusee.Base.Common.IImageData"/> that will be copied to initialize a Texture instance.</param>
            <param name="generateMipMaps">Defines if mipmaps are created.</param>
            <param name="filterMode">Defines the filter mode <see cref="T:Fusee.Engine.Common.TextureFilterMode"/>.</param>
            <param name="wrapMode">Defines the wrapping mode <see cref="T:Fusee.Engine.Common.TextureWrapMode"/>.</param>
        </member>
        <member name="M:Fusee.Engine.Core.Texture.Blt(System.Int32,System.Int32,Fusee.Base.Common.IImageData,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Copies a rectangular block of pixel data from a source image to a this image (Blt = BlockTransfer).
            </summary>
            <param name="xDst">The x destination coordinate (where to place the block within dst).</param>
            <param name="yDst">The y destination coordinate (where to place the block within dst).</param>
            <param name="src">The source image.</param>
            <param name="xSrc">The x source coordinate (where to start copying from within src).</param>
            <param name="ySrc">The y source coordinate (where to start copying from within src).</param>
            <param name="width">The width of the block to copy. (default is src.Width).</param>
            <param name="height">The height of the block to copy (default is src.Height).</param>
            <remarks>
                All specified parameters are clipped to avoid out-of-bounds indices. No warnings or exceptions are issued
                in case clipping results in a smaller or an empty block.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.Texture.ScanLines(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Retrieve a rectangular block from this image that is represented by horizontal ScanLines from top to bottom along width and height, beginning at offsets xSrc and ySrc.
            </summary>
            <param name="xSrc">x offset in pixels.</param>
            <param name="ySrc">y offset in pixels.</param>
            <param name="width">width of ScanLines in pixels.</param>
            <param name="height">Height describes how many ScanLines will be returned.</param>
            <returns>Returns a rectangular block of horizontal ScanLine instances.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Fusee.Engine.Core.Texture.Dispose">
            <summary>
            Implementation of the <see cref="T:System.IDisposable"/> interface.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Texture.Finalize">
            <summary>
            Destructor calls <see cref="M:Fusee.Engine.Core.Texture.Dispose"/> in order to fire TextureChanged event.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.Texture.ClipBlt(System.Int32@,System.Int32,System.Int32@,System.Int32,System.Int32@)">
            <summary>
            Performs clipping along one dimension of a blt operation.
            </summary>
            <param name="iDst">The destination coordinate.</param>
            <param name="sizeDst">The size of the destination buffer.</param>
            <param name="iSrc">The source coordinate.</param>
            <param name="sizeSrc">The size of the source coordinate.</param>
            <param name="sizeBlk">The size of the block to copy.</param>
            <remarks>
               All parameters decorated with "ref" might be altered to avoid out-of-bounds indices.
               If the resulting number of items to copy is 0, only sizeBlk will be set to 0. No other
               ref-parameter will be altered then.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.TextureManager.#ctor(Fusee.Engine.Common.IRenderContextImp)">
            <summary>
            Creates a new Instance of TextureManager. Th instance is handling the memory allocation and deallocation on the GPU by observing Texture.cs objects.
            </summary>
            <param name="renderContextImp">The RenderContextImp is used for GPU memory allocation and deallocation. See <see cref="M:Fusee.Engine.Core.TextureManager.RegisterNewTexture(Fusee.Engine.Core.Texture)"/>.</param>
        </member>
        <member name="M:Fusee.Engine.Core.TextureManager.Cleanup">
            <summary>
            Call this method on the main thread after RenderContext.Render in order to cleanup all not used Buffers from GPU memory.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.Time">
            <summary>
            The Time class provides all time information. Time is a staticton (a singleton with an additional
            static interface). 
            </summary>
            <remarks>
            Use the input instance in cases where you actually need an 
            object to pass around (although there is no such use case in FUSEE code at all).
            Use the static access in all other cases to reduce typing Input.Instance
            over and over again. Use <code>using static Fusee.Engine.Core.Time</code> to
            directly access <see cref="P:Fusee.Engine.Core.Time.FramePerSecond"/>, <see cref="P:Fusee.Engine.Core.Time.DeltaTime"/> etc.
            without even typing a namespace or class name.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.Time.TimeFramesPerSecondAverage">
            <summary>
            Provides the average framerate of the last second (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Time.FramesPerSecondAverage">
            <summary>
            Provides the average framerate of the last second (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Time.TimeRealTimeSinceStart">
            <summary>
            Provides the passed time since start of the application unaffected by TimeScale (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Time.RealTimeSinceStart">
            <summary>
            Provides the passed time since start of the application unaffected by TimeScale (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Time.TimeFramePerSecond">
            <summary>
            Provides the peek framerate, updated every frame (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Time.FramePerSecond">
            <summary>
            Provides the peek framerate, updated every frame (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Time.TimeFrames">
            <summary>
            Provides the total number of rendered frames (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Time.Frames">
            <summary>
            Provides the total number of rendered frames (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Time.TimeDeltaTime">
            <summary>
            Provides the DeltaTime since the last frame in milliseconds that is effected by the TimeScale (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Time.DeltaTime">
            <summary>
            Provides the DeltaTime since the last frame in milliseconds that is effected by the TimeScale (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Time.TimeRealDeltaTimeMs">
            <summary>
            Provides the DeltaTime since the last frame in milliseconds that is unaffected by the TimeScale (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Time.RealDeltaTimeMs">
            <summary>
            Provides the DeltaTime since the last frame in milliseconds that is unaffected by the TimeScale (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Time.InstTimeSinceStart">
            <summary>
            Provides the passed time since start of the application effected by TimeScale (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Time.TimeSinceStart">
            <summary>
            Provides the passed time since start of the application effected by TimeScale (read only).
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.Time.InstTimeScale">
            <summary>
            The TimeScale modifies the speed of the time.
            </summary>
            <remarks>
            0 the time stops.
            1 normal time speed.
            Smaller then 1 time passes slower. 
            Bigger then 1 time passes faster.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.Time.TimeScale">
            <summary>
            The TimeScale modifies the speed of the time.
            </summary>
            <remarks>
            0 the time stops.
            1 normal time speed.
            Smaller then 1 time passes slower. 
            Bigger then 1 time passes faster.
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.Time.Instance">
            <summary>
            Provides the Singleton Instance of the Time Class.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.TwoPointAction">
            <summary>
            Symbolic value describing the double-touchpoint action with the highest intensity performed by a user with the first two touchpoints.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.TwoPointAction.None">
            <summary>
            The user currently performs no action (no two touchpoints are active or the user
            currently does not move the two touchpoints).
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.TwoPointAction.Pinch">
            <summary>
            The user performs a pinch action, e.g. moves the two touchpoints toward each others or moves them into opposite
            directions. Use <see cref="P:Fusee.Engine.Core.TouchDevice.TwoPointDistance"/> or <see cref="P:Fusee.Engine.Core.TouchDevice.TwoPointDistanceVel"/> to retrieve
            values for derived actions based on pinch gestures.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.TwoPointAction.Move">
            <summary>
            The user moves the first two active touchpoints into similar directions maintaining their distance and relative position. 
            Use <see cref = "P:Fusee.Engine.Core.TouchDevice.TwoPointMidPoint" /> or <see cref = "P:Fusee.Engine.Core.TouchDevice.TwoPointMidPointVel" /> to retrieve
            values for derived actions based on two-point move-gestures.     
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.TwoPointAction.Rotate">
            <summary>
            The user rotates the first two active touchpoints around a common rotation center while maintaining their distance.
            Use <see cref = "P:Fusee.Engine.Core.TouchDevice.TwoPointAngle" /> or <see cref = "P:Fusee.Engine.Core.TouchDevice.TwoPointAngleVel" /> to retrieve
            values for derived actions based on rotation gestures.     
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.TouchDevice">
            <summary>
            Special case of an <see cref="T:Fusee.Engine.Core.InputDevice"/> identifying itself as a <see cref="F:Fusee.Engine.Common.DeviceCategory.Touch"/>.
            Defines convenience methods to access the touch buttons and axes.
            </summary>
            <remarks>
            A touch device represents input typically performed by fingers or a stylus. Touch devices support
            simultaneous presence of multiple touchpoints (performed by multiple fingers). Each touchpoint 
            is captured by four axes and one button. The button state (pressed or not pressed) signals the presence
            of the respective axis. Two positional axes for each touchpoint reveal the position in X/Y screen space 
            and two velocity axes represent the current velocity along X and Y.
            
            In Addition to tracking individual touchpoints, this device also tracks the simultaneous movements of the 
            first two active touchpoints and generates derived information, like two-point-move, pinch or rotate.
            </remarks>
        </member>
        <member name="M:Fusee.Engine.Core.TouchDevice.#ctor(Fusee.Engine.Common.IInputDeviceImp)">
            <summary>
            Initializes a new instance of the <see cref="T:Fusee.Engine.Core.TouchDevice"/> class.
            </summary>
            <param name="inpDeviceImp">The "driver".</param>
        </member>
        <member name="M:Fusee.Engine.Core.TouchDevice.RegisterTtpAngleAxis">
            <summary>
            Registers a new (Two-) touch point angle and returns the id.
            </summary>
            <returns>The id of the newly registered angle axis.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.TouchDevice.RegisterTtpDistanceAxis">
            <summary>
            Registers a new (Two-) touch point distance and returns its id.
            </summary>
            <returns>The id of the newly registered distance.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.TouchDevice.RegisterTtpMidpointAxis(System.Int32,System.Int32,System.Int32,System.Int32,Fusee.Engine.Common.AxisDirection,System.String)">
            <summary>
            Registers a new (Two-) touch point midpoint and returns its id.
            </summary>
            <param name="axId0">The first point.</param>
            <param name="axId1">The second point.</param>
            <param name="axIdMin">The minimum value of the chosen axis.</param>
            <param name="axIdMax">The maximum value of the chosen axis.</param>
            <param name="dir">The direction of the axis.</param>
            <param name="name">The name of the axis.</param>
            <returns>The id of the registered midpoint.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.TouchDevice.GetTouchActive(Fusee.Engine.Common.TouchPoints)">
            <summary>
            Returns a value signaling if the given touchpoint is currently active (if something hits the screen).
            </summary>
            <param name="touch">The touchpoint to check.</param>
            <returns>true if this touch is active (a finger is on the screen), otherwise false.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.TouchDevice.GetPosition(Fusee.Engine.Common.TouchPoints)">
            <summary>
            Returns the current position of the given touchpoint. 
            The returned values are only valid if <see cref="M:Fusee.Engine.Core.TouchDevice.GetTouchActive(Fusee.Engine.Common.TouchPoints)"/> holds true for the same touchpoint.
            </summary>
            <param name="touch">The touchpoint.</param>
            <returns>The X/Y position of the given touchpoint.</returns>
        </member>
        <member name="M:Fusee.Engine.Core.TouchDevice.GetVelocity(Fusee.Engine.Common.TouchPoints)">
            <summary>
            Retrieves the current velocity (in pixels per second) of the given touch point. 
            The returned values are only valid if <see cref="M:Fusee.Engine.Core.TouchDevice.GetTouchActive(Fusee.Engine.Common.TouchPoints)"/> holds true for the same touchpoint.
            </summary>
            <param name="touch">The touchpoint.</param>
            <returns>The two-dimensional velocity of the touchpoint.</returns>
        </member>
        <member name="P:Fusee.Engine.Core.TouchDevice.ActiveTouchpoints">
            <summary>
            Retrieves the number of currently active touchpoints (e.g. the number of fingers currently touching the screen).
            </summary>
            <value>
            The number of active touchpoints.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.TouchDevice.TwoPoint">
            <summary>
            Gets a value indicating whether two touchpoints are active.
            </summary>
            <value>
              <c>true</c> if currently two touchpoints are active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.TouchDevice.TwoPointGesture">
            <summary>
            Gets a value indicating the <see cref="T:Fusee.Engine.Core.TwoPointAction"/> currently performed with the highest intensity.
            </summary>
            <value>
            The double touch action currently performed by the user with the highest intensity.
            </value>
            <remarks>
            Two moving touchpoints on the screen can be interpreted in various ways. It's up to the application to interpret the two individual changes in position
            as <see cref="F:Fusee.Engine.Core.TwoPointAction.Move"/> , as a <see cref="F:Fusee.Engine.Core.TwoPointAction.Rotate"/> or as a <see cref="F:Fusee.Engine.Core.TwoPointAction.Pinch"/> . Use this method to retrieve
            a symbolic value which of these three possibilities is currently performed with the highest intensity. Applications should sensibly decide whether to 
            allow to change their behavior during a two-point-gesture (as long as <see cref="P:Fusee.Engine.Core.TouchDevice.TwoPoint"/> holds true) or to check this value only initially whenever
            a two-point gesture starts, or do something in-between. As a practice: Investigate how the 
            <a href="https://play.google.com/store/apps/details?id=com.google.earth">Google Earth mobile app</a> handles this question!
            </remarks>
        </member>
        <member name="P:Fusee.Engine.Core.TouchDevice.TwoPointDistance">
            <summary>
            Gets the distance between the first two touchpoints. Use this value if you want to implement pinch-like actions based on the current absolute distance.
            </summary>
            <value>
            The distance between the first two active touchpoints, or zero, if no two touchpoints are active.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.TouchDevice.TwoPointDistanceVel">
            <summary>
            Gets velocity of the distance between the first two touchpoints. Use this value if you want to implement pinch-like actions based on the current speed of the distance.
            </summary>
            <value>
            The distance velocity. Positive values mean fingers move away from each others (Zoom-In), negative values mean fingers approach each others (Zoom-Out).
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.TouchDevice.TwoPointAngle">
            <summary>
            Gets the angle of a line between the first two active touchpoints measured from the positive screen x-axis. Use this value if you want to implement rotation-like actions 
            based on the current absolute angle.
            </summary>
            <value>
            The angle value in radians. Ranges between -PI and PI. An angle of zero denotes the positive x-axis.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.TouchDevice.TwoPointAngleVel">
            <summary>
            Gets the angular velocity of a line between the first two active touchpoints measured from the positive screen x-axis. Use this value if you want to implement rotation-like actions 
            based on the current rotation speed of the first two touchpoints.
            </summary>
            <value>
            The angular velocity of the rotation movement of the first two touchpoints. Positive values mean counter-clockwise rotation, negative values mean clockwise rotation.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.TouchDevice.TwoPointMidPoint">
            <summary>
            Gets midpoint between the first two active touch points. Use this value if you want to implement two-finger movement-like actions based on the current averaged
            absolute position of the first two touchpoints
            </summary>
            <value>
            The midpoint (halfway between) touchpoint 0 and touchpoint 1.
            </value>
        </member>
        <member name="P:Fusee.Engine.Core.TouchDevice.TwoPointMidPointVel">
            <summary>
            Gets speed of the midpoint between the first two active touch points. Use this value if you want to implement two-finger movement-like actions based on the current 
            averaged speed of the first two touchpoints.
            </summary>
            <value>
            The two-dimensional speed vector of the midpoint between touchpoint 0 and touchpoint 1.
            </value>
        </member>
        <member name="T:Fusee.Engine.Core.VideoManager">
            <summary>
            Implements the video manager.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.VideoManager.LoadVideoFromFile(System.String,System.Boolean,System.Boolean)">
            <summary>
            Loads a video file.
            </summary>
            <param name="filename"></param>
            <param name="loopVideo"></param>
            <param name="useAudio"></param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.VideoManager.LoadVideoFromCamera(System.Int32,System.Boolean)">
            <summary>
            Loads video directly of a camera.
            </summary>
            <param name="cameraIndex"></param>
            <param name="useAudio"></param>
            <returns></returns>
        </member>
        <member name="P:Fusee.Engine.Core.VideoManager.Instance">
            <summary>
            Creates an instance of <see cref="T:Fusee.Engine.Core.VideoManager"/>.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.VideoStream">
            <summary>
            Implements the video stream.
            </summary>
        </member>
        <member name="F:Fusee.Engine.Core.VideoStream._imp">
            <summary>
            The video stream.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.VideoStream.GetCurrentFrame">
            <summary>
            Returns the current frame.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.VideoStream.Start">
            <summary>
            Starts the video stream.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.VideoStream.Stop">
            <summary>
            Stops the video stream.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.WritableCubeMap">
            <summary>
            Special type of <see cref="T:Fusee.Engine.Core.WritableTexture"/>. If this type is used a cube map with six faces is created on the gpu.
            </summary>
        </member>
        <member name="E:Fusee.Engine.Core.WritableCubeMap.TextureChanged">
            <summary>
            TextureChanged event notifies observing TextureManager about property changes and the Texture's disposal.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableCubeMap.SessionUniqueIdentifier">
            <summary>
            SessionUniqueIdentifier is used to verify a Textures's uniqueness in the current session.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableCubeMap.DoGenerateMipMaps">
            <summary>
            Specifies if mipmaps are created for this texture.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableCubeMap.WrapMode">
            <summary>
            Specifies the texture's wrap mode, see <see cref="T:Fusee.Engine.Common.TextureWrapMode"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableCubeMap.FilterMode">
            <summary>
            Specifies the texture's filter mode, see <see cref="T:Fusee.Engine.Common.TextureWrapMode"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableCubeMap.TextureType">
            <summary>
            Type of the render texture, <see cref="T:Fusee.Engine.Common.RenderTargetTextureTypes"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableCubeMap.Width">
            <summary>
            Width in pixels.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableCubeMap.Height">
            <summary>
            Height in pixels.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableCubeMap.PixelFormat">
            <summary>
            PixelFormat provides additional information about pixel encoding.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableCubeMap.CompareMode">
            <summary>
            Specifies the texture's comparison mode, see <see cref="T:Fusee.Engine.Common.TextureCompareMode"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableCubeMap.CompareFunc">
            <summary>
            Specifies the texture's comparison function />.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.WritableCubeMap.#ctor(Fusee.Engine.Common.RenderTargetTextureTypes,Fusee.Base.Common.ImagePixelFormat,System.Int32,System.Int32,System.Boolean,Fusee.Engine.Common.TextureFilterMode,Fusee.Engine.Common.TextureWrapMode,Fusee.Engine.Common.TextureCompareMode,Fusee.Engine.Common.Compare)">
            <summary>
            Creates a new instance of type "WritableTexture".
            </summary>
            <param name="colorFormat">The color format of the texture, <see cref="T:Fusee.Base.Common.ImagePixelFormat"/></param>
            <param name="width">Width in px.</param>
            <param name="height">Height in px.</param>
            <param name="generateMipMaps">Defines if mipmaps are created.</param>
            <param name="filterMode">Defines the filter mode <see cref="T:Fusee.Engine.Common.TextureFilterMode"/>.</param>
            <param name="wrapMode">Defines the wrapping mode <see cref="T:Fusee.Engine.Common.TextureWrapMode"/>.</param>
            <param name="compareMode">Defines the compare mode <see cref="T:Fusee.Engine.Common.TextureCompareMode"/>´.</param>
            /// <param name="compareFunc">Defines the compare function.</param>
            <param name="textureType">The type of the texture.</param>        
        </member>
        <member name="M:Fusee.Engine.Core.WritableCubeMap.Dispose">
            <summary>
            Implementation of the <see cref="T:System.IDisposable"/> interface.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.WritableCubeMap.Finalize">
            <summary>
            Destructor calls <see cref="M:Fusee.Engine.Core.WritableCubeMap.Dispose"/> in order to fire TextureChanged event.
            </summary>
        </member>
        <member name="T:Fusee.Engine.Core.WritableTexture">
            <summary>
            Use writable textures if you want to render into a texture.
            Does NOT offer access to the pixel data.
            </summary>
        </member>
        <member name="E:Fusee.Engine.Core.WritableTexture.TextureChanged">
            <summary>
            TextureChanged event notifies observing TextureManager about property changes and the Texture's disposal.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableTexture.SessionUniqueIdentifier">
            <summary>
            SessionUniqueIdentifier is used to verify a Textures's uniqueness in the current session.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableTexture.TextureType">
            <summary>
            Type of the render texture, <see cref="T:Fusee.Engine.Common.RenderTargetTextureTypes"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableTexture.Width">
            <summary>
            Width in pixels.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableTexture.Height">
            <summary>
            Height in pixels.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableTexture.PixelFormat">
            <summary>
            PixelFormat provides additional information about pixel encoding.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableTexture.DoGenerateMipMaps">
            <summary>
            Specifies if mipmaps are created for this texture.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableTexture.WrapMode">
            <summary>
            Specifies the texture's wrap mode, see <see cref="T:Fusee.Engine.Common.TextureWrapMode"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableTexture.FilterMode">
            <summary>
            Specifies the texture's filter mode, see <see cref="T:Fusee.Engine.Common.TextureWrapMode"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableTexture.CompareMode">
            <summary>
            Specifies the texture's comparison mode, see <see cref="T:Fusee.Engine.Common.TextureCompareMode"/>.
            </summary>
        </member>
        <member name="P:Fusee.Engine.Core.WritableTexture.CompareFunc">
            <summary>
            Specifies the texture's comparison function, see <see cref="T:Fusee.Engine.Common.Compare"/>.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.WritableTexture.#ctor(Fusee.Engine.Common.RenderTargetTextureTypes,Fusee.Base.Common.ImagePixelFormat,System.Int32,System.Int32,System.Boolean,Fusee.Engine.Common.TextureFilterMode,Fusee.Engine.Common.TextureWrapMode,Fusee.Engine.Common.TextureCompareMode,Fusee.Engine.Common.Compare)">
            <summary>
            Creates a new instance of type "WritableTexture".
            </summary>
            <param name="texType">Defines the type of the render texture.</param>
            <param name="colorFormat">The color format of the texture, <see cref="T:Fusee.Base.Common.ImagePixelFormat"/></param>
            <param name="width">Width in px.</param>
            <param name="height">Height in px.</param>
            <param name="generateMipMaps">Defines if mipmaps are created.</param>
            <param name="filterMode">Defines the filter mode <see cref="T:Fusee.Engine.Common.TextureFilterMode"/>.</param>
            <param name="wrapMode">Defines the wrapping mode <see cref="T:Fusee.Engine.Common.TextureWrapMode"/>.</param>
            <param name="compareMode">The textures compare mode. If uncertain, leaf on NONE, this is only important for depth (shadow) textures (<see cref="T:Fusee.Engine.Common.TextureCompareMode"/>).</param>
            <param name="compareFunc">The textures compare function. If uncertain, leaf on LEESS, this is only important for depth (shadow) textures and if the CompareMode isn't NONE (<see cref="T:Fusee.Engine.Common.Compare"/>)</param>
        </member>
        <member name="M:Fusee.Engine.Core.WritableTexture.CreatePosTex(System.Int32,System.Int32)">
            <summary>
            Create a texture that is intended to save position information.
            </summary>
            <param name="width">Width in px.</param>
            <param name="height">Height in px.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.WritableTexture.CreateAlbedoTex(System.Int32,System.Int32)">
            <summary>
            Create a texture that is intended to save albedo (rgb channels) information.
            </summary>
            <param name="width">Width in px.</param>
            <param name="height">Height in px.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.WritableTexture.CreateSpecularTex(System.Int32,System.Int32)">
            <summary>
            Create a texture that is intended to save specular information, depending on whether standard or physically based calculation is used.
            </summary>
            <param name="width">Width in px.</param>
            <param name="height">Height in px.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.WritableTexture.CreateNormalTex(System.Int32,System.Int32)">
            <summary>
            Create a texture that is intended to save normal information.
            </summary>
            <param name="width">Width in px.</param>
            <param name="height">Height in px.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.WritableTexture.CreateDepthTex(System.Int32,System.Int32,Fusee.Engine.Common.TextureCompareMode,Fusee.Engine.Common.Compare)">
            <summary>
            Create a texture that is intended to save depth information.
            </summary>
            <param name="width">Width in px.</param>
            <param name="height">Height in px.</param>
            <param name="compareMode">The textures compare mode. If uncertain, leaf on NONE, this is only important for depth (shadow) textures (<see cref="T:Fusee.Engine.Common.TextureCompareMode"/>).</param>
            <param name="compareFunc">The textures compare function. If uncertain, leaf on LEESS, this is only important for depth (shadow) textures and if the CompareMode isn't NONE (<see cref="T:Fusee.Engine.Common.Compare"/>)</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.WritableTexture.CreateSSAOTex(System.Int32,System.Int32)">
            <summary>
            Create a texture that is intended to save SSAO information.
            </summary>
            <param name="width">Width in px.</param>
            <param name="height">Height in px.</param>
            <returns></returns>
        </member>
        <member name="M:Fusee.Engine.Core.WritableTexture.Dispose">
            <summary>
            Implementation of the <see cref="T:System.IDisposable"/> interface.
            </summary>
        </member>
        <member name="M:Fusee.Engine.Core.WritableTexture.Finalize">
            <summary>
            Destructor calls <see cref="M:Fusee.Engine.Core.WritableTexture.Dispose"/> in order to fire TextureChanged event.
            </summary>
        </member>
    </members>
</doc>
